{
.appVersion = "99";
DisplayStrings = (
A
);
copyright = "Copyright (c) 2018 by Rajesh Rajput. All rights reserved.";
date = "2017-02-05 23:58:31 +0000";
designer = "Rajesh Rajput";
designerURL = "https://behance.net/rajputrajesh";
familyName = Morganite;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012languagesystem latn dflt;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature frac;\012feature ordn;\012";
name = aalt;
},
{
automatic = 1;
code = "script latn;\012language CAT;\012sub  l' periodcentered' l by ldot;\012sub  L' periodcentered' L by Ldot;\012";
name = locl;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 750;
capHeight = 699;
customParameters = (
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 3 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0124 3 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0124 153 138 108 81 52 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0125 230 178 138 113 52 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0126 167 138 108 81 52 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 184 138 108 81 52 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 262 215 167 113 72 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0123 204 178 138 81 52 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0127 4 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
30,
21,
27,
36,
24,
33,
0,
6,
-165,
0,
495,
3,
699,
6
);
}
);
descender = -250;
id = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
italicAngle = 15.1;
weight = Light;
weightValue = 300;
widthValue = 5;
xHeight = 495;
}
);
glyphs = (
{
glyphname = A;
lastChange = "2020-02-04 22:39:47 +0000";
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"235 0 LINE",
"164 699 LINE",
"25 698 LINE",
"-45 -1 LINE",
"35 0 LINE",
"55 188 LINE",
"135 188 LINE"
);
},
{
closed = 1;
nodes = (
"95 593 LINE",
"96 593 LINE",
"132 264 LINE",
"58 264 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
9 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 2 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = A;
unicode = 0041;
},
{
glyphname = Aacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"190 0 LINE",
"119 699 LINE",
"73 699 LINE",
"3 0 LINE",
"35 0 LINE",
"55 203 LINE",
"135 203 LINE"
);
},
{
closed = 1;
nodes = (
"95 593 LINE",
"96 593 LINE",
"132 231 LINE",
"58 231 LINE"
);
},
{
closed = 1;
nodes = (
"107 738 LINE",
"162 824 LINE",
"130 824 LINE",
"84 738 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
9 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 2 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 2 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Abreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 203 LINE",
"55 203 LINE",
"35 0 LINE",
"3 0 LINE",
"73 699 LINE",
"119 699 LINE",
"190 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 231 LINE",
"132 231 LINE",
"96 593 LINE",
"95 593 LINE"
);
},
{
closed = 1;
nodes = (
"40 813 LINE",
"40 781 OFFCURVE",
"66.667 756 OFFCURVE",
"96 756 CURVE SMOOTH",
"129.333 756 OFFCURVE",
"155 782.333 OFFCURVE",
"155 813 CURVE",
"133 813 LINE",
"133 794.333 OFFCURVE",
"115.667 777 OFFCURVE",
"97 777 CURVE SMOOTH",
"78.333 777 OFFCURVE",
"61 794.333 OFFCURVE",
"61 813 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = Acircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"190 0 LINE",
"119 699 LINE",
"73 699 LINE",
"3 0 LINE",
"35 0 LINE",
"55 203 LINE",
"135 203 LINE"
);
},
{
closed = 1;
nodes = (
"95 593 LINE",
"96 593 LINE",
"132 231 LINE",
"58 231 LINE"
);
},
{
closed = 1;
nodes = (
"80 824 LINE",
"25 738 LINE",
"58 738 LINE",
"97 806 LINE",
"136 738 LINE",
"168 738 LINE",
"113 824 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
11 2 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 2 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 2 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 2 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Adieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 203 LINE",
"55 203 LINE",
"35 0 LINE",
"3 0 LINE",
"73 699 LINE",
"119 699 LINE",
"190 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 231 LINE",
"132 231 LINE",
"96 593 LINE",
"95 593 LINE"
);
},
{
closed = 1;
nodes = (
"137 816 LINE",
"112 816 LINE",
"112 753 LINE",
"137 753 LINE"
);
},
{
closed = 1;
nodes = (
"80 816 LINE",
"56 816 LINE",
"56 753 LINE",
"80 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Agrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 203 LINE",
"55 203 LINE",
"35 0 LINE",
"3 0 LINE",
"73 699 LINE",
"119 699 LINE",
"190 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 231 LINE",
"132 231 LINE",
"96 593 LINE",
"95 593 LINE"
);
},
{
closed = 1;
nodes = (
"108 738 LINE",
"62 824 LINE",
"30 824 LINE",
"85 738 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Amacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 0 LINE",
"190 0 LINE",
"119 699 LINE",
"73 699 LINE",
"3 0 LINE",
"35 0 LINE",
"55 203 LINE",
"135 203 LINE"
);
},
{
closed = 1;
nodes = (
"95 593 LINE",
"96 593 LINE",
"132 231 LINE",
"58 231 LINE"
);
},
{
closed = 1;
nodes = (
"152 797 LINE",
"38 797 LINE",
"38 772 LINE",
"152 772 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
9 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 2 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Amacron;
unicode = 0100;
},
{
glyphname = Aogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"208 -53 LINE",
"191.066 -81.224 OFFCURVE",
"154 -76.339 OFFCURVE",
"154 -45 CURVE",
"152.667 -29 OFFCURVE",
"167.667 -9.333 OFFCURVE",
"189 0 CURVE",
"190 0 LINE",
"119 699 LINE",
"73 699 LINE",
"3 0 LINE",
"35 0 LINE",
"55 203 LINE",
"135 203 LINE",
"155 0 LINE",
"161 0 LINE",
"143.667 -13.333 OFFCURVE",
"133 -29 OFFCURVE",
"133 -49 CURVE SMOOTH",
"133 -97.676 OFFCURVE",
"202.082 -104.242 OFFCURVE",
"221 -61 CURVE"
);
},
{
closed = 1;
nodes = (
"95 593 LINE",
"96 593 LINE",
"132 231 LINE",
"58 231 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
20 5 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
154 5 170 5 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
9 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
29 8 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = Aring;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 203 LINE",
"55 203 LINE",
"35 0 LINE",
"3 0 LINE",
"73 699 LINE",
"119 699 LINE",
"190 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 231 LINE",
"132 231 LINE",
"96 593 LINE",
"95 593 LINE"
);
},
{
closed = 1;
nodes = (
"128 734 OFFCURVE",
"152 760 OFFCURVE",
"152 788 CURVE SMOOTH",
"152 818.667 OFFCURVE",
"126.667 844 OFFCURVE",
"96 844 CURVE SMOOTH",
"66.667 844 OFFCURVE",
"43 818.667 OFFCURVE",
"43 788 CURVE SMOOTH",
"43 757.333 OFFCURVE",
"69.333 734 OFFCURVE",
"96 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 825 OFFCURVE",
"133 806.667 OFFCURVE",
"133 788 CURVE SMOOTH",
"133 769.333 OFFCURVE",
"116 753 OFFCURVE",
"96 753 CURVE SMOOTH",
"78.667 753 OFFCURVE",
"61 769.333 OFFCURVE",
"61 788 CURVE SMOOTH",
"61 806.667 OFFCURVE",
"78.667 825 OFFCURVE",
"96 825 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
21 15 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
218 15 234 15 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 105 15 121 15 137 15 153 15 169 15 185 15 201 15 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 3 values pushed */
9 15 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
18 12 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Atilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 203 LINE",
"55 203 LINE",
"35 0 LINE",
"3 0 LINE",
"73 699 LINE",
"119 699 LINE",
"190 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 231 LINE",
"132 231 LINE",
"96 593 LINE",
"95 593 LINE"
);
},
{
closed = 1;
nodes = (
"40 770 LINE",
"47.333 779.333 OFFCURVE",
"57 784 OFFCURVE",
"69 784 CURVE SMOOTH",
"88.889 784 OFFCURVE",
"111.276 762 OFFCURVE",
"131 762 CURVE SMOOTH",
"147.667 762 OFFCURVE",
"160.667 770 OFFCURVE",
"170 786 CURVE",
"153 797 LINE",
"145.667 787.667 OFFCURVE",
"136.667 783 OFFCURVE",
"126 783 CURVE SMOOTH",
"115.333 783 OFFCURVE",
"104.833 786.667 OFFCURVE",
"94.5 794 CURVE SMOOTH",
"84.167 801.333 OFFCURVE",
"73.667 805 OFFCURVE",
"63 805 CURVE SMOOTH",
"47.667 805 OFFCURVE",
"35 797 OFFCURVE",
"25 781 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = AE;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"260 669 LINE",
"260 699 LINE",
"73 699 LINE",
"3 0 LINE",
"35 0 LINE",
"54 203 LINE",
"129 203 LINE",
"129 0 LINE",
"263 0 LINE",
"263 30 LINE",
"165 30 LINE",
"165 336 LINE",
"238 336 LINE",
"238 363 LINE",
"165 363 LINE",
"165 669 LINE"
);
},
{
closed = 1;
nodes = (
"97 669 LINE",
"129 669 LINE",
"129 231 LINE",
"56 231 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
17 3 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 275;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = B;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"186 611 LINE SMOOTH",
"186 673.667 OFFCURVE",
"148 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE",
"112 0 LINE SMOOTH",
"148 0 OFFCURVE",
"186 25 OFFCURVE",
"186 81 CURVE SMOOTH",
"186 291 LINE SMOOTH",
"186 333.667 OFFCURVE",
"171 352.667 OFFCURVE",
"151 358 CURVE",
"171 364.667 OFFCURVE",
"186 383.333 OFFCURVE",
"186 426 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 86 LINE SMOOTH",
"150 47.333 OFFCURVE",
"129 30 OFFCURVE",
"109 30 CURVE SMOOTH",
"60 30 LINE",
"60 345 LINE",
"116 345 LINE SMOOTH",
"136 345 OFFCURVE",
"150 327.667 OFFCURVE",
"150 289 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 372 LINE",
"60 669 LINE",
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 651.333 OFFCURVE",
"150 606 CURVE SMOOTH",
"150 428 LINE SMOOTH",
"150 389.333 OFFCURVE",
"136 372 OFFCURVE",
"116 372 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
22 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 20 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 20 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 203;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113 743 LINE",
"168 829 LINE",
"136 829 LINE",
"90 743 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
42 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 0 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = Ccaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 745 LINE",
"173 831 LINE",
"141 831 LINE",
"101 761 LINE",
"62 831 LINE",
"30 831 LINE",
"85 745 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 5 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
45 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
43 0 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = Ccedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"76.306 -117.175 OFFCURVE",
"155 -106.673 OFFCURVE",
"155 -54 CURVE SMOOTH",
"155 -30 OFFCURVE",
"127.667 -15.667 OFFCURVE",
"105 -25 CURVE",
"113 -6 LINE",
"147.667 -4.667 OFFCURVE",
"183 20.667 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 25.276 OFFCURVE",
"53.247 -3.019 OFFCURVE",
"92 -6 CURVE",
"79 -35 LINE",
"87 -38 LINE",
"103 -27.333 OFFCURVE",
"128.667 -35 OFFCURVE",
"130 -55 CURVE SMOOTH",
"132.416 -88.818 OFFCURVE",
"74.71 -91.996 OFFCURVE",
"49 -72 CURVE",
"45 -89 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
1 16 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
11 16 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
51 16 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
32 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 829 LINE",
"31 743 LINE",
"63 743 LINE",
"102 812 LINE",
"142 743 LINE",
"174 743 LINE",
"119 829 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
45 5 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
44 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ccircumflex;
unicode = 0108;
},
{
glyphname = Cdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 283 LINE",
"148 283 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 820 LINE",
"89 820 LINE",
"89 757 LINE",
"114 757 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 5 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 4 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Cdotaccent;
unicode = 010A;
},
{
glyphname = D;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 0 LINE SMOOTH",
"153.238 0 OFFCURVE",
"186 27.044 OFFCURVE",
"186 84 CURVE SMOOTH",
"186 615 LINE SMOOTH",
"186 671.956 OFFCURVE",
"153.238 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE"
);
},
{
closed = 1;
nodes = (
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 655.333 OFFCURVE",
"150 610 CURVE SMOOTH",
"150 89 LINE SMOOTH",
"150 43.667 OFFCURVE",
"129 30 OFFCURVE",
"109 30 CURVE SMOOTH",
"60 30 LINE",
"60 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = D;
unicode = 0044;
},
{
glyphname = Eth;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 0 LINE SMOOTH",
"153.238 0 OFFCURVE",
"186 27.044 OFFCURVE",
"186 84 CURVE SMOOTH",
"186 615 LINE SMOOTH",
"186 671.956 OFFCURVE",
"153.238 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 363 LINE",
"-7 363 LINE",
"-7 337 LINE",
"24 337 LINE",
"24 0 LINE"
);
},
{
closed = 1;
nodes = (
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 655.333 OFFCURVE",
"150 610 CURVE SMOOTH",
"150 89 LINE SMOOTH",
"150 43.667 OFFCURVE",
"129 30 OFFCURVE",
"109 30 CURVE SMOOTH",
"60 30 LINE",
"60 337 LINE",
"91 337 LINE",
"91 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
4 3 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = Dcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 0 LINE SMOOTH",
"153.238 0 OFFCURVE",
"186 27.044 OFFCURVE",
"186 84 CURVE SMOOTH",
"186 615 LINE SMOOTH",
"186 671.956 OFFCURVE",
"153.238 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE"
);
},
{
closed = 1;
nodes = (
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 655.333 OFFCURVE",
"150 610 CURVE SMOOTH",
"150 89 LINE SMOOTH",
"150 43.667 OFFCURVE",
"129 30 OFFCURVE",
"109 30 CURVE SMOOTH",
"60 30 LINE",
"60 669 LINE"
);
},
{
closed = 1;
nodes = (
"121 741 LINE",
"176 827 LINE",
"144 827 LINE",
"104 757 LINE",
"65 827 LINE",
"33 827 LINE",
"88 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
29 19 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = Dcroat;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"143 0 LINE SMOOTH",
"184.238 0 OFFCURVE",
"217 27.044 OFFCURVE",
"217 84 CURVE SMOOTH",
"217 615 LINE SMOOTH",
"217 671.956 OFFCURVE",
"184.238 699 OFFCURVE",
"143 699 CURVE SMOOTH",
"55 699 LINE",
"55 363 LINE",
"24 363 LINE",
"24 337 LINE",
"55 337 LINE",
"55 0 LINE"
);
},
{
closed = 1;
nodes = (
"140 669 LINE SMOOTH",
"160 669 OFFCURVE",
"181 655.333 OFFCURVE",
"181 610 CURVE SMOOTH",
"181 89 LINE SMOOTH",
"181 43.667 OFFCURVE",
"160 30 OFFCURVE",
"140 30 CURVE SMOOTH",
"91 30 LINE",
"91 337 LINE",
"122 337 LINE",
"122 363 LINE",
"91 363 LINE",
"91 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
4 3 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 238;
}
);
note = Dcroat;
unicode = 0110;
},
{
glyphname = E;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"157 0 LINE",
"157 30 LINE",
"60 30 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = E;
unicode = 0045;
},
{
glyphname = Eacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"157 0 LINE",
"157 30 LINE",
"60 30 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
},
{
closed = 1;
nodes = (
"101 738 LINE",
"156 824 LINE",
"124 824 LINE",
"78 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
12 8 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 8 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 7 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 669 LINE",
"60 363 LINE",
"132 363 LINE",
"132 336 LINE",
"60 336 LINE",
"60 30 LINE",
"157 30 LINE",
"157 0 LINE",
"24 0 LINE",
"24 699 LINE",
"155 699 LINE",
"155 669 LINE"
);
},
{
closed = 1;
nodes = (
"34 813 LINE",
"34 781 OFFCURVE",
"60.667 756 OFFCURVE",
"90 756 CURVE SMOOTH",
"123.333 756 OFFCURVE",
"149 782.333 OFFCURVE",
"149 813 CURVE",
"127 813 LINE",
"127 794.333 OFFCURVE",
"109.667 777 OFFCURVE",
"91 777 CURVE SMOOTH",
"72.333 777 OFFCURVE",
"55 794.333 OFFCURVE",
"55 813 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Ebreve;
unicode = 0114;
},
{
glyphname = Ecaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 669 LINE",
"60 363 LINE",
"132 363 LINE",
"132 336 LINE",
"60 336 LINE",
"60 30 LINE",
"157 30 LINE",
"157 0 LINE",
"24 0 LINE",
"24 699 LINE",
"155 699 LINE",
"155 669 LINE"
);
},
{
closed = 1;
nodes = (
"106 741 LINE",
"161 827 LINE",
"129 827 LINE",
"90 758 LINE",
"51 827 LINE",
"18 827 LINE",
"73 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 1 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = Ecircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"157 0 LINE",
"157 30 LINE",
"60 30 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
},
{
closed = 1;
nodes = (
"74 824 LINE",
"19 738 LINE",
"52 738 LINE",
"91 806 LINE",
"130 738 LINE",
"162 738 LINE",
"107 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
15 8 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 7 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Edieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 669 LINE",
"60 363 LINE",
"132 363 LINE",
"132 336 LINE",
"60 336 LINE",
"60 30 LINE",
"157 30 LINE",
"157 0 LINE",
"24 0 LINE",
"24 699 LINE",
"155 699 LINE",
"155 669 LINE"
);
},
{
closed = 1;
nodes = (
"74 816 LINE",
"50 816 LINE",
"50 753 LINE",
"74 753 LINE"
);
},
{
closed = 1;
nodes = (
"131 816 LINE",
"106 816 LINE",
"106 753 LINE",
"131 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 6 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 669 LINE",
"60 363 LINE",
"132 363 LINE",
"132 336 LINE",
"60 336 LINE",
"60 30 LINE",
"157 30 LINE",
"157 0 LINE",
"24 0 LINE",
"24 699 LINE",
"155 699 LINE",
"155 669 LINE"
);
},
{
closed = 1;
nodes = (
"102 816 LINE",
"78 816 LINE",
"78 753 LINE",
"102 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = Egrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 669 LINE",
"60 363 LINE",
"132 363 LINE",
"132 336 LINE",
"60 336 LINE",
"60 30 LINE",
"157 30 LINE",
"157 0 LINE",
"24 0 LINE",
"24 699 LINE",
"155 699 LINE",
"155 669 LINE"
);
},
{
closed = 1;
nodes = (
"102 738 LINE",
"56 824 LINE",
"24 824 LINE",
"79 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 3 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Emacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"157 0 LINE",
"157 30 LINE",
"60 30 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
},
{
closed = 1;
nodes = (
"146 797 LINE",
"32 797 LINE",
"32 772 LINE",
"146 772 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = Eogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"127 -53 LINE",
"110.174 -81.043 OFFCURVE",
"72 -76.154 OFFCURVE",
"72 -45 CURVE SMOOTH",
"72 -29 OFFCURVE",
"85.333 -9.333 OFFCURVE",
"108 0 CURVE",
"157 0 LINE",
"157 30 LINE",
"60 30 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE",
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"80 0 LINE",
"60.667 -14 OFFCURVE",
"51 -30.333 OFFCURVE",
"51 -49 CURVE SMOOTH",
"51 -97.676 OFFCURVE",
"120.082 -104.242 OFFCURVE",
"139 -61 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
17 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
5 8 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 5 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
14 3 15 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = F;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"155 669 LINE",
"155 699 LINE",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 336 LINE",
"132 336 LINE",
"132 363 LINE",
"60 363 LINE",
"60 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 167;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 -6 LINE SMOOTH",
"121.333 -6 OFFCURVE",
"142.667 5 OFFCURVE",
"160 25 CURVE",
"165 0 LINE",
"183 0 LINE",
"183 283 LINE",
"105 283 LINE",
"105 253 LINE",
"148 253 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 0 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 -6 LINE SMOOTH",
"121.333 -6 OFFCURVE",
"142.667 5 OFFCURVE",
"160 25 CURVE",
"165 0 LINE",
"183 0 LINE",
"183 89 LINE",
"183 94 LINE",
"183 283 LINE",
"105 283 LINE",
"105 253 LINE",
"148 253 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"46 813 LINE",
"46 781 OFFCURVE",
"72.667 756 OFFCURVE",
"102 756 CURVE SMOOTH",
"135.333 756 OFFCURVE",
"160 782.333 OFFCURVE",
"160 813 CURVE",
"139 813 LINE",
"139 794.333 OFFCURVE",
"122 777 OFFCURVE",
"102 777 CURVE SMOOTH",
"83.333 777 OFFCURVE",
"67 794.333 OFFCURVE",
"67 813 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
49 2 56 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 0 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = Gcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 -6 LINE SMOOTH",
"121.333 -6 OFFCURVE",
"142.667 5 OFFCURVE",
"160 25 CURVE",
"165 0 LINE",
"183 0 LINE",
"183 283 LINE",
"105 283 LINE",
"105 253 LINE",
"148 253 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 824 LINE",
"31 738 LINE",
"63 738 LINE",
"102 807 LINE",
"142 738 LINE",
"174 738 LINE",
"119 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
45 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
49 5 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 0 44 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
48 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Gcircumflex;
unicode = 011C;
},
{
glyphname = Gcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 -6 LINE SMOOTH",
"121.333 -6 OFFCURVE",
"142.667 5 OFFCURVE",
"160 25 CURVE",
"165 0 LINE",
"183 0 LINE",
"183 89 LINE",
"183 94 LINE",
"183 283 LINE",
"105 283 LINE",
"105 253 LINE",
"148 253 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"118 -30 LINE",
"81 -30 LINE",
"81 -105 LINE",
"97 -105 LINE",
"82 -161 LINE",
"98 -161 LINE",
"118 -105 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 4 50 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 4 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
48 50 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
40 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
42 47 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 47 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = uni0122;
unicode = 0122;
},
{
glyphname = Gdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 -6 LINE SMOOTH",
"121.333 -6 OFFCURVE",
"142.667 5 OFFCURVE",
"160 25 CURVE",
"165 0 LINE",
"183 0 LINE",
"183 283 LINE",
"105 283 LINE",
"105 253 LINE",
"148 253 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"183 417 LINE",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 816 LINE",
"89 816 LINE",
"89 753 LINE",
"114 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
44 5 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 4 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 0 46 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Gdotaccent;
unicode = 0120;
},
{
glyphname = H;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"145 699 LINE",
"145 363 LINE",
"60 363 LINE",
"60 699 LINE",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 336 LINE",
"145 336 LINE",
"145 0 LINE",
"181 0 LINE",
"181 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
10 3 3 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"6 507 LINE",
"6 482 LINE",
"24 482 LINE",
"24 0 LINE",
"60 0 LINE",
"60 336 LINE",
"145 336 LINE",
"145 0 LINE",
"181 0 LINE",
"181 482 LINE",
"198 482 LINE",
"198 507 LINE",
"181 507 LINE",
"181 699 LINE",
"145 699 LINE",
"145 507 LINE",
"60 507 LINE",
"60 699 LINE",
"24 699 LINE",
"24 507 LINE"
);
},
{
closed = 1;
nodes = (
"60 363 LINE",
"60 482 LINE",
"145 482 LINE",
"145 363 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
8 3 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 3 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = "LATIN CAPITAL LETTER H WITH STROKE";
unicode = 0126;
},
{
glyphname = Hcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"145 699 LINE",
"145 363 LINE",
"60 363 LINE",
"60 699 LINE",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 336 LINE",
"145 336 LINE",
"145 0 LINE",
"181 0 LINE",
"181 699 LINE"
);
},
{
closed = 1;
nodes = (
"86 824 LINE",
"31 738 LINE",
"63 738 LINE",
"102 807 LINE",
"142 738 LINE",
"174 738 LINE",
"119 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
13 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
15 1 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
17 1 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Hcircumflex;
unicode = 0124;
},
{
glyphname = I;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = I;
unicode = 0049;
},
{
glyphname = IJ;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"191 -6 LINE SMOOTH",
"227 -6 OFFCURVE",
"265 19.333 OFFCURVE",
"265 82 CURVE SMOOTH",
"265 699 LINE",
"230 699 LINE",
"230 87 LINE SMOOTH",
"230 41.667 OFFCURVE",
"209.333 24 OFFCURVE",
"188 24 CURVE SMOOTH",
"180 24 LINE SMOOTH",
"160 24 OFFCURVE",
"139 41.667 OFFCURVE",
"139 87 CURVE SMOOTH",
"139 281 LINE",
"103 281 LINE",
"103 82 LINE SMOOTH",
"103 24.579 OFFCURVE",
"136.357 -6 OFFCURVE",
"177 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 4 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 4 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
15 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 288;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = Iacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"53 747 LINE",
"108 833 LINE",
"76 833 LINE",
"30 747 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"-14 822 LINE",
"-14 791.333 OFFCURVE",
"12.667 765 OFFCURVE",
"42 765 CURVE SMOOTH",
"75.333 765 OFFCURVE",
"100 791.333 OFFCURVE",
"100 822 CURVE",
"79 822 LINE",
"79 803.333 OFFCURVE",
"62 786 OFFCURVE",
"42 786 CURVE SMOOTH",
"23.333 786 OFFCURVE",
"7 803.333 OFFCURVE",
"7 822 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 4 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 2 14 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Ibreve;
unicode = 012C;
},
{
glyphname = Icircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"26 833 LINE",
"-29 747 LINE",
"3 747 LINE",
"42 816 LINE",
"82 747 LINE",
"114 747 LINE",
"59 833 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"26 825 LINE",
"1 825 LINE",
"1 762 LINE",
"26 762 LINE"
);
},
{
closed = 1;
nodes = (
"82 825 LINE",
"58 825 LINE",
"58 762 LINE",
"82 762 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"53 825 LINE",
"29 825 LINE",
"29 762 LINE",
"53 762 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Igrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"54 747 LINE",
"8 833 LINE",
"-25 833 LINE",
"30 747 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 0 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Imacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"98 806 LINE",
"-17 806 LINE",
"-17 781 LINE",
"98 781 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 3 4 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = Iogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"78 -53 LINE",
"61.085 -81.191 OFFCURVE",
"23 -76.275 OFFCURVE",
"23 -45 CURVE SMOOTH",
"23 -29 OFFCURVE",
"37.667 -9.333 OFFCURVE",
"59 0 CURVE",
"60 0 LINE",
"60 699 LINE",
"24 699 LINE",
"24 0 LINE",
"31 0 LINE",
"13.667 -13.333 OFFCURVE",
"3 -29 OFFCURVE",
"3 -49 CURVE SMOOTH",
"3 -97.676 OFFCURVE",
"72.082 -104.242 OFFCURVE",
"91 -61 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
16 5 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
149 16 165 16 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 16 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Iogonek;
unicode = 012E;
},
{
glyphname = Itilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"-15 779 LINE",
"-6.333 788.333 OFFCURVE",
"3.667 793 OFFCURVE",
"15 793 CURVE SMOOTH",
"24.333 793 OFFCURVE",
"34 789.333 OFFCURVE",
"44 782 CURVE SMOOTH",
"54 774.667 OFFCURVE",
"64.667 771 OFFCURVE",
"76 771 CURVE SMOOTH",
"92 771 OFFCURVE",
"105.333 779 OFFCURVE",
"116 795 CURVE",
"99 806 LINE",
"91.667 796.667 OFFCURVE",
"82.667 792 OFFCURVE",
"72 792 CURVE SMOOTH",
"54.738 792 OFFCURVE",
"25.014 814 OFFCURVE",
"9 814 CURVE SMOOTH",
"-7.667 814 OFFCURVE",
"-20.667 806 OFFCURVE",
"-30 790 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 4 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 2 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 84;
}
);
note = Itilde;
unicode = 0128;
},
{
glyphname = J;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 699 LINE",
"148 699 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 281 LINE",
"21 281 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 699 LINE",
"148 699 LINE",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 281 LINE",
"21 281 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"149 824 LINE",
"94 738 LINE",
"127 738 LINE",
"166 806 LINE",
"205 738 LINE",
"238 738 LINE",
"183 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 15 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = K;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"197 699 LINE",
"164 699 LINE",
"60 398 LINE",
"60 699 LINE",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 317 LINE",
"162 0 LINE",
"195 0 LINE",
"85 364 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 201;
}
);
note = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"197 699 LINE",
"164 699 LINE",
"60 398 LINE",
"60 699 LINE",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 317 LINE",
"162 0 LINE",
"195 0 LINE",
"85 364 LINE"
);
},
{
closed = 1;
nodes = (
"129 -9 LINE",
"92 -9 LINE",
"92 -84 LINE",
"108 -84 LINE",
"93 -140 LINE",
"109 -140 LINE",
"129 -84 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 201;
}
);
note = uni0136;
unicode = 0136;
},
{
glyphname = L;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"147 0 LINE",
"147 27 LINE",
"60 27 LINE",
"60 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 4 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 151;
}
);
note = L;
unicode = 004C;
},
{
glyphname = Lacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"147 0 LINE",
"147 27 LINE",
"60 27 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"53 738 LINE",
"108 824 LINE",
"76 824 LINE",
"30 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
6 4 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
6 3 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 151;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = Lcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 699 LINE",
"60 27 LINE",
"147 27 LINE",
"147 0 LINE",
"24 0 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"141 700 LINE",
"105 700 LINE",
"105 625 LINE",
"120 625 LINE",
"105 569 LINE",
"122 569 LINE",
"141 625 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 1 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 173;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = Lcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"147 0 LINE",
"147 27 LINE",
"60 27 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"102 -30 LINE",
"66 -30 LINE",
"66 -105 LINE",
"82 -105 LINE",
"67 -161 LINE",
"83 -161 LINE",
"102 -105 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
9 7 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 151;
}
);
note = uni013B;
unicode = 013B;
},
{
glyphname = Ldot;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"147 0 LINE",
"147 27 LINE",
"60 27 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"167 333 LINE",
"130 333 LINE",
"130 258 LINE",
"167 258 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 179;
}
);
note = Ldot;
unicode = 013F;
},
{
glyphname = Lslash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"62 699 LINE",
"62 360 LINE",
"3 318 LINE",
"16 296 LINE",
"62 329 LINE",
"62 0 LINE",
"186 0 LINE",
"186 27 LINE",
"98 27 LINE",
"98 355 LINE",
"177 412 LINE",
"165 433 LINE",
"98 385 LINE",
"98 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 7 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 2 values pushed */
5 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
9 7 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 193;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = M;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"205 699 LINE",
"137 128 LINE",
"136 128 LINE",
"69 699 LINE",
"21 699 LINE",
"21 0 LINE",
"52 0 LINE",
"52 595 LINE",
"122 0 LINE",
"151 0 LINE",
"222 595 LINE",
"223 595 LINE",
"223 0 LINE",
"253 0 LINE",
"253 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
13 9 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 277;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"206 0 LINE",
"206 699 LINE",
"174 699 LINE",
"174 108 LINE",
"173 108 LINE",
"63 699 LINE",
"21 699 LINE",
"21 0 LINE",
"52 0 LINE",
"52 595 LINE",
"165 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 0 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 0 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 228;
}
);
note = N;
unicode = 004E;
},
{
glyphname = Nacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"204 0 LINE",
"204 699 LINE",
"172 699 LINE",
"172 108 LINE",
"171 108 LINE",
"61 699 LINE",
"19 699 LINE",
"19 0 LINE",
"49 0 LINE",
"49 595 LINE",
"50 595 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"123 738 LINE",
"178 824 LINE",
"146 824 LINE",
"100 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 223;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = Ncaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"204 0 LINE",
"204 699 LINE",
"172 699 LINE",
"172 108 LINE",
"171 108 LINE",
"61 699 LINE",
"19 699 LINE",
"19 0 LINE",
"49 0 LINE",
"49 595 LINE",
"50 595 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"128 741 LINE",
"183 827 LINE",
"151 827 LINE",
"111 757 LINE",
"72 827 LINE",
"40 827 LINE",
"95 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
13 4 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 8 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 223;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = Ncommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"204 0 LINE",
"204 699 LINE",
"172 699 LINE",
"172 108 LINE",
"171 108 LINE",
"61 699 LINE",
"19 699 LINE",
"19 0 LINE",
"49 0 LINE",
"49 595 LINE",
"50 595 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"124 -9 LINE",
"88 -9 LINE",
"88 -84 LINE",
"103 -84 LINE",
"88 -140 LINE",
"105 -140 LINE",
"124 -84 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 6 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 4 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
11 6 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
14 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 13 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 13 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
15 13 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 223;
}
);
note = uni0145;
unicode = 0145;
},
{
glyphname = Eng;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"159 0 LINE",
"159 -84 LINE SMOOTH",
"159 -120 OFFCURVE",
"141.667 -137 OFFCURVE",
"115 -137 CURVE",
"115 -165 LINE",
"167 -165 OFFCURVE",
"199 -137.333 OFFCURVE",
"199 -84 CURVE SMOOTH",
"199 699 LINE",
"168 699 LINE",
"168 108 LINE",
"63 699 LINE",
"21 699 LINE",
"21 0 LINE",
"50 0 LINE",
"50 595 LINE",
"51 595 LINE",
"158 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
10 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 13 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 13 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 221;
}
);
note = Eng;
unicode = 014A;
},
{
glyphname = Ntilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"204 0 LINE",
"204 699 LINE",
"172 699 LINE",
"172 108 LINE",
"171 108 LINE",
"61 699 LINE",
"19 699 LINE",
"19 0 LINE",
"49 0 LINE",
"49 595 LINE",
"50 595 LINE",
"162 0 LINE"
);
},
{
closed = 1;
nodes = (
"55 770 LINE",
"63.667 779.333 OFFCURVE",
"73.667 784 OFFCURVE",
"85 784 CURVE SMOOTH",
"94.333 784 OFFCURVE",
"104 780.333 OFFCURVE",
"114 773 CURVE SMOOTH",
"124 765.667 OFFCURVE",
"134.667 762 OFFCURVE",
"146 762 CURVE SMOOTH",
"162 762 OFFCURVE",
"175.333 770 OFFCURVE",
"186 786 CURVE",
"169 797 LINE",
"161.667 787.667 OFFCURVE",
"152.667 783 OFFCURVE",
"142 783 CURVE SMOOTH",
"124.738 783 OFFCURVE",
"95.014 805 OFFCURVE",
"79 805 CURVE SMOOTH",
"63 805 OFFCURVE",
"50 797 OFFCURVE",
"40 781 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
3 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
14 2 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 0 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
24 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 223;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = O;
unicode = 004F;
},
{
glyphname = Oacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113 738 LINE",
"168 824 LINE",
"136 824 LINE",
"90 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
36 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
38 31 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
36 0 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Obreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"46 813 LINE",
"46 781 OFFCURVE",
"72.667 756 OFFCURVE",
"102 756 CURVE SMOOTH",
"135.333 756 OFFCURVE",
"160 782.333 OFFCURVE",
"160 813 CURVE",
"139 813 LINE",
"139 794.333 OFFCURVE",
"122 777 OFFCURVE",
"102 777 CURVE SMOOTH",
"83.333 777 OFFCURVE",
"67 794.333 OFFCURVE",
"67 813 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
39 2 46 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Obreve;
unicode = 014E;
},
{
glyphname = Ocircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 824 LINE",
"31 738 LINE",
"63 738 LINE",
"102 807 LINE",
"142 738 LINE",
"174 738 LINE",
"119 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
37 31 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 5 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Odieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"86 816 LINE",
"61 816 LINE",
"61 753 LINE",
"86 753 LINE"
);
},
{
closed = 1;
nodes = (
"142 816 LINE",
"118 816 LINE",
"118 753 LINE",
"142 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
40 5 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Ograve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 738 LINE",
"68 824 LINE",
"36 824 LINE",
"91 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
37 5 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 0 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Ohungarumlaut;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"139 735 LINE",
"194 821 LINE",
"162 821 LINE",
"116 735 LINE"
);
},
{
closed = 1;
nodes = (
"85 735 LINE",
"140 821 LINE",
"108 821 LINE",
"62 735 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
36 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
42 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
41 35 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
36 35 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Ohungarumlaut;
unicode = 0150;
},
{
glyphname = Omacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158 797 LINE",
"44 797 LINE",
"44 772 LINE",
"158 772 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
39 3 36 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Omacron;
unicode = 014C;
},
{
glyphname = Oslash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"138 -6 LINE SMOOTH",
"174 -6 OFFCURVE",
"212 19.333 OFFCURVE",
"212 82 CURVE SMOOTH",
"212 605 LINE",
"240 709 LINE",
"218 709 LINE",
"204 659 LINE",
"190.667 691 OFFCURVE",
"164.667 705 OFFCURVE",
"138 705 CURVE SMOOTH",
"124 705 LINE SMOOTH",
"83.357 705 OFFCURVE",
"50 674.421 OFFCURVE",
"50 617 CURVE SMOOTH",
"50 86 LINE",
"24 -10 LINE",
"45 -10 LINE",
"58 38 LINE",
"71.333 7.333 OFFCURVE",
"97.333 -6 OFFCURVE",
"124 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 675 LINE SMOOTH",
"156.333 675 OFFCURVE",
"177 657.333 OFFCURVE",
"177 612 CURVE SMOOTH",
"177 557 LINE",
"86 220 LINE",
"86 612 LINE SMOOTH",
"86 657.333 OFFCURVE",
"107 675 OFFCURVE",
"127 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 24 OFFCURVE",
"86 41.667 OFFCURVE",
"86 87 CURVE SMOOTH",
"86 141 LINE",
"177 476 LINE",
"177 87 LINE SMOOTH",
"177 41.667 OFFCURVE",
"156.333 24 OFFCURVE",
"135 24 CURVE SMOOTH",
"127 24 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
41 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 6 41 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
16 30 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 264;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Otilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"45 770 LINE",
"53.667 779.333 OFFCURVE",
"63.667 784 OFFCURVE",
"75 784 CURVE SMOOTH",
"84.333 784 OFFCURVE",
"94 780.333 OFFCURVE",
"104 773 CURVE SMOOTH",
"114 765.667 OFFCURVE",
"124.667 762 OFFCURVE",
"136 762 CURVE SMOOTH",
"152 762 OFFCURVE",
"165.333 770 OFFCURVE",
"176 786 CURVE",
"159 797 LINE",
"151.667 787.667 OFFCURVE",
"142.667 783 OFFCURVE",
"132 783 CURVE SMOOTH",
"112.851 783 OFFCURVE",
"86.954 805 OFFCURVE",
"69 805 CURVE SMOOTH",
"52.333 805 OFFCURVE",
"39.667 797 OFFCURVE",
"31 781 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
38 2 51 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
48 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE",
"114 -6 LINE",
"286 -6 LINE",
"286 26 LINE",
"169 26 LINE",
"178.333 39.333 OFFCURVE",
"183 58 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 336 LINE",
"261 336 LINE",
"261 363 LINE",
"183 363 LINE",
"183 617 LINE SMOOTH",
"183 639.667 OFFCURVE",
"178.333 658.333 OFFCURVE",
"169 673 CURVE",
"283 673 LINE",
"283 705 LINE",
"114 705 LINE",
"109 705 LINE",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"108 675 OFFCURVE",
"109.667 674.667 OFFCURVE",
"111 674 CURVE",
"112 673 LINE",
"118 673 LINE",
"134 666.333 OFFCURVE",
"148 648 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
16 41 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 41 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 4 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 3 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 310;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 304 LINE",
"119 304 LINE SMOOTH",
"157.667 304 OFFCURVE",
"186 325.667 OFFCURVE",
"186 379 CURVE SMOOTH",
"186 611 LINE SMOOTH",
"186 671 OFFCURVE",
"150.667 699 OFFCURVE",
"112 699 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 390 LINE SMOOTH",
"150 351.333 OFFCURVE",
"136 333 OFFCURVE",
"116 333 CURVE SMOOTH",
"60 333 LINE",
"60 669 LINE",
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 651.333 OFFCURVE",
"150 606 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
12 11 3 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Thorn;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 98 LINE",
"108 98 LINE SMOOTH",
"142.667 98 OFFCURVE",
"175 126 OFFCURVE",
"175 178 CURVE SMOOTH",
"175 518 LINE SMOOTH",
"175 570 OFFCURVE",
"142.667 599 OFFCURVE",
"108 599 CURVE SMOOTH",
"60 599 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"105 570 LINE SMOOTH",
"123.667 570 OFFCURVE",
"141 553 OFFCURVE",
"141 517 CURVE SMOOTH",
"141 179 LINE SMOOTH",
"141 143 OFFCURVE",
"123.667 126 OFFCURVE",
"105 126 CURVE SMOOTH",
"60 126 LINE",
"60 570 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
16 3 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 1 14 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 196;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = Q;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"115 -6 OFFCURVE",
"121.667 -5 OFFCURVE",
"129 -3 CURVE",
"159 -34 LINE",
"178 -15 LINE",
"154 9 LINE",
"171.333 22.333 OFFCURVE",
"183 46 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"186 611 LINE SMOOTH",
"186 671 OFFCURVE",
"150.667 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 335 LINE",
"116 335 LINE SMOOTH",
"136 335 OFFCURVE",
"150 316.667 OFFCURVE",
"150 278 CURVE SMOOTH",
"150 102 LINE SMOOTH",
"150 72.667 OFFCURVE",
"150.5 50.5 OFFCURVE",
"151.5 35.5 CURVE SMOOTH",
"152.5 20.5 OFFCURVE",
"154.667 8.667 OFFCURVE",
"158 0 CURVE",
"194 0 LINE",
"192 6 OFFCURVE",
"190.167 16.167 OFFCURVE",
"188.5 30.5 CURVE SMOOTH",
"186.833 44.833 OFFCURVE",
"186 68.667 OFFCURVE",
"186 102 CURVE SMOOTH",
"186 281 LINE SMOOTH",
"186 323.667 OFFCURVE",
"171 342.667 OFFCURVE",
"151 348 CURVE",
"171 354.667 OFFCURVE",
"186 373.333 OFFCURVE",
"186 416 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 362 LINE",
"60 669 LINE",
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 651.333 OFFCURVE",
"150 606 CURVE SMOOTH",
"150 418 LINE SMOOTH",
"150 379.333 OFFCURVE",
"136 362 OFFCURVE",
"116 362 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 18 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
}
);
note = R;
unicode = 0052;
},
{
glyphname = Racute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"186 611 LINE SMOOTH",
"186 671 OFFCURVE",
"150.667 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 335 LINE",
"116 335 LINE SMOOTH",
"136 335 OFFCURVE",
"150 316.667 OFFCURVE",
"150 278 CURVE SMOOTH",
"150 102 LINE SMOOTH",
"150 72.667 OFFCURVE",
"150.5 50.5 OFFCURVE",
"151.5 35.5 CURVE SMOOTH",
"152.5 20.5 OFFCURVE",
"154.667 8.667 OFFCURVE",
"158 0 CURVE",
"194 0 LINE",
"192 6 OFFCURVE",
"190.167 16.167 OFFCURVE",
"188.5 30.5 CURVE SMOOTH",
"186.833 44.833 OFFCURVE",
"186 68.667 OFFCURVE",
"186 102 CURVE SMOOTH",
"186 281 LINE SMOOTH",
"186 323.667 OFFCURVE",
"171 342.667 OFFCURVE",
"151 348 CURVE",
"171 354.667 OFFCURVE",
"186 373.333 OFFCURVE",
"186 416 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 362 LINE",
"60 669 LINE",
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 651.333 OFFCURVE",
"150 606 CURVE SMOOTH",
"150 418 LINE SMOOTH",
"150 379.333 OFFCURVE",
"136 362 OFFCURVE",
"116 362 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 738 LINE",
"161 824 LINE",
"128 824 LINE",
"82 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
37 21 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 14 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 18 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
37 10 38 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = Rcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"186 416 LINE SMOOTH",
"186 373.333 OFFCURVE",
"171 354.667 OFFCURVE",
"151 348 CURVE",
"171 342.667 OFFCURVE",
"186 323.667 OFFCURVE",
"186 281 CURVE SMOOTH",
"186 102 LINE SMOOTH",
"186 68.667 OFFCURVE",
"186.833 44.833 OFFCURVE",
"188.5 30.5 CURVE SMOOTH",
"190.167 16.167 OFFCURVE",
"192 6 OFFCURVE",
"194 0 CURVE",
"158 0 LINE",
"154.667 8.667 OFFCURVE",
"152.5 20.5 OFFCURVE",
"151.5 35.5 CURVE SMOOTH",
"150.5 50.5 OFFCURVE",
"150 72.667 OFFCURVE",
"150 102 CURVE SMOOTH",
"150 278 LINE SMOOTH",
"150 316.667 OFFCURVE",
"136 335 OFFCURVE",
"116 335 CURVE SMOOTH",
"60 335 LINE",
"60 0 LINE",
"24 0 LINE",
"24 699 LINE",
"112 699 LINE SMOOTH",
"150.667 699 OFFCURVE",
"186 671 OFFCURVE",
"186 611 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 362 LINE SMOOTH",
"136 362 OFFCURVE",
"150 379.333 OFFCURVE",
"150 418 CURVE SMOOTH",
"150 606 LINE SMOOTH",
"150 651.333 OFFCURVE",
"129 669 OFFCURVE",
"109 669 CURVE SMOOTH",
"60 669 LINE",
"60 362 LINE"
);
},
{
closed = 1;
nodes = (
"111 741 LINE",
"166 827 LINE",
"134 827 LINE",
"94 757 LINE",
"55 827 LINE",
"23 827 LINE",
"78 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
20 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
28 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
42 11 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
23 7 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = Rcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"186 611 LINE SMOOTH",
"186 671 OFFCURVE",
"150.667 699 OFFCURVE",
"112 699 CURVE SMOOTH",
"24 699 LINE",
"24 0 LINE",
"60 0 LINE",
"60 335 LINE",
"116 335 LINE SMOOTH",
"136 335 OFFCURVE",
"150 316.667 OFFCURVE",
"150 278 CURVE SMOOTH",
"150 102 LINE SMOOTH",
"150 72.667 OFFCURVE",
"150.5 50.5 OFFCURVE",
"151.5 35.5 CURVE SMOOTH",
"152.5 20.5 OFFCURVE",
"154.667 8.667 OFFCURVE",
"158 0 CURVE",
"194 0 LINE",
"192 6 OFFCURVE",
"190.167 16.167 OFFCURVE",
"188.5 30.5 CURVE SMOOTH",
"186.833 44.833 OFFCURVE",
"186 68.667 OFFCURVE",
"186 102 CURVE SMOOTH",
"186 281 LINE SMOOTH",
"186 323.667 OFFCURVE",
"171 342.667 OFFCURVE",
"151 348 CURVE",
"171 354.667 OFFCURVE",
"186 373.333 OFFCURVE",
"186 416 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 362 LINE",
"60 669 LINE",
"109 669 LINE SMOOTH",
"129 669 OFFCURVE",
"150 651.333 OFFCURVE",
"150 606 CURVE SMOOTH",
"150 418 LINE SMOOTH",
"150 379.333 OFFCURVE",
"136 362 OFFCURVE",
"116 362 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"122 -30 LINE",
"86 -30 LINE",
"86 -105 LINE",
"101 -105 LINE",
"86 -161 LINE",
"103 -161 LINE",
"122 -105 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
20 4 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
37 4 41 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
7 4 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 14 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 21 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 18 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
34 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
40 38 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
}
);
note = uni0156;
unicode = 0156;
},
{
glyphname = S;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"180 417 LINE",
"180 617 LINE SMOOTH",
"180 679.667 OFFCURVE",
"142 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"96 705 LINE SMOOTH",
"60 705 OFFCURVE",
"21 679.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 502 LINE SMOOTH",
"21 443.842 OFFCURVE",
"53.317 389.912 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"115.46 301.405 OFFCURVE",
"148 247.413 OFFCURVE",
"148 192 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"126.333 24 OFFCURVE",
"105 24 CURVE SMOOTH",
"97 24 LINE SMOOTH",
"75.667 24 OFFCURVE",
"54 40.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"56.429 -6 OFFCURVE",
"96 -6 CURVE SMOOTH",
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 197 LINE SMOOTH",
"183 318.776 OFFCURVE",
"57 387.307 OFFCURVE",
"57 508 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = S;
unicode = 0053;
},
{
glyphname = Sacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"180 417 LINE",
"180 617 LINE SMOOTH",
"180 679.667 OFFCURVE",
"142 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"96 705 LINE SMOOTH",
"60 705 OFFCURVE",
"21 679.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 502 LINE SMOOTH",
"21 443.842 OFFCURVE",
"53.317 389.912 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"115.46 301.405 OFFCURVE",
"148 247.413 OFFCURVE",
"148 192 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"126.333 24 OFFCURVE",
"105 24 CURVE SMOOTH",
"97 24 LINE SMOOTH",
"75.667 24 OFFCURVE",
"54 40.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"56.429 -6 OFFCURVE",
"96 -6 CURVE SMOOTH",
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 197 LINE SMOOTH",
"183 318.776 OFFCURVE",
"57 387.307 OFFCURVE",
"57 508 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE"
);
},
{
closed = 1;
nodes = (
"113 739 LINE",
"168 825 LINE",
"136 825 LINE",
"90 739 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 24 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
54 0 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 18 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = Scaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 417 LINE",
"148 612 LINE SMOOTH",
"148 657.333 OFFCURVE",
"127.333 675 OFFCURVE",
"106 675 CURVE SMOOTH",
"98 675 LINE SMOOTH",
"78 675 OFFCURVE",
"57 657.333 OFFCURVE",
"57 612 CURVE SMOOTH",
"57 508 LINE SMOOTH",
"57 387.307 OFFCURVE",
"183 318.776 OFFCURVE",
"183 197 CURVE SMOOTH",
"183 82 LINE SMOOTH",
"183 19.333 OFFCURVE",
"145 -6 OFFCURVE",
"109 -6 CURVE SMOOTH",
"96 -6 LINE SMOOTH",
"56.429 -6 OFFCURVE",
"21 24.579 OFFCURVE",
"21 82 CURVE SMOOTH",
"21 282 LINE",
"54 282 LINE",
"54 87 LINE SMOOTH",
"54 40.333 OFFCURVE",
"75.667 24 OFFCURVE",
"97 24 CURVE SMOOTH",
"105 24 LINE SMOOTH",
"126.333 24 OFFCURVE",
"148 41.667 OFFCURVE",
"148 87 CURVE SMOOTH",
"148 192 LINE SMOOTH",
"148 247.413 OFFCURVE",
"115.46 301.405 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"53.317 389.912 OFFCURVE",
"21 443.842 OFFCURVE",
"21 502 CURVE SMOOTH",
"21 617 LINE SMOOTH",
"21 679.667 OFFCURVE",
"60 705 OFFCURVE",
"96 705 CURVE SMOOTH",
"106 705 LINE SMOOTH",
"142 705 OFFCURVE",
"180 679.667 OFFCURVE",
"180 617 CURVE SMOOTH",
"180 417 LINE"
);
},
{
closed = 1;
nodes = (
"118 741 LINE",
"173 827 LINE",
"141 827 LINE",
"102 758 LINE",
"63 827 LINE",
"30 827 LINE",
"85 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
43 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
53 8 43 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
57 16 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = Scedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"45 -88 LINE",
"76.151 -116.036 OFFCURVE",
"155 -105.013 OFFCURVE",
"155 -54 CURVE SMOOTH",
"155 -28.667 OFFCURVE",
"127.667 -15.667 OFFCURVE",
"105 -25 CURVE",
"112 -6 LINE",
"146.667 -4.667 OFFCURVE",
"183 20.667 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 197 LINE SMOOTH",
"183 318.776 OFFCURVE",
"57 387.307 OFFCURVE",
"57 508 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"180 417 LINE",
"180 617 LINE SMOOTH",
"180 679.667 OFFCURVE",
"142 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"96 705 LINE SMOOTH",
"60 705 OFFCURVE",
"21 679.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 502 LINE SMOOTH",
"21 443.842 OFFCURVE",
"53.317 389.912 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"115.46 301.405 OFFCURVE",
"148 247.413 OFFCURVE",
"148 192 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"126.333 24 OFFCURVE",
"105 24 CURVE SMOOTH",
"97 24 LINE SMOOTH",
"75.667 24 OFFCURVE",
"54 40.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 20.667 OFFCURVE",
"56.333 -3.333 OFFCURVE",
"91 -6 CURVE",
"79 -34 LINE",
"87 -37 LINE",
"103 -26.333 OFFCURVE",
"130 -34 OFFCURVE",
"130 -54 CURVE",
"132.534 -89.474 OFFCURVE",
"75.931 -91.169 OFFCURVE",
"50 -71 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
69 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
50 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 31 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
60 31 56 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
35 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
45 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = Scircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"180 417 LINE",
"180 617 LINE SMOOTH",
"180 679.667 OFFCURVE",
"142 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"96 705 LINE SMOOTH",
"60 705 OFFCURVE",
"21 679.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 502 LINE SMOOTH",
"21 443.842 OFFCURVE",
"53.317 389.912 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"115.46 301.405 OFFCURVE",
"148 247.413 OFFCURVE",
"148 192 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"126.333 24 OFFCURVE",
"105 24 CURVE SMOOTH",
"97 24 LINE SMOOTH",
"75.667 24 OFFCURVE",
"54 40.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"56.429 -6 OFFCURVE",
"96 -6 CURVE SMOOTH",
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 197 LINE SMOOTH",
"183 318.776 OFFCURVE",
"57 387.307 OFFCURVE",
"57 508 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE"
);
},
{
closed = 1;
nodes = (
"86 825 LINE",
"31 739 LINE",
"64 739 LINE",
"103 807 LINE",
"142 739 LINE",
"174 739 LINE",
"119 825 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
51 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
57 24 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
60 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
46 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
56 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = Scircumflex;
unicode = 015C;
},
{
glyphname = T;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"166 699 LINE",
"3 699 LINE",
"3 669 LINE",
"67 669 LINE",
"67 0 LINE",
"103 0 LINE",
"103 669 LINE",
"166 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
2 4 3 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 170;
}
);
note = T;
unicode = 0054;
},
{
glyphname = Tbar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"154 359 LINE",
"103 359 LINE",
"103 669 LINE",
"166 669 LINE",
"166 699 LINE",
"3 699 LINE",
"3 669 LINE",
"67 669 LINE",
"67 359 LINE",
"15 359 LINE",
"15 334 LINE",
"67 334 LINE",
"67 0 LINE",
"103 0 LINE",
"103 334 LINE",
"154 334 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
2 4 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 3 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 170;
}
);
note = _0144;
unicode = 0166;
},
{
glyphname = Tcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"166 669 LINE",
"103 669 LINE",
"103 0 LINE",
"67 0 LINE",
"67 669 LINE",
"3 669 LINE",
"3 699 LINE",
"166 699 LINE"
);
},
{
closed = 1;
nodes = (
"101 741 LINE",
"156 827 LINE",
"124 827 LINE",
"84 757 LINE",
"45 827 LINE",
"13 827 LINE",
"68 741 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
6 4 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
11 3 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
11 0 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 170;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = Tcedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"166 699 LINE",
"3 699 LINE",
"3 669 LINE",
"67 669 LINE",
"67 0 LINE",
"103 0 LINE",
"103 669 LINE",
"166 669 LINE"
);
},
{
closed = 1;
nodes = (
"59.151 -111.036 OFFCURVE",
"138 -100.013 OFFCURVE",
"138 -49 CURVE SMOOTH",
"138 -23.667 OFFCURVE",
"110.667 -9.333 OFFCURVE",
"88 -20 CURVE",
"95 0 LINE",
"75 0 LINE",
"61 -29 LINE",
"70 -32 LINE",
"86 -21.333 OFFCURVE",
"111.667 -29 OFFCURVE",
"113 -49 CURVE",
"113 -83.189 OFFCURVE",
"57.912 -86.154 OFFCURVE",
"32 -66 CURVE",
"28 -83 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 4 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
154 14 170 14 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 153 14 169 14 185 14 201 14 217 14 233 14 249 14 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 105 14 121 14 137 14 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
20 3 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
21 3 2 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 170;
}
);
note = Tcedilla;
unicode = 0162;
},
{
glyphname = U;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = U;
unicode = 0055;
},
{
glyphname = Uacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 738 LINE",
"171 824 LINE",
"138 824 LINE",
"92 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 15 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ubreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 813 LINE",
"42 781 OFFCURVE",
"67.333 756 OFFCURVE",
"98 756 CURVE SMOOTH",
"131.333 756 OFFCURVE",
"156 782.333 OFFCURVE",
"156 813 CURVE",
"134 813 LINE",
"134 794.333 OFFCURVE",
"116.667 777 OFFCURVE",
"98 777 CURVE SMOOTH",
"79.333 777 OFFCURVE",
"63 794.333 OFFCURVE",
"63 813 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 2 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Ubreve;
unicode = 016C;
},
{
glyphname = Ucircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"89 824 LINE",
"34 738 LINE",
"66 738 LINE",
"105 807 LINE",
"145 738 LINE",
"177 738 LINE",
"122 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 15 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
27 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 1 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"88 816 LINE",
"64 816 LINE",
"64 753 LINE",
"88 753 LINE"
);
},
{
closed = 1;
nodes = (
"145 816 LINE",
"121 816 LINE",
"121 753 LINE",
"145 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
26 5 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Ugrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"117 738 LINE",
"71 824 LINE",
"38 824 LINE",
"93 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
25 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uhungarumlaut;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"72 735 LINE",
"127 821 LINE",
"95 821 LINE",
"49 735 LINE"
);
},
{
closed = 1;
nodes = (
"126 735 LINE",
"181 821 LINE",
"149 821 LINE",
"103 735 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
22 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Uhungarumlaut;
unicode = 0170;
},
{
glyphname = Umacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"153 797 LINE",
"39 797 LINE",
"39 772 LINE",
"153 772 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Umacron;
unicode = 016A;
},
{
glyphname = Uogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"141 -59 LINE",
"124.085 -87.191 OFFCURVE",
"86 -82.275 OFFCURVE",
"86 -51 CURVE SMOOTH",
"86 -36.333 OFFCURVE",
"100.333 -17 OFFCURVE",
"119 -5 CURVE",
"152.333 -2.333 OFFCURVE",
"186 23.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 20.667 OFFCURVE",
"59.333 -3.333 OFFCURVE",
"94 -6 CURVE",
"76.667 -19.333 OFFCURVE",
"66 -35 OFFCURVE",
"66 -55 CURVE SMOOTH",
"66 -106.255 OFFCURVE",
"135.042 -110.331 OFFCURVE",
"154 -67 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 4 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 4 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
8 11 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Uogonek;
unicode = 0172;
},
{
glyphname = Uring;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"128.667 734 OFFCURVE",
"153 760 OFFCURVE",
"153 788 CURVE SMOOTH",
"153 818.667 OFFCURVE",
"127.667 844 OFFCURVE",
"97 844 CURVE SMOOTH",
"67.667 844 OFFCURVE",
"44 818.667 OFFCURVE",
"44 788 CURVE SMOOTH",
"44 757.333 OFFCURVE",
"70 734 OFFCURVE",
"98 734 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116.667 825 OFFCURVE",
"134 806.667 OFFCURVE",
"134 788 CURVE SMOOTH",
"134 769.333 OFFCURVE",
"116.667 753 OFFCURVE",
"98 753 CURVE SMOOTH",
"79.333 753 OFFCURVE",
"62 769.333 OFFCURVE",
"62 788 CURVE SMOOTH",
"62 806.667 OFFCURVE",
"79.333 825 OFFCURVE",
"98 825 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
8 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
25 5 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
28 22 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Uring;
unicode = 016E;
},
{
glyphname = Utilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -6 LINE SMOOTH",
"148 -6 OFFCURVE",
"186 19.333 OFFCURVE",
"186 82 CURVE SMOOTH",
"186 699 LINE",
"150 699 LINE",
"150 87 LINE SMOOTH",
"150 41.667 OFFCURVE",
"129 24 OFFCURVE",
"109 24 CURVE SMOOTH",
"101 24 LINE SMOOTH",
"81 24 OFFCURVE",
"60 41.667 OFFCURVE",
"60 87 CURVE SMOOTH",
"60 699 LINE",
"24 699 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41 770 LINE",
"49.667 779.333 OFFCURVE",
"59.333 784 OFFCURVE",
"70 784 CURVE SMOOTH",
"89.889 784 OFFCURVE",
"112.276 762 OFFCURVE",
"132 762 CURVE SMOOTH",
"148.667 762 OFFCURVE",
"161.667 770 OFFCURVE",
"171 786 CURVE",
"155 797 LINE",
"146.333 787.667 OFFCURVE",
"137 783 OFFCURVE",
"127 783 CURVE SMOOTH",
"116.333 783 OFFCURVE",
"105.833 786.667 OFFCURVE",
"95.5 794 CURVE SMOOTH",
"85.167 801.333 OFFCURVE",
"74.667 805 OFFCURVE",
"64 805 CURVE SMOOTH",
"48.667 805 OFFCURVE",
"36 797 OFFCURVE",
"26 781 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 2 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
32 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = Utilde;
unicode = 0168;
},
{
glyphname = V;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"99 105 LINE",
"98 105 LINE",
"38 699 LINE",
"3 699 LINE",
"74 0 LINE",
"121 0 LINE",
"190 699 LINE",
"159 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"96 0 LINE",
"151 566 LINE",
"213 0 LINE",
"250 0 LINE",
"302 699 LINE",
"271 699 LINE",
"228 116 LINE",
"167 699 LINE",
"135 699 LINE",
"81 116 LINE",
"80 116 LINE",
"37 699 LINE",
"3 699 LINE",
"55 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 305;
}
);
note = W;
unicode = 0057;
},
{
glyphname = Wcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 0 LINE",
"147 566 LINE",
"148 566 LINE",
"210 0 LINE",
"247 0 LINE",
"299 699 LINE",
"267 699 LINE",
"225 116 LINE",
"224 116 LINE",
"163 699 LINE",
"132 699 LINE",
"77 116 LINE",
"76 116 LINE",
"33 699 LINE",
"-1 699 LINE",
"51 0 LINE"
);
},
{
closed = 1;
nodes = (
"130 824 LINE",
"75 738 LINE",
"108 738 LINE",
"147 806 LINE",
"186 738 LINE",
"219 738 LINE",
"164 824 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
19 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
21 0 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 298;
}
);
note = Wcircumflex;
unicode = 0174;
},
{
glyphname = X;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"187 699 LINE",
"151 699 LINE",
"96 453 LINE",
"39 699 LINE",
"3 699 LINE",
"76 378 LINE",
"3 0 LINE",
"38 0 LINE",
"94 295 LINE",
"151 0 LINE",
"188 0 LINE",
"115 368 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 192;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"188 699 LINE",
"152 699 LINE",
"96 357 LINE",
"95 357 LINE",
"39 699 LINE",
"3 699 LINE",
"78 274 LINE",
"78 0 LINE",
"113 0 LINE",
"114 274 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Yacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"188 699 LINE",
"152 699 LINE",
"96 357 LINE",
"95 357 LINE",
"39 699 LINE",
"3 699 LINE",
"78 274 LINE",
"78 0 LINE",
"113 0 LINE",
"114 274 LINE"
);
},
{
closed = 1;
nodes = (
"106 738 LINE",
"161 824 LINE",
"129 824 LINE",
"83 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 1 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 1 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = Ycircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"188 699 LINE",
"152 699 LINE",
"96 357 LINE",
"95 357 LINE",
"39 699 LINE",
"3 699 LINE",
"78 274 LINE",
"78 0 LINE",
"113 0 LINE",
"114 274 LINE"
);
},
{
closed = 1;
nodes = (
"79 824 LINE",
"24 738 LINE",
"57 738 LINE",
"96 806 LINE",
"135 738 LINE",
"168 738 LINE",
"113 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 1 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 1 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
13 1 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = Ycircumflex;
unicode = 0176;
},
{
glyphname = Ydieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"114 274 LINE",
"113 0 LINE",
"78 0 LINE",
"78 274 LINE",
"3 699 LINE",
"39 699 LINE",
"95 357 LINE",
"96 357 LINE",
"152 699 LINE",
"188 699 LINE"
);
},
{
closed = 1;
nodes = (
"79 816 LINE",
"55 816 LINE",
"55 753 LINE",
"79 753 LINE"
);
},
{
closed = 1;
nodes = (
"136 816 LINE",
"111 816 LINE",
"111 753 LINE",
"136 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 11 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 7 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Z;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"183 27 LINE",
"48 27 LINE",
"175 674 LINE",
"175 699 LINE",
"29 699 LINE",
"29 672 LINE",
"138 672 LINE",
"12 25 LINE",
"12 0 LINE",
"183 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Zacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"183 27 LINE",
"48 27 LINE",
"175 674 LINE",
"175 699 LINE",
"29 699 LINE",
"29 672 LINE",
"138 672 LINE",
"12 25 LINE",
"12 0 LINE",
"183 0 LINE"
);
},
{
closed = 1;
nodes = (
"108 739 LINE",
"163 825 LINE",
"131 825 LINE",
"85 739 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 0 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = Zcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"183 27 LINE",
"48 27 LINE",
"175 674 LINE",
"175 699 LINE",
"29 699 LINE",
"29 672 LINE",
"138 672 LINE",
"12 25 LINE",
"12 0 LINE",
"183 0 LINE"
);
},
{
closed = 1;
nodes = (
"113 741 LINE",
"168 827 LINE",
"136 827 LINE",
"97 758 LINE",
"58 827 LINE",
"25 827 LINE",
"80 741 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = Zdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"183 27 LINE",
"48 27 LINE",
"175 674 LINE",
"175 699 LINE",
"29 699 LINE",
"29 672 LINE",
"138 672 LINE",
"12 25 LINE",
"12 0 LINE",
"183 0 LINE"
);
},
{
closed = 1;
nodes = (
"109 816 LINE",
"85 816 LINE",
"85 753 LINE",
"109 753 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
10 5 11 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = Zdotaccent;
unicode = 017B;
},
{
glyphname = a;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"109.667 252 OFFCURVE",
"131.333 244 OFFCURVE",
"134 216 CURVE",
"134 69 LINE",
"131.333 37 OFFCURVE",
"110.333 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = a;
unicode = 0061;
},
{
glyphname = aacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 535 LINE",
"160 621 LINE",
"128 621 LINE",
"82 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
51 10 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
49 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = abreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 609 LINE",
"38 578.333 OFFCURVE",
"64.667 553 OFFCURVE",
"94 553 CURVE SMOOTH",
"127.333 553 OFFCURVE",
"153 578.333 OFFCURVE",
"153 609 CURVE",
"131 609 LINE",
"131 590.333 OFFCURVE",
"114 574 OFFCURVE",
"94 574 CURVE SMOOTH",
"75.333 574 OFFCURVE",
"59 590.333 OFFCURVE",
"59 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
52 2 59 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = acircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"109.667 252 OFFCURVE",
"131.333 244 OFFCURVE",
"134 216 CURVE",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 621 LINE",
"23 535 LINE",
"55 535 LINE",
"94 604 LINE",
"134 535 LINE",
"166 535 LINE",
"111 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
56 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
56 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
53 1 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 612 LINE",
"53 612 LINE",
"53 549 LINE",
"78 549 LINE"
);
},
{
closed = 1;
nodes = (
"134 612 LINE",
"110 612 LINE",
"110 549 LINE",
"134 549 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
37 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
53 5 54 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 5 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 0 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 51 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = agrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 535 LINE",
"60 621 LINE",
"28 621 LINE",
"83 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
52 0 50 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = amacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 594 LINE",
"36 594 LINE",
"36 568 LINE",
"150 568 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
52 3 49 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = amacron;
unicode = 0101;
},
{
glyphname = aogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"109.667 252 OFFCURVE",
"131.333 244 OFFCURVE",
"134 216 CURVE",
"134 69 LINE",
"131.333 37 OFFCURVE",
"110.333 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"200 -61 LINE",
"181.082 -104.242 OFFCURVE",
"112 -97.676 OFFCURVE",
"112 -49 CURVE SMOOTH",
"112 -29 OFFCURVE",
"122.667 -13.333 OFFCURVE",
"140 0 CURVE",
"169 0 LINE",
"146.333 -9.333 OFFCURVE",
"131.667 -29 OFFCURVE",
"133 -45 CURVE",
"133 -76.339 OFFCURVE",
"170.066 -81.224 OFFCURVE",
"187 -53 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
57 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
9 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = aring;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"109.667 252 OFFCURVE",
"131.333 244 OFFCURVE",
"134 216 CURVE",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 531 OFFCURVE",
"150 556 OFFCURVE",
"150 584 CURVE SMOOTH",
"150 616 OFFCURVE",
"124.667 640 OFFCURVE",
"94 640 CURVE SMOOTH",
"64.667 640 OFFCURVE",
"40 614.667 OFFCURVE",
"40 584 CURVE SMOOTH",
"40 554.667 OFFCURVE",
"67.333 531 OFFCURVE",
"94 531 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 621 OFFCURVE",
"131 603.667 OFFCURVE",
"131 585 CURVE SMOOTH",
"131 566.333 OFFCURVE",
"114 549 OFFCURVE",
"94 549 CURVE SMOOTH",
"75.333 549 OFFCURVE",
"59 566.333 OFFCURVE",
"59 585 CURVE SMOOTH",
"59 603.667 OFFCURVE",
"75.333 621 OFFCURVE",
"94 621 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
64 4 20 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
27 6 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
52 20 64 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
218 52 234 52 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
9 52 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 52 58 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
70 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
70 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
74 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
55 49 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = atilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"97.667 -3 OFFCURVE",
"116 6 OFFCURVE",
"134 24 CURVE",
"134 0 LINE",
"168 0 LINE",
"168 417 LINE SMOOTH",
"168 469 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"111 252 OFFCURVE",
"134 242.667 OFFCURVE",
"134 212 CURVE SMOOTH",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 566 LINE",
"46 576 OFFCURVE",
"55.667 581 OFFCURVE",
"67 581 CURVE SMOOTH",
"86.889 581 OFFCURVE",
"109.276 559 OFFCURVE",
"129 559 CURVE SMOOTH",
"144.333 559 OFFCURVE",
"157.333 566.667 OFFCURVE",
"168 582 CURVE",
"151 594 LINE",
"143.667 584.667 OFFCURVE",
"134.667 580 OFFCURVE",
"124 580 CURVE SMOOTH",
"113.333 580 OFFCURVE",
"102.833 583.667 OFFCURVE",
"92.5 591 CURVE SMOOTH",
"82.167 598.333 OFFCURVE",
"71.667 602 OFFCURVE",
"61 602 CURVE SMOOTH",
"44.333 602 OFFCURVE",
"31.667 594 OFFCURVE",
"23 578 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
37 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
30 2 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
51 2 64 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
30 0 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
64 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
59 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = ae;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 -3 LINE SMOOTH",
"100.333 -3 OFFCURVE",
"125.667 11.333 OFFCURVE",
"143 34 CURVE",
"155 8.667 OFFCURVE",
"176.667 -3 OFFCURVE",
"198 -3 CURVE SMOOTH",
"215 -3 LINE SMOOTH",
"249.667 -3 OFFCURVE",
"282 24.667 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 206 LINE",
"248 206 LINE",
"248 78 LINE SMOOTH",
"248 42 OFFCURVE",
"230.667 25 OFFCURVE",
"212 25 CURVE SMOOTH",
"201 25 LINE SMOOTH",
"186.333 25 OFFCURVE",
"168 42 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 243 LINE",
"282 243 LINE",
"282 417 LINE SMOOTH",
"282 470.333 OFFCURVE",
"249.667 498 OFFCURVE",
"215 498 CURVE SMOOTH",
"202 498 LINE SMOOTH",
"180.667 498 OFFCURVE",
"163.667 489.667 OFFCURVE",
"151 473 CURVE",
"137.667 489.667 OFFCURVE",
"121 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"52 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 291 LINE",
"54 291 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"131.333 455.333 OFFCURVE",
"134 422 CURVE",
"134 417 LINE",
"134 253 LINE",
"116.667 269 OFFCURVE",
"99 277 OFFCURVE",
"81 277 CURVE SMOOTH",
"77 277 LINE SMOOTH",
"42.333 277 OFFCURVE",
"21 249.333 OFFCURVE",
"21 196 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24 OFFCURVE",
"39 -3 OFFCURVE",
"75 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"95 252 LINE SMOOTH",
"109.667 252 OFFCURVE",
"131.333 244 OFFCURVE",
"134 216 CURVE",
"134 75 LINE SMOOTH",
"134 39 OFFCURVE",
"111.667 22 OFFCURVE",
"93 22 CURVE SMOOTH",
"90 22 LINE SMOOTH",
"71.333 22 OFFCURVE",
"54 39 OFFCURVE",
"54 75 CURVE SMOOTH",
"54 199 LINE SMOOTH",
"54 235 OFFCURVE",
"71.333 252 OFFCURVE",
"90 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"168 266 LINE",
"168 417 LINE SMOOTH",
"168 453 OFFCURVE",
"186.333 470 OFFCURVE",
"205 470 CURVE SMOOTH",
"212 470 LINE SMOOTH",
"230.667 470 OFFCURVE",
"248 453 OFFCURVE",
"248 417 CURVE SMOOTH",
"248 266 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
61 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 6 9 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
46 6 43 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
61 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
53 9 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
73 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
49 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
73 2 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 34 73 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
39 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
53 0 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
64 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
65 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = b;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"111 -3 LINE SMOOTH",
"147 -3 OFFCURVE",
"169 24.667 OFFCURVE",
"169 78 CURVE SMOOTH",
"169 417 LINE SMOOTH",
"169 470.333 OFFCURVE",
"148 498 OFFCURVE",
"112 498 CURVE SMOOTH",
"109 498 LINE SMOOTH",
"90.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 699 LINE",
"22 699 LINE",
"22 0 LINE",
"49 0 LINE",
"53 35 LINE",
"67.667 12.333 OFFCURVE",
"89.333 -3 OFFCURVE",
"108 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"99 470 LINE SMOOTH",
"117.667 470 OFFCURVE",
"136 453 OFFCURVE",
"136 417 CURVE SMOOTH",
"136 78 LINE SMOOTH",
"136 42 OFFCURVE",
"118.667 25 OFFCURVE",
"100 25 CURVE SMOOTH",
"97 25 LINE SMOOTH",
"78.333 25 OFFCURVE",
"55 49 OFFCURVE",
"55 85 CURVE SMOOTH",
"55 415 LINE",
"57.667 448.333 OFFCURVE",
"78.667 470 OFFCURVE",
"96 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
24 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 188;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = c;
unicode = 0063;
},
{
glyphname = cacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
},
{
closed = 1;
nodes = (
"105 535 LINE",
"160 621 LINE",
"128 621 LINE",
"82 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
38 0 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
36 22 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = ccaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
},
{
closed = 1;
nodes = (
"110 538 LINE",
"165 624 LINE",
"133 624 LINE",
"93 554 LINE",
"54 624 LINE",
"22 624 LINE",
"77 538 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 26 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
39 22 37 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = ccedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"67.151 -114.036 OFFCURVE",
"146 -103.013 OFFCURVE",
"146 -52 CURVE SMOOTH",
"146 -26.667 OFFCURVE",
"118.667 -12.333 OFFCURVE",
"96 -23 CURVE",
"103 -3 LINE",
"137.667 -0.333 OFFCURVE",
"168 26 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE",
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"52.333 -1.667 OFFCURVE",
"83 -3 CURVE",
"70 -32 LINE",
"78 -35 LINE",
"94 -24.333 OFFCURVE",
"119.667 -32 OFFCURVE",
"121 -52 CURVE SMOOTH",
"123.416 -85.818 OFFCURVE",
"65.71 -88.996 OFFCURVE",
"40 -69 CURVE",
"36 -86 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
33 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
1 14 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
11 14 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
47 14 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
},
{
closed = 1;
nodes = (
"78 621 LINE",
"23 535 LINE",
"55 535 LINE",
"94 604 LINE",
"134 535 LINE",
"166 535 LINE",
"111 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 26 35 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
40 1 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ccircumflex;
unicode = 0109;
},
{
glyphname = cdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
},
{
closed = 1;
nodes = (
"106 613 LINE",
"81 613 LINE",
"81 550 LINE",
"106 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 6 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 5 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = cdotaccent;
unicode = 010B;
},
{
glyphname = d;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"82 -3 LINE SMOOTH",
"100.667 -3 OFFCURVE",
"121.333 11.333 OFFCURVE",
"136 34 CURVE",
"140 0 LINE",
"168 0 LINE",
"168 699 LINE",
"134 699 LINE",
"134 463 LINE",
"119.333 484.333 OFFCURVE",
"99.667 498 OFFCURVE",
"81 498 CURVE SMOOTH",
"77 498 LINE SMOOTH",
"42.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"43.333 -3 OFFCURVE",
"78 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"134 446 OFFCURVE",
"134 410 CURVE SMOOTH",
"134 85 LINE SMOOTH",
"134 49 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH",
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 12 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
11 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 190;
}
);
note = d;
unicode = 0064;
},
{
glyphname = eth;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 602 LINE",
"211 602 LINE",
"211 627 LINE",
"168 627 LINE",
"168 699 LINE",
"134 699 LINE",
"134 627 LINE",
"100 627 LINE",
"100 602 LINE",
"134 602 LINE",
"134 463 LINE",
"119.333 484.333 OFFCURVE",
"99.667 498 OFFCURVE",
"81 498 CURVE SMOOTH",
"77 498 LINE SMOOTH",
"42.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"43.333 -3 OFFCURVE",
"78 -3 CURVE SMOOTH",
"82 -3 LINE SMOOTH",
"100.667 -3 OFFCURVE",
"121.333 11.333 OFFCURVE",
"136 34 CURVE",
"140 0 LINE",
"168 0 LINE"
);
},
{
closed = 1;
nodes = (
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"131.333 448.333 OFFCURVE",
"134 415 CURVE",
"134 79 LINE",
"131.333 45.667 OFFCURVE",
"110.333 25 OFFCURVE",
"93 25 CURVE SMOOTH",
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
2 18 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
21 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 5 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 208;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = dcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"82 -3 LINE SMOOTH",
"100.667 -3 OFFCURVE",
"121.333 11.333 OFFCURVE",
"136 34 CURVE",
"140 0 LINE",
"168 0 LINE",
"168 699 LINE",
"134 699 LINE",
"134 463 LINE",
"119.333 484.333 OFFCURVE",
"99.667 498 OFFCURVE",
"81 498 CURVE SMOOTH",
"77 498 LINE SMOOTH",
"42.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"43.333 -3 OFFCURVE",
"78 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"134 446 OFFCURVE",
"134 410 CURVE SMOOTH",
"134 79 LINE",
"131.333 45.667 OFFCURVE",
"110.333 25 OFFCURVE",
"93 25 CURVE SMOOTH",
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"244 699 LINE",
"207 699 LINE",
"207 624 LINE",
"223 624 LINE",
"208 568 LINE",
"224 568 LINE",
"244 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 6 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 6 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 4 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 12 13 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
38 40 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
41 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
11 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
38 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 0 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 233;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = dcroat;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 602 LINE",
"211 602 LINE",
"211 627 LINE",
"168 627 LINE",
"168 699 LINE",
"134 699 LINE",
"134 627 LINE",
"100 627 LINE",
"100 602 LINE",
"134 602 LINE",
"134 463 LINE",
"119.333 484.333 OFFCURVE",
"99.667 498 OFFCURVE",
"81 498 CURVE SMOOTH",
"77 498 LINE SMOOTH",
"42.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"43.333 -3 OFFCURVE",
"78 -3 CURVE SMOOTH",
"82 -3 LINE SMOOTH",
"100.667 -3 OFFCURVE",
"121.333 11.333 OFFCURVE",
"136 34 CURVE",
"140 0 LINE",
"168 0 LINE"
);
},
{
closed = 1;
nodes = (
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"131.333 448.333 OFFCURVE",
"134 415 CURVE",
"134 79 LINE",
"131.333 45.667 OFFCURVE",
"110.333 25 OFFCURVE",
"93 25 CURVE SMOOTH",
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
2 18 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
21 3 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 5 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 219;
}
);
note = dcroat;
unicode = 0111;
},
{
glyphname = e;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = e;
unicode = 0065;
},
{
glyphname = eacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"105 535 LINE",
"160 621 LINE",
"127 621 LINE",
"81 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
40 4 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
38 10 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"38 609 LINE",
"38 578.333 OFFCURVE",
"63.333 553 OFFCURVE",
"94 553 CURVE SMOOTH",
"127.333 553 OFFCURVE",
"152 578.333 OFFCURVE",
"152 609 CURVE",
"130 609 LINE",
"130 590.333 OFFCURVE",
"112.667 574 OFFCURVE",
"94 574 CURVE SMOOTH",
"75.333 574 OFFCURVE",
"59 590.333 OFFCURVE",
"59 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 2 48 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ebreve;
unicode = 0115;
},
{
glyphname = ecaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"110 538 LINE",
"165 624 LINE",
"132 624 LINE",
"93 555 LINE",
"54 624 LINE",
"21 624 LINE",
"76 538 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
41 14 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 10 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = ecircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"77 621 LINE",
"22 535 LINE",
"55 535 LINE",
"94 603 LINE",
"133 535 LINE",
"166 535 LINE",
"111 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
41 14 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
42 1 18 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"134 612 LINE",
"109 612 LINE",
"109 549 LINE",
"134 549 LINE"
);
},
{
closed = 1;
nodes = (
"77 612 LINE",
"53 612 LINE",
"53 549 LINE",
"77 549 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
25 6 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 5 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 5 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"105 613 LINE",
"81 613 LINE",
"81 550 LINE",
"105 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
25 6 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
38 5 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
7 6 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = edotaccent;
unicode = 0117;
},
{
glyphname = egrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"105 535 LINE",
"59 621 LINE",
"27 621 LINE",
"82 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
41 10 39 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = emacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"84 -3 CURVE SMOOTH",
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
},
{
closed = 1;
nodes = (
"149 594 LINE",
"35 594 LINE",
"35 568 LINE",
"149 568 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
7 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
41 3 38 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
28 2 23 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = emacron;
unicode = 0113;
},
{
glyphname = eogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"129 -56 LINE",
"112.085 -84.191 OFFCURVE",
"74 -79.275 OFFCURVE",
"74 -48 CURVE SMOOTH",
"74 -33.333 OFFCURVE",
"88.333 -15 OFFCURVE",
"107 -3 CURVE",
"140.333 -0.333 OFFCURVE",
"168 27.333 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 243 LINE",
"168 243 LINE",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 26 OFFCURVE",
"50.333 -0.333 OFFCURVE",
"81 -3 CURVE",
"65 -16.333 OFFCURVE",
"54 -32 OFFCURVE",
"54 -52 CURVE SMOOTH",
"54 -103.255 OFFCURVE",
"123.042 -107.331 OFFCURVE",
"142 -64 CURVE"
);
},
{
closed = 1;
nodes = (
"54 266 LINE",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 266 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
22 6 11 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 6 29 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 11 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
44 2 20 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = f;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"80 0 LINE",
"80 467 LINE",
"142 467 LINE",
"142 495 LINE",
"80 495 LINE",
"80 623 LINE SMOOTH",
"80 663 OFFCURVE",
"110 683 OFFCURVE",
"142 675 CURVE",
"142 702 LINE",
"82.733 717.461 OFFCURVE",
"47 679.962 OFFCURVE",
"47 625 CURVE SMOOTH",
"47 495 LINE",
"21 495 LINE",
"21 467 LINE",
"47 467 LINE",
"47 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
19 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 144;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"140 495 LINE",
"134 481 LINE",
"134 466 LINE",
"118 484.667 OFFCURVE",
"99.333 498 OFFCURVE",
"82 498 CURVE SMOOTH",
"78 498 LINE SMOOTH",
"43.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"81 -3 LINE SMOOTH",
"98.333 -3 OFFCURVE",
"118 10 OFFCURVE",
"134 30 CURVE",
"134 -84 LINE SMOOTH",
"134 -120 OFFCURVE",
"115.667 -137 OFFCURVE",
"101 -137 CURVE SMOOTH",
"90 -137 LINE SMOOTH",
"71.333 -137 OFFCURVE",
"54 -120 OFFCURVE",
"54 -84 CURVE SMOOTH",
"54 -29 LINE",
"21 -29 LINE",
"21 -84 LINE SMOOTH",
"21 -137.333 OFFCURVE",
"52 -165 OFFCURVE",
"88 -165 CURVE SMOOTH",
"104 -165 LINE SMOOTH",
"134.667 -165 OFFCURVE",
"168 -137.333 OFFCURVE",
"168 -84 CURVE SMOOTH",
"168 495 LINE"
);
},
{
closed = 1;
nodes = (
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"134 446 OFFCURVE",
"134 410 CURVE SMOOTH",
"134 85 LINE SMOOTH",
"134 49 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
19 4 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
34 4 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = g;
unicode = 0067;
},
{
glyphname = gbreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 495 LINE",
"168 -84 LINE SMOOTH",
"168 -137.333 OFFCURVE",
"134.667 -165 OFFCURVE",
"104 -165 CURVE SMOOTH",
"88 -165 LINE SMOOTH",
"52 -165 OFFCURVE",
"21 -137.333 OFFCURVE",
"21 -84 CURVE SMOOTH",
"21 -29 LINE",
"54 -29 LINE",
"54 -84 LINE SMOOTH",
"54 -120 OFFCURVE",
"71.333 -137 OFFCURVE",
"90 -137 CURVE SMOOTH",
"101 -137 LINE SMOOTH",
"115.667 -137 OFFCURVE",
"134 -120 OFFCURVE",
"134 -84 CURVE SMOOTH",
"134 30 LINE",
"118 10 OFFCURVE",
"98.333 -3 OFFCURVE",
"81 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"21 24.667 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 417 LINE SMOOTH",
"21 470.333 OFFCURVE",
"43.333 498 OFFCURVE",
"78 498 CURVE SMOOTH",
"82 498 LINE SMOOTH",
"99.333 498 OFFCURVE",
"118 484.667 OFFCURVE",
"134 466 CURVE",
"134 481 LINE",
"140 495 LINE"
);
},
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"110.333 25 OFFCURVE",
"131.333 45.667 OFFCURVE",
"134 79 CURVE",
"134 415 LINE",
"131.333 448.333 OFFCURVE",
"110.333 470 OFFCURVE",
"93 470 CURVE SMOOTH",
"90 470 LINE SMOOTH",
"71.333 470 OFFCURVE",
"54 453 OFFCURVE",
"54 417 CURVE SMOOTH",
"54 78 LINE SMOOTH",
"54 42 OFFCURVE",
"71.333 25 OFFCURVE",
"90 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"36 609 LINE",
"36 578.333 OFFCURVE",
"62.667 553 OFFCURVE",
"92 553 CURVE SMOOTH",
"125.333 553 OFFCURVE",
"150 578.333 OFFCURVE",
"150 609 CURVE",
"129 609 LINE",
"129 590.333 OFFCURVE",
"112 574 OFFCURVE",
"92 574 CURVE SMOOTH",
"73.333 574 OFFCURVE",
"57 590.333 OFFCURVE",
"57 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
59 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 31 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 31 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = gcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"140 495 LINE",
"134 481 LINE",
"134 466 LINE",
"118 484.667 OFFCURVE",
"99.333 498 OFFCURVE",
"82 498 CURVE SMOOTH",
"78 498 LINE SMOOTH",
"43.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"81 -3 LINE SMOOTH",
"98.333 -3 OFFCURVE",
"118 10 OFFCURVE",
"134 30 CURVE",
"134 -84 LINE SMOOTH",
"134 -120 OFFCURVE",
"115.667 -137 OFFCURVE",
"101 -137 CURVE SMOOTH",
"90 -137 LINE SMOOTH",
"71.333 -137 OFFCURVE",
"54 -120 OFFCURVE",
"54 -84 CURVE SMOOTH",
"54 -29 LINE",
"21 -29 LINE",
"21 -84 LINE SMOOTH",
"21 -137.333 OFFCURVE",
"52 -165 OFFCURVE",
"88 -165 CURVE SMOOTH",
"104 -165 LINE SMOOTH",
"134.667 -165 OFFCURVE",
"168 -137.333 OFFCURVE",
"168 -84 CURVE SMOOTH",
"168 495 LINE"
);
},
{
closed = 1;
nodes = (
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"93 470 LINE SMOOTH",
"111.667 470 OFFCURVE",
"134 446 OFFCURVE",
"134 410 CURVE SMOOTH",
"134 79 LINE",
"131.333 45.667 OFFCURVE",
"110.333 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"76 621 LINE",
"21 535 LINE",
"53 535 LINE",
"92 604 LINE",
"132 535 LINE",
"164 535 LINE",
"109 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
56 8 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
19 4 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
34 4 53 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
57 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = gcircumflex;
unicode = 011D;
},
{
glyphname = gcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 495 LINE",
"168 -84 LINE SMOOTH",
"168 -137.333 OFFCURVE",
"134.667 -165 OFFCURVE",
"104 -165 CURVE SMOOTH",
"88 -165 LINE SMOOTH",
"52 -165 OFFCURVE",
"21 -137.333 OFFCURVE",
"21 -84 CURVE SMOOTH",
"21 -29 LINE",
"54 -29 LINE",
"54 -84 LINE SMOOTH",
"54 -120 OFFCURVE",
"71.333 -137 OFFCURVE",
"90 -137 CURVE SMOOTH",
"101 -137 LINE SMOOTH",
"115.667 -137 OFFCURVE",
"134 -120 OFFCURVE",
"134 -84 CURVE SMOOTH",
"134 30 LINE",
"118 10 OFFCURVE",
"98.333 -3 OFFCURVE",
"81 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"21 24.667 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 417 LINE SMOOTH",
"21 470.333 OFFCURVE",
"43.333 498 OFFCURVE",
"78 498 CURVE SMOOTH",
"82 498 LINE SMOOTH",
"99.333 498 OFFCURVE",
"118 484.667 OFFCURVE",
"134 466 CURVE",
"134 481 LINE",
"140 495 LINE"
);
},
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"110.333 25 OFFCURVE",
"131.333 45.667 OFFCURVE",
"134 79 CURVE",
"134 410 LINE SMOOTH",
"134 446 OFFCURVE",
"111.667 470 OFFCURVE",
"93 470 CURVE SMOOTH",
"90 470 LINE SMOOTH",
"71.333 470 OFFCURVE",
"54 453 OFFCURVE",
"54 417 CURVE SMOOTH",
"54 78 LINE SMOOTH",
"54 42 OFFCURVE",
"71.333 25 OFFCURVE",
"90 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 535 LINE",
"104 535 LINE",
"104 594 LINE",
"96 594 LINE",
"108 638 LINE",
"93 638 LINE",
"78 594 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
55 9 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
56 9 36 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 31 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 31 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
56 31 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uni0123;
unicode = 0123;
},
{
glyphname = gdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 495 LINE",
"168 -84 LINE SMOOTH",
"168 -137.333 OFFCURVE",
"134.667 -165 OFFCURVE",
"104 -165 CURVE SMOOTH",
"88 -165 LINE SMOOTH",
"52 -165 OFFCURVE",
"21 -137.333 OFFCURVE",
"21 -84 CURVE SMOOTH",
"21 -29 LINE",
"54 -29 LINE",
"54 -84 LINE SMOOTH",
"54 -120 OFFCURVE",
"71.333 -137 OFFCURVE",
"90 -137 CURVE SMOOTH",
"101 -137 LINE SMOOTH",
"115.667 -137 OFFCURVE",
"134 -120 OFFCURVE",
"134 -84 CURVE SMOOTH",
"134 30 LINE",
"118 10 OFFCURVE",
"98.333 -3 OFFCURVE",
"81 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"21 24.667 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 417 LINE SMOOTH",
"21 470.333 OFFCURVE",
"43.333 498 OFFCURVE",
"78 498 CURVE SMOOTH",
"82 498 LINE SMOOTH",
"99.333 498 OFFCURVE",
"118 484.667 OFFCURVE",
"134 466 CURVE",
"134 481 LINE",
"140 495 LINE"
);
},
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"110.333 25 OFFCURVE",
"131.333 45.667 OFFCURVE",
"134 79 CURVE",
"134 415 LINE",
"131.333 448.333 OFFCURVE",
"110.333 470 OFFCURVE",
"93 470 CURVE SMOOTH",
"90 470 LINE SMOOTH",
"71.333 470 OFFCURVE",
"54 453 OFFCURVE",
"54 417 CURVE SMOOTH",
"54 78 LINE SMOOTH",
"54 42 OFFCURVE",
"71.333 25 OFFCURVE",
"90 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"103 613 LINE",
"79 613 LINE",
"79 550 LINE",
"103 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
36 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 31 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
17 31 55 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = gdotaccent;
unicode = 0121;
},
{
glyphname = h;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"102 470 LINE SMOOTH",
"120.667 470 OFFCURVE",
"138 453 OFFCURVE",
"138 417 CURVE SMOOTH",
"138 0 LINE",
"172 0 LINE",
"172 417 LINE SMOOTH",
"172 470.333 OFFCURVE",
"149.667 498 OFFCURVE",
"115 498 CURVE SMOOTH",
"112 498 LINE SMOOTH",
"92 498 OFFCURVE",
"71.667 482.667 OFFCURVE",
"57 460 CURVE",
"57 699 LINE",
"24 699 LINE",
"24 0 LINE",
"57 0 LINE",
"57 408 LINE SMOOTH",
"57 442.667 OFFCURVE",
"80.333 470 OFFCURVE",
"99 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 192;
}
);
note = h;
unicode = 0068;
},
{
glyphname = hbar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"102 470 LINE SMOOTH",
"120.667 470 OFFCURVE",
"138 453 OFFCURVE",
"138 417 CURVE SMOOTH",
"138 0 LINE",
"172 0 LINE",
"172 417 LINE SMOOTH",
"172 470.333 OFFCURVE",
"149.667 498 OFFCURVE",
"115 498 CURVE SMOOTH",
"112 498 LINE SMOOTH",
"92 498 OFFCURVE",
"71.667 482.667 OFFCURVE",
"57 460 CURVE",
"57 602 LINE",
"104 602 LINE",
"104 627 LINE",
"57 627 LINE",
"57 699 LINE",
"24 699 LINE",
"24 627 LINE",
"-7 627 LINE",
"-7 602 LINE",
"24 602 LINE",
"24 0 LINE",
"57 0 LINE",
"57 408 LINE SMOOTH",
"57 442.667 OFFCURVE",
"80.333 470 OFFCURVE",
"99 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
16 5 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
9 3 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
16 4 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 192;
}
);
note = "LATIN SMALL LETTER H WITH STROKE";
unicode = 0127;
},
{
glyphname = hcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"102 470 LINE SMOOTH",
"120.667 470 OFFCURVE",
"138 453 OFFCURVE",
"138 417 CURVE SMOOTH",
"138 0 LINE",
"172 0 LINE",
"172 417 LINE SMOOTH",
"172 470.333 OFFCURVE",
"149.667 498 OFFCURVE",
"115 498 CURVE SMOOTH",
"112 498 LINE SMOOTH",
"92 498 OFFCURVE",
"71.667 482.667 OFFCURVE",
"57 460 CURVE",
"57 699 LINE",
"24 699 LINE",
"24 0 LINE",
"57 0 LINE",
"57 413 LINE",
"59.667 445 OFFCURVE",
"81.667 470 OFFCURVE",
"99 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"24 824 LINE",
"-31 738 LINE",
"2 738 LINE",
"41 806 LINE",
"80 738 LINE",
"112 738 LINE",
"57 824 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 5 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
23 4 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 4 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 4 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 192;
}
);
note = hcircumflex;
unicode = 0125;
},
{
glyphname = i;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"24 612 LINE",
"24 540 LINE",
"57 540 LINE",
"57 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = i;
unicode = 0069;
},
{
glyphname = idotless;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"52 534 LINE",
"107 620 LINE",
"74 620 LINE",
"28 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 495 LINE",
"57 0 LINE",
"24 0 LINE",
"24 495 LINE"
);
},
{
closed = 1;
nodes = (
"-15 609 LINE",
"-15 577 OFFCURVE",
"11.667 552 OFFCURVE",
"41 552 CURVE SMOOTH",
"74.333 552 OFFCURVE",
"99 578.333 OFFCURVE",
"99 609 CURVE",
"78 609 LINE",
"78 590.333 OFFCURVE",
"59.667 573 OFFCURVE",
"41 573 CURVE SMOOTH",
"22.333 573 OFFCURVE",
"6 590.333 OFFCURVE",
"6 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 6 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 2 14 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = ibreve;
unicode = 012D;
},
{
glyphname = icircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"25 620 LINE",
"-30 534 LINE",
"2 534 LINE",
"41 602 LINE",
"80 534 LINE",
"113 534 LINE",
"58 620 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
5 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 495 LINE",
"57 0 LINE",
"24 0 LINE",
"24 495 LINE"
);
},
{
closed = 1;
nodes = (
"24 612 LINE",
"0 612 LINE",
"0 549 LINE",
"24 549 LINE"
);
},
{
closed = 1;
nodes = (
"81 612 LINE",
"57 612 LINE",
"57 549 LINE",
"81 549 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = igrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 495 LINE",
"57 0 LINE",
"24 0 LINE",
"24 495 LINE"
);
},
{
closed = 1;
nodes = (
"53 534 LINE",
"7 620 LINE",
"-26 620 LINE",
"29 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
7 0 3 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ij;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"24 612 LINE",
"24 540 LINE",
"57 540 LINE",
"57 612 LINE"
);
},
{
closed = 1;
nodes = (
"103 615 LINE",
"103 540 LINE",
"137 540 LINE",
"137 615 LINE"
);
},
{
closed = 1;
nodes = (
"103 495 LINE",
"103 -84 LINE SMOOTH",
"103 -120 OFFCURVE",
"85.667 -137 OFFCURVE",
"59 -137 CURVE",
"59 -165 LINE",
"111 -165 OFFCURVE",
"137 -138 OFFCURVE",
"137 -84 CURVE SMOOTH",
"137 495 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
11 10 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 160;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = imacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"97 593 LINE",
"-18 593 LINE",
"-18 568 LINE",
"97 568 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
7 3 4 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = iogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"76 -53 LINE",
"59.085 -81.191 OFFCURVE",
"21 -76.275 OFFCURVE",
"21 -45 CURVE SMOOTH",
"21 -29 OFFCURVE",
"35.667 -9.333 OFFCURVE",
"57 0 CURVE",
"57 495 LINE",
"24 495 LINE",
"24 0 LINE",
"29 0 LINE",
"11.667 -13.333 OFFCURVE",
"1 -29 OFFCURVE",
"1 -49 CURVE SMOOTH",
"1 -97.676 OFFCURVE",
"70.082 -104.242 OFFCURVE",
"89 -61 CURVE"
);
},
{
closed = 1;
nodes = (
"24 612 LINE",
"24 540 LINE",
"57 540 LINE",
"57 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
15 5 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
6 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
149 15 165 15 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = iogonek;
unicode = 012F;
},
{
glyphname = itilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 495 LINE",
"57 0 LINE",
"24 0 LINE",
"24 495 LINE"
);
},
{
closed = 1;
nodes = (
"-16 566 LINE",
"-7.333 575.333 OFFCURVE",
"2.333 580 OFFCURVE",
"13 580 CURVE SMOOTH",
"22.333 580 OFFCURVE",
"32.167 576.333 OFFCURVE",
"42.5 569 CURVE SMOOTH",
"52.833 561.667 OFFCURVE",
"63.667 558 OFFCURVE",
"75 558 CURVE SMOOTH",
"91.667 558 OFFCURVE",
"104.667 566 OFFCURVE",
"114 582 CURVE",
"98 593 LINE",
"89.333 583.667 OFFCURVE",
"80.333 579 OFFCURVE",
"71 579 CURVE SMOOTH",
"53.046 579 OFFCURVE",
"24.954 601 OFFCURVE",
"7 601 CURVE SMOOTH",
"-8.333 601 OFFCURVE",
"-21 593 OFFCURVE",
"-31 577 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 6 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 2 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = itilde;
unicode = 0129;
},
{
glyphname = j;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"67 615 LINE",
"67 540 LINE",
"100 540 LINE",
"100 615 LINE"
);
},
{
closed = 1;
nodes = (
"67 495 LINE",
"67 -84 LINE SMOOTH",
"67 -120 OFFCURVE",
"48.667 -137 OFFCURVE",
"22 -137 CURVE",
"22 -165 LINE",
"74 -165 OFFCURVE",
"100 -138 OFFCURVE",
"100 -84 CURVE SMOOTH",
"100 495 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 122;
}
);
note = j;
unicode = 006A;
},
{
glyphname = jcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"67 495 LINE",
"67 -84 LINE SMOOTH",
"67 -120 OFFCURVE",
"48.667 -137 OFFCURVE",
"22 -137 CURVE",
"22 -165 LINE",
"74 -165 OFFCURVE",
"100 -138 OFFCURVE",
"100 -84 CURVE SMOOTH",
"100 495 LINE"
);
},
{
closed = 1;
nodes = (
"67 630 LINE",
"12 544 LINE",
"44 544 LINE",
"83 612 LINE",
"122 544 LINE",
"155 544 LINE",
"100 630 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
12 7 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
10 3 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
12 3 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 3 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 122;
}
);
note = jcircumflex;
unicode = 0135;
},
{
glyphname = k;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"171 495 LINE",
"139 495 LINE",
"57 292 LINE",
"57 699 LINE",
"24 699 LINE",
"24 0 LINE",
"57 0 LINE",
"57 221 LINE",
"137 0 LINE",
"171 0 LINE",
"78 259 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 173;
}
);
note = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"171 495 LINE",
"139 495 LINE",
"57 292 LINE",
"57 699 LINE",
"24 699 LINE",
"24 0 LINE",
"57 0 LINE",
"57 221 LINE",
"137 0 LINE",
"171 0 LINE",
"78 259 LINE"
);
},
{
closed = 1;
nodes = (
"113 -19 LINE",
"76 -19 LINE",
"76 -94 LINE",
"92 -94 LINE",
"77 -150 LINE",
"93 -150 LINE",
"113 -94 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 12 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 173;
}
);
note = uni0137;
unicode = 0137;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"171 495 LINE",
"139 495 LINE",
"57 292 LINE",
"57 495 LINE",
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 221 LINE",
"137 0 LINE",
"171 0 LINE",
"78 259 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 1 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 173;
}
);
note = .001;
unicode = 0138;
},
{
glyphname = l;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"57 0 LINE",
"57 699 LINE",
"24 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 77;
}
);
note = l;
unicode = 006C;
},
{
glyphname = lacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"57 0 LINE",
"57 699 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"52 738 LINE",
"107 824 LINE",
"75 824 LINE",
"29 738 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 2 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 77;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = lcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"57 0 LINE",
"57 699 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"118 699 LINE",
"82 699 LINE",
"82 624 LINE",
"97 624 LINE",
"82 568 LINE",
"99 568 LINE",
"118 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
6 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 132;
}
);
note = "LATIN SMALL LETTER L WITH CARON";
unicode = 013E;
},
{
glyphname = lcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"57 0 LINE",
"57 699 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"59 -22 LINE",
"22 -22 LINE",
"22 -98 LINE",
"38 -98 LINE",
"23 -154 LINE",
"39 -154 LINE",
"59 -98 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
6 8 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
7 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 5 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 77;
}
);
note = lquotesinglbase;
unicode = 013C;
},
{
glyphname = ldot;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 0 LINE",
"57 0 LINE",
"57 699 LINE",
"24 699 LINE"
);
},
{
closed = 1;
nodes = (
"128 374 LINE",
"91 374 LINE",
"91 298 LINE",
"128 298 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 147;
}
);
note = lperiodcentered;
unicode = 0140;
},
{
glyphname = lslash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"41 0 LINE",
"74 0 LINE",
"74 333 LINE",
"131 374 LINE",
"119 396 LINE",
"74 363 LINE",
"74 699 LINE",
"41 699 LINE",
"41 340 LINE",
"3 313 LINE",
"16 291 LINE",
"41 309 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 6 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
0 10 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 10 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 135;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = m;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 0 LINE",
"171 0 LINE",
"171 408 LINE SMOOTH",
"171 444 OFFCURVE",
"193.333 470 OFFCURVE",
"212 470 CURVE SMOOTH",
"216 470 LINE SMOOTH",
"233.333 470 OFFCURVE",
"252 453 OFFCURVE",
"252 417 CURVE SMOOTH",
"252 0 LINE",
"285 0 LINE",
"285 417 LINE SMOOTH",
"285 470.333 OFFCURVE",
"262.667 498 OFFCURVE",
"228 498 CURVE SMOOTH",
"225 498 LINE SMOOTH",
"205 498 OFFCURVE",
"180.667 480.333 OFFCURVE",
"166 455 CURVE",
"156.667 483.667 OFFCURVE",
"139.333 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 413 LINE",
"57.667 445 OFFCURVE",
"80.667 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
32 6 33 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 6 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 33 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
32 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
153 0 169 0 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 216 0 232 0 248 0 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
8 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 305;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 0 LINE",
"171 0 LINE",
"171 417 LINE SMOOTH",
"171 470.333 OFFCURVE",
"148.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 413 LINE",
"57.667 445 OFFCURVE",
"80.667 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = n;
unicode = 006E;
},
{
glyphname = nacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 0 LINE",
"171 0 LINE",
"171 417 LINE SMOOTH",
"171 470.333 OFFCURVE",
"148.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 413 LINE",
"57.667 445 OFFCURVE",
"80.667 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 535 LINE",
"153 621 LINE",
"121 621 LINE",
"75 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 17 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 4 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = napostrophe;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"135 470 LINE SMOOTH",
"116.333 470 OFFCURVE",
"94.667 445 OFFCURVE",
"92 413 CURVE",
"92 0 LINE",
"59 0 LINE",
"59 495 LINE",
"92 495 LINE",
"92 461 LINE",
"106.667 483.667 OFFCURVE",
"128.333 498 OFFCURVE",
"147 498 CURVE SMOOTH",
"150 498 LINE SMOOTH",
"184.667 498 OFFCURVE",
"207 470.333 OFFCURVE",
"207 417 CURVE SMOOTH",
"207 0 LINE",
"174 0 LINE",
"174 417 LINE SMOOTH",
"174 453 OFFCURVE",
"156.667 470 OFFCURVE",
"138 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"50 683 LINE",
"14 683 LINE",
"14 608 LINE",
"29 608 LINE",
"14 552 LINE",
"31 552 LINE",
"50 608 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
15 4 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 18 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 4 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 4 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 4 27 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 227;
}
);
note = napostrophe;
unicode = 0149;
},
{
glyphname = ncaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"79.333 470 OFFCURVE",
"55 442.667 OFFCURVE",
"55 408 CURVE SMOOTH",
"55 0 LINE",
"22 0 LINE",
"22 495 LINE",
"55 495 LINE",
"55 461 LINE",
"69.667 483.667 OFFCURVE",
"91.333 498 OFFCURVE",
"110 498 CURVE SMOOTH",
"114 498 LINE SMOOTH",
"148.667 498 OFFCURVE",
"171 470.333 OFFCURVE",
"171 417 CURVE SMOOTH",
"171 0 LINE",
"137 0 LINE",
"137 417 LINE SMOOTH",
"137 453 OFFCURVE",
"119.667 470 OFFCURVE",
"101 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 538 LINE",
"170 624 LINE",
"138 624 LINE",
"98 554 LINE",
"59 624 LINE",
"27 624 LINE",
"82 538 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = ncommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 0 LINE",
"171 0 LINE",
"171 417 LINE SMOOTH",
"171 470.333 OFFCURVE",
"148.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 408 LINE SMOOTH",
"55 442.667 OFFCURVE",
"79.333 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"115 -19 LINE",
"78 -19 LINE",
"78 -94 LINE",
"94 -94 LINE",
"79 -150 LINE",
"95 -150 LINE",
"115 -94 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
22 4 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 6 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 26 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 23 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 23 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = uni0146;
unicode = 0146;
},
{
glyphname = eng;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 -84 LINE SMOOTH",
"137 -120 OFFCURVE",
"118.667 -137 OFFCURVE",
"92 -137 CURVE",
"92 -165 LINE",
"144.667 -165 OFFCURVE",
"171 -138 OFFCURVE",
"171 -84 CURVE SMOOTH",
"171 417 LINE SMOOTH",
"171 470.333 OFFCURVE",
"148.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 413 LINE",
"57.667 445 OFFCURVE",
"80.667 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 16 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 18 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = eng;
unicode = 014B;
},
{
glyphname = ntilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"80.667 470 OFFCURVE",
"57.667 445 OFFCURVE",
"55 413 CURVE",
"55 0 LINE",
"22 0 LINE",
"22 495 LINE",
"55 495 LINE",
"55 461 LINE",
"69.667 483.667 OFFCURVE",
"91.333 498 OFFCURVE",
"110 498 CURVE SMOOTH",
"114 498 LINE SMOOTH",
"148.667 498 OFFCURVE",
"171 470.333 OFFCURVE",
"171 417 CURVE SMOOTH",
"171 0 LINE",
"137 0 LINE",
"137 417 LINE SMOOTH",
"137 453 OFFCURVE",
"119.667 470 OFFCURVE",
"101 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"55 566 LINE",
"63.667 576 OFFCURVE",
"73.667 581 OFFCURVE",
"85 581 CURVE SMOOTH",
"94.333 581 OFFCURVE",
"104 577.333 OFFCURVE",
"114 570 CURVE SMOOTH",
"124 562.667 OFFCURVE",
"134.667 559 OFFCURVE",
"146 559 CURVE SMOOTH",
"162 559 OFFCURVE",
"175.333 566.667 OFFCURVE",
"186 582 CURVE",
"169 594 LINE",
"161.667 584.667 OFFCURVE",
"152.667 580 OFFCURVE",
"142 580 CURVE SMOOTH",
"122.851 580 OFFCURVE",
"96.954 602 OFFCURVE",
"79 602 CURVE SMOOTH",
"62.333 602 OFFCURVE",
"49.667 594 OFFCURVE",
"41 578 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
14 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 4 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = o;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = o;
unicode = 006F;
},
{
glyphname = oacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 535 LINE",
"161 621 LINE",
"129 621 LINE",
"83 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
32 0 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = obreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 609 LINE",
"39 578.333 OFFCURVE",
"65.667 553 OFFCURVE",
"95 553 CURVE SMOOTH",
"128.333 553 OFFCURVE",
"153 578.333 OFFCURVE",
"153 609 CURVE",
"132 609 LINE",
"132 590.333 OFFCURVE",
"115 574 OFFCURVE",
"95 574 CURVE SMOOTH",
"76.333 574 OFFCURVE",
"60 590.333 OFFCURVE",
"60 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
35 2 42 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = obreve;
unicode = 014F;
},
{
glyphname = ocircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 621 LINE",
"24 535 LINE",
"56 535 LINE",
"95 604 LINE",
"135 535 LINE",
"167 535 LINE",
"112 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
35 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
36 1 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79 613 LINE",
"54 613 LINE",
"54 550 LINE",
"79 550 LINE"
);
},
{
closed = 1;
nodes = (
"135 613 LINE",
"111 613 LINE",
"111 550 LINE",
"135 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
20 6 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
36 5 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = ograve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 535 LINE",
"61 621 LINE",
"29 621 LINE",
"84 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
33 3 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
35 0 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ohungarumlaut;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"132 532 LINE",
"187 618 LINE",
"155 618 LINE",
"109 532 LINE"
);
},
{
closed = 1;
nodes = (
"78 532 LINE",
"133 618 LINE",
"101 618 LINE",
"55 532 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 3 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
32 0 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
36 0 33 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = ohungarumlaut;
unicode = 0151;
},
{
glyphname = omacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151 594 LINE",
"37 594 LINE",
"37 568 LINE",
"151 568 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
35 3 32 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = omacron;
unicode = 014D;
},
{
glyphname = oslash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 -3 LINE SMOOTH",
"146.667 -3 OFFCURVE",
"179 24.667 OFFCURVE",
"179 78 CURVE SMOOTH",
"179 417 LINE SMOOTH",
"179 429.667 OFFCURVE",
"176.667 442.333 OFFCURVE",
"172 455 CURVE",
"187 508 LINE",
"165 508 LINE",
"157 479 LINE",
"145 492.333 OFFCURVE",
"128 498 OFFCURVE",
"112 498 CURVE SMOOTH",
"99 498 LINE SMOOTH",
"64.333 498 OFFCURVE",
"32 470.333 OFFCURVE",
"32 417 CURVE SMOOTH",
"32 78 LINE SMOOTH",
"32 66.667 OFFCURVE",
"33.667 55.333 OFFCURVE",
"37 44 CURVE",
"21 -13 LINE",
"42 -13 LINE",
"51 19 LINE",
"63 4.333 OFFCURVE",
"80.333 -3 OFFCURVE",
"99 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"84.667 25 OFFCURVE",
"67.667 39.333 OFFCURVE",
"65 70 CURVE",
"146 360 LINE",
"146 78 LINE SMOOTH",
"146 42 OFFCURVE",
"127.667 25 OFFCURVE",
"109 25 CURVE SMOOTH",
"102 25 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 470 LINE SMOOTH",
"123.667 470 OFFCURVE",
"138.667 458 OFFCURVE",
"144 434 CURVE",
"65 146 LINE",
"65 417 LINE SMOOTH",
"65 453 OFFCURVE",
"83.333 470 OFFCURVE",
"102 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
32 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
3 8 32 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
16 30 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
39 8 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
31 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
39 4 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 207;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = otilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"135.667 -3 OFFCURVE",
"168 24.667 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 417 LINE SMOOTH",
"168 470.333 OFFCURVE",
"135.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 566 LINE",
"46.667 576 OFFCURVE",
"56.667 581 OFFCURVE",
"68 581 CURVE SMOOTH",
"77.333 581 OFFCURVE",
"87 577.333 OFFCURVE",
"97 570 CURVE SMOOTH",
"107 562.667 OFFCURVE",
"117.667 559 OFFCURVE",
"129 559 CURVE SMOOTH",
"145 559 OFFCURVE",
"158.333 566.667 OFFCURVE",
"169 582 CURVE",
"152 594 LINE",
"144.667 584.667 OFFCURVE",
"135.667 580 OFFCURVE",
"125 580 CURVE SMOOTH",
"105.851 580 OFFCURVE",
"79.954 602 OFFCURVE",
"62 602 CURVE SMOOTH",
"45.333 602 OFFCURVE",
"32.667 594 OFFCURVE",
"24 578 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
50 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
34 2 47 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
44 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = oe;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 -3 LINE SMOOTH",
"121 -3 OFFCURVE",
"137.667 5 OFFCURVE",
"151 21 CURVE",
"163 5 OFFCURVE",
"180.667 -3 OFFCURVE",
"198 -3 CURVE SMOOTH",
"215 -3 LINE SMOOTH",
"249.667 -3 OFFCURVE",
"282 24.667 OFFCURVE",
"282 78 CURVE SMOOTH",
"282 206 LINE",
"248 206 LINE",
"248 78 LINE SMOOTH",
"248 42 OFFCURVE",
"230.667 25 OFFCURVE",
"212 25 CURVE SMOOTH",
"201 25 LINE SMOOTH",
"186.333 25 OFFCURVE",
"169.333 40 OFFCURVE",
"168 72 CURVE",
"168 78 LINE",
"168 243 LINE",
"282 243 LINE",
"282 417 LINE SMOOTH",
"282 470.333 OFFCURVE",
"249.667 498 OFFCURVE",
"215 498 CURVE SMOOTH",
"202 498 LINE SMOOTH",
"180.667 498 OFFCURVE",
"163.667 489.667 OFFCURVE",
"151 473 CURVE",
"138.333 489.667 OFFCURVE",
"121.667 498 OFFCURVE",
"101 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 78 LINE",
"134 72 LINE",
"131.333 40 OFFCURVE",
"115.333 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"91 25 LINE SMOOTH",
"72.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"168 417 LINE",
"168 422 LINE",
"170.667 455.333 OFFCURVE",
"187.667 470 OFFCURVE",
"205 470 CURVE SMOOTH",
"212 470 LINE SMOOTH",
"230.667 470 OFFCURVE",
"248 453 OFFCURVE",
"248 417 CURVE SMOOTH",
"248 266 LINE",
"168 266 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
44 6 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 6 51 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
30 6 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 51 20 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
66 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
58 2 17 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
40 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 7 40 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
62 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
63 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 300;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 482.667 OFFCURVE",
"55 460 CURVE",
"51 495 LINE",
"24 495 LINE",
"24 -165 LINE",
"57 -165 LINE",
"57 33 LINE",
"71.667 11.667 OFFCURVE",
"92.333 -3 OFFCURVE",
"111 -3 CURVE SMOOTH",
"114 -3 LINE SMOOTH",
"150 -3 OFFCURVE",
"171 24.667 OFFCURVE",
"171 78 CURVE SMOOTH",
"171 417 LINE SMOOTH",
"171 470.333 OFFCURVE",
"149 498 OFFCURVE",
"113 498 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"99 25 LINE SMOOTH",
"80.333 25 OFFCURVE",
"59.667 45.667 OFFCURVE",
"57 79 CURVE",
"57 410 LINE SMOOTH",
"57 446 OFFCURVE",
"80.333 470 OFFCURVE",
"99 470 CURVE SMOOTH",
"102 470 LINE SMOOTH",
"120.667 470 OFFCURVE",
"138 453 OFFCURVE",
"138 417 CURVE SMOOTH",
"138 78 LINE SMOOTH",
"138 42 OFFCURVE",
"120.667 25 OFFCURVE",
"102 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
16 13 12 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
11 12 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 12 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 190;
}
);
note = p;
unicode = 0070;
},
{
glyphname = thorn;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 699 LINE",
"24 -165 LINE",
"60 -165 LINE",
"60 -3 LINE",
"108 -3 LINE SMOOTH",
"142.667 -3 OFFCURVE",
"175 24.667 OFFCURVE",
"175 78 CURVE SMOOTH",
"175 417 LINE SMOOTH",
"175 470.333 OFFCURVE",
"142.667 498 OFFCURVE",
"108 498 CURVE SMOOTH",
"60 498 LINE",
"60 699 LINE"
);
},
{
closed = 1;
nodes = (
"105 470 LINE SMOOTH",
"123.667 470 OFFCURVE",
"141 453 OFFCURVE",
"141 417 CURVE SMOOTH",
"141 78 LINE SMOOTH",
"141 42 OFFCURVE",
"123.667 25 OFFCURVE",
"105 25 CURVE SMOOTH",
"60 25 LINE",
"60 470 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
14 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 193;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = q;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"78 498 LINE SMOOTH",
"43.333 498 OFFCURVE",
"21 470.333 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"81 -3 LINE SMOOTH",
"99.667 -3 OFFCURVE",
"119.333 10.667 OFFCURVE",
"134 32 CURVE",
"134 -165 LINE",
"168 -165 LINE",
"168 495 LINE",
"140 495 LINE",
"136 461 LINE",
"121.333 483.667 OFFCURVE",
"100.667 498 OFFCURVE",
"82 498 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"90 25 LINE SMOOTH",
"71.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"71.333 470 OFFCURVE",
"90 470 CURVE SMOOTH",
"93 470 LINE SMOOTH",
"110.333 470 OFFCURVE",
"131.333 448.333 OFFCURVE",
"134 415 CURVE",
"134 85 LINE SMOOTH",
"134 49 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 6 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 6 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 190;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 291 LINE",
"171 291 LINE",
"171 417 LINE SMOOTH",
"171 439.667 OFFCURVE",
"165.667 458.667 OFFCURVE",
"159 472 CURVE SMOOTH",
"149.667 489.333 OFFCURVE",
"134.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 408 LINE SMOOTH",
"55 442.667 OFFCURVE",
"79.333 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = r;
unicode = 0072;
},
{
glyphname = racute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 291 LINE",
"171 291 LINE",
"171 417 LINE SMOOTH",
"171 439.667 OFFCURVE",
"165.667 458.667 OFFCURVE",
"159 472 CURVE SMOOTH",
"149.667 489.333 OFFCURVE",
"134.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 408 LINE SMOOTH",
"55 442.667 OFFCURVE",
"79.333 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"102 536 LINE",
"157 622 LINE",
"125 622 LINE",
"79 536 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 19 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 4 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
24 4 25 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = racute;
unicode = 0155;
},
{
glyphname = rcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"98 470 LINE SMOOTH",
"80.667 470 OFFCURVE",
"57.667 445 OFFCURVE",
"55 413 CURVE",
"55 0 LINE",
"22 0 LINE",
"22 495 LINE",
"55 495 LINE",
"55 461 LINE",
"69.667 483.667 OFFCURVE",
"91.333 498 OFFCURVE",
"110 498 CURVE SMOOTH",
"114 498 LINE SMOOTH",
"134.667 498 OFFCURVE",
"149.667 489.333 OFFCURVE",
"159 472 CURVE SMOOTH",
"165.667 458.667 OFFCURVE",
"171 439.667 OFFCURVE",
"171 417 CURVE SMOOTH",
"171 291 LINE",
"137 291 LINE",
"137 417 LINE SMOOTH",
"137 453 OFFCURVE",
"119.667 470 OFFCURVE",
"101 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 538 LINE",
"162 624 LINE",
"130 624 LINE",
"90 554 LINE",
"51 624 LINE",
"19 624 LINE",
"74 538 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
16 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
29 3 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = rcaron;
unicode = 0159;
},
{
glyphname = rcommaaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 470 LINE SMOOTH",
"119.667 470 OFFCURVE",
"137 453 OFFCURVE",
"137 417 CURVE SMOOTH",
"137 291 LINE",
"171 291 LINE",
"171 417 LINE SMOOTH",
"171 439.667 OFFCURVE",
"165.667 458.667 OFFCURVE",
"159 472 CURVE SMOOTH",
"149.667 489.333 OFFCURVE",
"134.667 498 OFFCURVE",
"114 498 CURVE SMOOTH",
"110 498 LINE SMOOTH",
"91.333 498 OFFCURVE",
"69.667 483.667 OFFCURVE",
"55 461 CURVE",
"55 495 LINE",
"22 495 LINE",
"22 0 LINE",
"55 0 LINE",
"55 413 LINE",
"57.667 445 OFFCURVE",
"80.667 470 OFFCURVE",
"98 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121 -30 LINE",
"84 -30 LINE",
"84 -105 LINE",
"100 -105 LINE",
"85 -161 LINE",
"101 -161 LINE",
"121 -105 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
24 4 28 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 6 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
8 5 18 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 28 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 25 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 25 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uni0157;
unicode = 0157;
},
{
glyphname = s;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"164 300 LINE",
"164 417 LINE SMOOTH",
"164 470.333 OFFCURVE",
"133 498 OFFCURVE",
"97 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 351 LINE SMOOTH",
"21 256.67 OFFCURVE",
"134 226.72 OFFCURVE",
"134 142 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 43.333 OFFCURVE",
"116.333 25 OFFCURVE",
"99 25 CURVE SMOOTH",
"89 25 LINE SMOOTH",
"70.333 25 OFFCURVE",
"51 43.333 OFFCURVE",
"51 78 CURVE SMOOTH",
"51 195 LINE",
"21 195 LINE",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH",
"103 -3 LINE SMOOTH",
"135 -3 OFFCURVE",
"167 24.667 OFFCURVE",
"167 78 CURVE SMOOTH",
"167 144 LINE SMOOTH",
"167 232.872 OFFCURVE",
"54 266.46 OFFCURVE",
"54 353 CURVE SMOOTH",
"54 416 LINE SMOOTH",
"54 450.667 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 450.667 OFFCURVE",
"134 416 CURVE SMOOTH",
"134 300 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = s;
unicode = 0073;
},
{
glyphname = sacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"164 300 LINE",
"164 417 LINE SMOOTH",
"164 470.333 OFFCURVE",
"133 498 OFFCURVE",
"97 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 351 LINE SMOOTH",
"21 256.67 OFFCURVE",
"134 226.72 OFFCURVE",
"134 142 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 43.333 OFFCURVE",
"116.333 25 OFFCURVE",
"99 25 CURVE SMOOTH",
"89 25 LINE SMOOTH",
"70.333 25 OFFCURVE",
"51 43.333 OFFCURVE",
"51 78 CURVE SMOOTH",
"51 195 LINE",
"21 195 LINE",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH",
"103 -3 LINE SMOOTH",
"135 -3 OFFCURVE",
"167 24.667 OFFCURVE",
"167 78 CURVE SMOOTH",
"167 144 LINE SMOOTH",
"167 232.872 OFFCURVE",
"54 266.46 OFFCURVE",
"54 353 CURVE SMOOTH",
"54 416 LINE SMOOTH",
"54 450.667 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 450.667 OFFCURVE",
"134 416 CURVE SMOOTH",
"134 300 LINE"
);
},
{
closed = 1;
nodes = (
"103 535 LINE",
"158 621 LINE",
"126 621 LINE",
"80 535 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
48 22 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
42 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
42 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
48 18 49 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = scaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"134 300 LINE",
"134 416 LINE SMOOTH",
"134 450.667 OFFCURVE",
"115.667 470 OFFCURVE",
"97 470 CURVE SMOOTH",
"91 470 LINE SMOOTH",
"72.333 470 OFFCURVE",
"54 450.667 OFFCURVE",
"54 416 CURVE SMOOTH",
"54 353 LINE SMOOTH",
"54 266.46 OFFCURVE",
"167 232.872 OFFCURVE",
"167 144 CURVE SMOOTH",
"167 78 LINE SMOOTH",
"167 24.667 OFFCURVE",
"135 -3 OFFCURVE",
"103 -3 CURVE SMOOTH",
"88 -3 LINE SMOOTH",
"53.333 -3 OFFCURVE",
"21 24.667 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 195 LINE",
"51 195 LINE",
"51 78 LINE SMOOTH",
"51 43.333 OFFCURVE",
"70.333 25 OFFCURVE",
"89 25 CURVE SMOOTH",
"99 25 LINE SMOOTH",
"116.333 25 OFFCURVE",
"134 43.333 OFFCURVE",
"134 78 CURVE SMOOTH",
"134 142 LINE SMOOTH",
"134 226.72 OFFCURVE",
"21 256.67 OFFCURVE",
"21 351 CURVE SMOOTH",
"21 417 LINE SMOOTH",
"21 469 OFFCURVE",
"53.333 498 OFFCURVE",
"88 498 CURVE SMOOTH",
"97 498 LINE SMOOTH",
"133 498 OFFCURVE",
"164 470.333 OFFCURVE",
"164 417 CURVE SMOOTH",
"164 300 LINE"
);
},
{
closed = 1;
nodes = (
"108 538 LINE",
"163 624 LINE",
"131 624 LINE",
"92 555 LINE",
"53 624 LINE",
"20 624 LINE",
"75 538 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
33 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
39 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
52 4 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = scedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"38 -86 LINE",
"69.151 -114.036 OFFCURVE",
"148 -103.013 OFFCURVE",
"148 -52 CURVE SMOOTH",
"148 -26.667 OFFCURVE",
"120.667 -13.667 OFFCURVE",
"98 -23 CURVE",
"106 -3 LINE",
"136.667 -0.333 OFFCURVE",
"167 26 OFFCURVE",
"167 78 CURVE SMOOTH",
"167 144 LINE SMOOTH",
"167 232.872 OFFCURVE",
"54 266.46 OFFCURVE",
"54 353 CURVE SMOOTH",
"54 416 LINE SMOOTH",
"54 450.667 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 450.667 OFFCURVE",
"134 416 CURVE SMOOTH",
"134 300 LINE",
"164 300 LINE",
"164 417 LINE SMOOTH",
"164 470.333 OFFCURVE",
"133 498 OFFCURVE",
"97 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 351 LINE SMOOTH",
"21 256.67 OFFCURVE",
"134 226.72 OFFCURVE",
"134 142 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 43.333 OFFCURVE",
"116.333 25 OFFCURVE",
"99 25 CURVE SMOOTH",
"89 25 LINE SMOOTH",
"70.333 25 OFFCURVE",
"51 43.333 OFFCURVE",
"51 78 CURVE SMOOTH",
"51 195 LINE",
"21 195 LINE",
"21 78 LINE SMOOTH",
"21 26 OFFCURVE",
"50.333 -0.333 OFFCURVE",
"85 -3 CURVE",
"72 -32 LINE",
"80 -35 LINE",
"96 -24.333 OFFCURVE",
"121.667 -32 OFFCURVE",
"123 -52 CURVE SMOOTH",
"125.416 -85.818 OFFCURVE",
"67.71 -88.996 OFFCURVE",
"42 -69 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
67 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
48 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
0 29 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
54 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 29 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
58 29 54 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
68 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
33 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = scedilla;
unicode = 015F;
},
{
glyphname = scircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"164 300 LINE",
"164 417 LINE SMOOTH",
"164 470.333 OFFCURVE",
"133 498 OFFCURVE",
"97 498 CURVE SMOOTH",
"88 498 LINE SMOOTH",
"53.333 498 OFFCURVE",
"21 469 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 351 LINE SMOOTH",
"21 256.67 OFFCURVE",
"134 226.72 OFFCURVE",
"134 142 CURVE SMOOTH",
"134 78 LINE SMOOTH",
"134 43.333 OFFCURVE",
"116.333 25 OFFCURVE",
"99 25 CURVE SMOOTH",
"89 25 LINE SMOOTH",
"70.333 25 OFFCURVE",
"51 43.333 OFFCURVE",
"51 78 CURVE SMOOTH",
"51 195 LINE",
"21 195 LINE",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"53.333 -3 OFFCURVE",
"88 -3 CURVE SMOOTH",
"103 -3 LINE SMOOTH",
"135 -3 OFFCURVE",
"167 24.667 OFFCURVE",
"167 78 CURVE SMOOTH",
"167 144 LINE SMOOTH",
"167 232.872 OFFCURVE",
"54 266.46 OFFCURVE",
"54 353 CURVE SMOOTH",
"54 416 LINE SMOOTH",
"54 450.667 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"97 470 LINE SMOOTH",
"115.667 470 OFFCURVE",
"134 450.667 OFFCURVE",
"134 416 CURVE SMOOTH",
"134 300 LINE"
);
},
{
closed = 1;
nodes = (
"76 621 LINE",
"21 535 LINE",
"54 535 LINE",
"93 603 LINE",
"132 535 LINE",
"164 535 LINE",
"109 621 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
55 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
25 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
47 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
50 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
48 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
52 1 42 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = scircumflex;
unicode = 015D;
},
{
glyphname = germandbls;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"86 372 LINE",
"86 346 LINE",
"115 346 LINE SMOOTH",
"137.667 346 OFFCURVE",
"159 325.333 OFFCURVE",
"159 280 CURVE SMOOTH",
"159 93 LINE SMOOTH",
"159 46.333 OFFCURVE",
"135 30 OFFCURVE",
"115 30 CURVE SMOOTH",
"86 30 LINE",
"86 0 LINE",
"121 0 LINE SMOOTH",
"161.643 0 OFFCURVE",
"195 30.579 OFFCURVE",
"195 88 CURVE SMOOTH",
"195 279 LINE SMOOTH",
"195 331 OFFCURVE",
"168.333 352.333 OFFCURVE",
"139 359 CURVE",
"168.333 365.667 OFFCURVE",
"195 390 OFFCURVE",
"195 442 CURVE SMOOTH",
"195 617 LINE SMOOTH",
"195 673.963 OFFCURVE",
"158.507 705 OFFCURVE",
"118 705 CURVE SMOOTH",
"101 705 LINE SMOOTH",
"60.493 705 OFFCURVE",
"24 673.963 OFFCURVE",
"24 617 CURVE SMOOTH",
"24 0 LINE",
"60 0 LINE",
"60 612 LINE SMOOTH",
"60 657.333 OFFCURVE",
"84 675 OFFCURVE",
"104 675 CURVE SMOOTH",
"115 675 LINE SMOOTH",
"135 675 OFFCURVE",
"159 657.333 OFFCURVE",
"159 612 CURVE SMOOTH",
"159 438 LINE SMOOTH",
"159 392.667 OFFCURVE",
"137.667 372 OFFCURVE",
"115 372 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
51 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 13 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 12 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 216;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = longs;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"21 467 LINE",
"47 467 LINE",
"47 0 LINE",
"80 0 LINE",
"80 623 LINE SMOOTH",
"80 663 OFFCURVE",
"110 683 OFFCURVE",
"142 675 CURVE",
"142 702 LINE",
"82.733 717.461 OFFCURVE",
"47 679.962 OFFCURVE",
"47 625 CURVE SMOOTH",
"47 495 LINE",
"21 495 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
11 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 144;
}
);
note = longs;
unicode = 017F;
},
{
glyphname = t;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 654 LINE",
"34 495 LINE",
"8 495 LINE",
"8 467 LINE",
"34 467 LINE",
"34 78 LINE SMOOTH",
"34 24.667 OFFCURVE",
"60 -7.333 OFFCURVE",
"112 -2 CURVE",
"112 25 LINE",
"85.333 22.333 OFFCURVE",
"68 40.667 OFFCURVE",
"68 78 CURVE SMOOTH",
"68 467 LINE",
"112 467 LINE",
"112 495 LINE",
"68 495 LINE",
"68 657 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 6 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 124;
}
);
note = t;
unicode = 0074;
},
{
glyphname = tbar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 654 LINE",
"34 495 LINE",
"8 495 LINE",
"8 467 LINE",
"34 467 LINE",
"34 365 LINE",
"8 365 LINE",
"8 337 LINE",
"34 337 LINE",
"34 78 LINE SMOOTH",
"34 24.667 OFFCURVE",
"60 -7.333 OFFCURVE",
"112 -2 CURVE",
"112 25 LINE",
"85.333 22.333 OFFCURVE",
"68 40.667 OFFCURVE",
"68 78 CURVE SMOOTH",
"68 337 LINE",
"112 337 LINE",
"112 365 LINE",
"68 365 LINE",
"68 467 LINE",
"112 467 LINE",
"112 495 LINE",
"68 495 LINE",
"68 657 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 6 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 124;
}
);
note = tbar;
unicode = 0167;
},
{
glyphname = tcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 654 LINE",
"34 495 LINE",
"8 495 LINE",
"8 467 LINE",
"34 467 LINE",
"34 78 LINE SMOOTH",
"34 24.667 OFFCURVE",
"60 -7.333 OFFCURVE",
"112 -2 CURVE",
"112 25 LINE",
"85.333 22.333 OFFCURVE",
"68 40.667 OFFCURVE",
"68 78 CURVE SMOOTH",
"68 467 LINE",
"112 467 LINE",
"112 495 LINE",
"68 495 LINE",
"68 657 LINE"
);
},
{
closed = 1;
nodes = (
"157 656 LINE",
"121 656 LINE",
"121 581 LINE",
"136 581 LINE",
"121 525 LINE",
"137 525 LINE",
"157 581 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
25 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
5 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
18 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
20 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
21 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 166;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = tcedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 654 LINE",
"34 495 LINE",
"8 495 LINE",
"8 467 LINE",
"34 467 LINE",
"34 78 LINE SMOOTH",
"34 35.333 OFFCURVE",
"49.667 6.667 OFFCURVE",
"83 0 CURVE",
"70 -29 LINE",
"78 -32 LINE",
"94 -21.333 OFFCURVE",
"119.667 -29 OFFCURVE",
"121 -49 CURVE SMOOTH",
"123.416 -82.818 OFFCURVE",
"65.71 -85.996 OFFCURVE",
"40 -66 CURVE",
"36 -83 LINE",
"67.151 -111.036 OFFCURVE",
"146 -100.013 OFFCURVE",
"146 -49 CURVE SMOOTH",
"146 -23.667 OFFCURVE",
"118.667 -9.333 OFFCURVE",
"96 -20 CURVE",
"103 -2 LINE",
"112 -2 LINE",
"112 25 LINE",
"85.333 22.333 OFFCURVE",
"68 40.667 OFFCURVE",
"68 78 CURVE SMOOTH",
"68 467 LINE",
"112 467 LINE",
"112 495 LINE",
"68 495 LINE",
"68 657 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 6 33 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
20 33 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
33 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
30 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 124;
}
);
note = tcedilla;
unicode = 0163;
},
{
glyphname = u;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 11 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = u;
unicode = 0075;
},
{
glyphname = uacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 534 LINE",
"160 620 LINE",
"128 620 LINE",
"82 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
24 7 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 609 LINE",
"38 577 OFFCURVE",
"64.667 552 OFFCURVE",
"94 552 CURVE SMOOTH",
"127.333 552 OFFCURVE",
"153 578.333 OFFCURVE",
"153 609 CURVE",
"131 609 LINE",
"131 590.333 OFFCURVE",
"113.667 573 OFFCURVE",
"95 573 CURVE SMOOTH",
"76.333 573 OFFCURVE",
"59 590.333 OFFCURVE",
"59 609 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = ubreve;
unicode = 016D;
},
{
glyphname = ucircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 620 LINE",
"23 534 LINE",
"55 534 LINE",
"94 603 LINE",
"134 534 LINE",
"166 534 LINE",
"111 620 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
25 15 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 1 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 11 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
27 11 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 612 LINE",
"110 612 LINE",
"110 549 LINE",
"135 549 LINE"
);
},
{
closed = 1;
nodes = (
"78 612 LINE",
"54 612 LINE",
"54 549 LINE",
"78 549 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 6 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 6 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = ugrave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 534 LINE",
"60 620 LINE",
"28 620 LINE",
"83 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 5 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 9 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhungarumlaut;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"77 531 LINE",
"132 617 LINE",
"100 617 LINE",
"54 531 LINE"
);
},
{
closed = 1;
nodes = (
"131 531 LINE",
"186 617 LINE",
"154 617 LINE",
"108 531 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = umacron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"150 593 LINE",
"36 593 LINE",
"36 568 LINE",
"150 568 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
25 3 22 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 11 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = umacron;
unicode = 016B;
},
{
glyphname = uogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"142 0 LINE",
"124.667 -13.333 OFFCURVE",
"114 -29 OFFCURVE",
"114 -49 CURVE SMOOTH",
"114 -97.676 OFFCURVE",
"183.082 -104.242 OFFCURVE",
"202 -61 CURVE",
"189 -53 LINE",
"172.066 -81.224 OFFCURVE",
"135 -76.339 OFFCURVE",
"135 -45 CURVE",
"133.667 -29 OFFCURVE",
"148.333 -9.333 OFFCURVE",
"171 0 CURVE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
36 6 33 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 5 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
154 21 170 21 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
9 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 3 values pushed */
24 10 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 33 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
24 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
29 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
26 29 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uogonek;
unicode = 0173;
},
{
glyphname = uring;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"126 530 OFFCURVE",
"150 556 OFFCURVE",
"150 584 CURVE SMOOTH",
"150 614.667 OFFCURVE",
"124.667 640 OFFCURVE",
"94 640 CURVE SMOOTH",
"64.667 640 OFFCURVE",
"40 614.667 OFFCURVE",
"40 584 CURVE SMOOTH",
"40 553.333 OFFCURVE",
"67.333 530 OFFCURVE",
"94 530 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"114 621 OFFCURVE",
"131 602.667 OFFCURVE",
"131 584 CURVE SMOOTH",
"131 565.333 OFFCURVE",
"114 549 OFFCURVE",
"94 549 CURVE SMOOTH",
"75.333 549 OFFCURVE",
"59 565.333 OFFCURVE",
"59 584 CURVE SMOOTH",
"59 602.667 OFFCURVE",
"75.333 621 OFFCURVE",
"94 621 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
43 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
34 40 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
28 22 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = utilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"38 566 LINE",
"45.333 575.333 OFFCURVE",
"55 580 OFFCURVE",
"67 580 CURVE SMOOTH",
"86.889 580 OFFCURVE",
"109.276 558 OFFCURVE",
"129 558 CURVE SMOOTH",
"144.333 558 OFFCURVE",
"157.333 566 OFFCURVE",
"168 582 CURVE",
"151 593 LINE",
"143.667 583.667 OFFCURVE",
"134.667 579 OFFCURVE",
"124 579 CURVE SMOOTH",
"113.333 579 OFFCURVE",
"102.833 582.667 OFFCURVE",
"92.5 590 CURVE SMOOTH",
"82.167 597.333 OFFCURVE",
"71.667 601 OFFCURVE",
"61 601 CURVE SMOOTH",
"45.667 601 OFFCURVE",
"33 593 OFFCURVE",
"23 577 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = utilde;
unicode = 0169;
},
{
glyphname = v;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"83 74 LINE",
"82 74 LINE",
"33 495 LINE",
"2 495 LINE",
"61 0 LINE",
"102 0 LINE",
"160 495 LINE",
"132 495 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
7 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 162;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"90 0 LINE",
"141 426 LINE",
"194 0 LINE",
"233 0 LINE",
"282 495 LINE",
"253 495 LINE",
"214 82 LINE",
"213 82 LINE",
"160 495 LINE",
"128 495 LINE",
"74 82 LINE",
"73 82 LINE",
"33 495 LINE",
"2 495 LINE",
"52 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 284;
}
);
note = w;
unicode = 0077;
},
{
glyphname = wcircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"90 0 LINE",
"141 426 LINE",
"194 0 LINE",
"233 0 LINE",
"282 495 LINE",
"253 495 LINE",
"214 82 LINE",
"213 82 LINE",
"160 495 LINE",
"128 495 LINE",
"74 82 LINE",
"73 82 LINE",
"33 495 LINE",
"2 495 LINE",
"52 0 LINE"
);
},
{
closed = 1;
nodes = (
"126 620 LINE",
"71 534 LINE",
"104 534 LINE",
"143 602 LINE",
"182 534 LINE",
"215 534 LINE",
"160 620 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
13 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
16 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
18 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
20 0 15 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 284;
}
);
note = wcircumflex;
unicode = 0175;
},
{
glyphname = x;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"164 495 LINE",
"134 495 LINE",
"84 301 LINE",
"35 495 LINE",
"3 495 LINE",
"67 249 LINE",
"2 0 LINE",
"32 0 LINE",
"83 202 LINE",
"134 0 LINE",
"167 0 LINE",
"100 252 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 1 7 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 169;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"84 98 LINE",
"83 98 LINE",
"33 495 LINE",
"2 495 LINE",
"71 0 LINE",
"51 -165 LINE",
"84 -165 LINE",
"161 495 LINE",
"132 495 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 163;
}
);
note = y;
unicode = 0079;
},
{
glyphname = yacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"84 98 LINE",
"83 98 LINE",
"33 495 LINE",
"2 495 LINE",
"71 0 LINE",
"51 -165 LINE",
"84 -165 LINE",
"161 495 LINE",
"132 495 LINE"
);
},
{
closed = 1;
nodes = (
"92 535 LINE",
"147 621 LINE",
"115 621 LINE",
"69 535 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 2 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
9 2 10 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 163;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = ycircumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"84 98 LINE",
"83 98 LINE",
"33 495 LINE",
"2 495 LINE",
"71 0 LINE",
"51 -165 LINE",
"84 -165 LINE",
"161 495 LINE",
"132 495 LINE"
);
},
{
closed = 1;
nodes = (
"66 620 LINE",
"11 534 LINE",
"44 534 LINE",
"83 602 LINE",
"122 534 LINE",
"154 534 LINE",
"99 620 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
11 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
14 2 9 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 163;
}
);
note = ycircumflex;
unicode = 0177;
},
{
glyphname = ydieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"132 495 LINE",
"161 495 LINE",
"84 -165 LINE",
"51 -165 LINE",
"71 0 LINE",
"2 495 LINE",
"33 495 LINE",
"83 98 LINE",
"84 98 LINE"
);
},
{
closed = 1;
nodes = (
"64 613 LINE",
"40 613 LINE",
"40 550 LINE",
"64 550 LINE"
);
},
{
closed = 1;
nodes = (
"121 613 LINE",
"96 613 LINE",
"96 550 LINE",
"121 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
9 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 5 
MIRP[10100]\011/* MoveIndirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 5 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 163;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = z;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 28 LINE",
"35 28 LINE",
"144 468 LINE",
"144 495 LINE",
"13 495 LINE",
"13 468 LINE",
"111 468 LINE",
"2 28 LINE",
"2 0 LINE",
"148 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 150;
}
);
note = z;
unicode = 007A;
},
{
glyphname = zacute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 28 LINE",
"35 28 LINE",
"144 468 LINE",
"144 495 LINE",
"13 495 LINE",
"13 468 LINE",
"111 468 LINE",
"2 28 LINE",
"2 0 LINE",
"148 0 LINE"
);
},
{
closed = 1;
nodes = (
"89 535 LINE",
"144 621 LINE",
"112 621 LINE",
"66 535 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 0 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 150;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = zcaron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 28 LINE",
"35 28 LINE",
"144 468 LINE",
"144 495 LINE",
"13 495 LINE",
"13 468 LINE",
"111 468 LINE",
"2 28 LINE",
"2 0 LINE",
"148 0 LINE"
);
},
{
closed = 1;
nodes = (
"94 538 LINE",
"149 624 LINE",
"117 624 LINE",
"77 554 LINE",
"38 624 LINE",
"6 624 LINE",
"61 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 150;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = zdotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 28 LINE",
"35 28 LINE",
"144 468 LINE",
"144 495 LINE",
"13 495 LINE",
"13 468 LINE",
"111 468 LINE",
"2 28 LINE",
"2 0 LINE",
"148 0 LINE"
);
},
{
closed = 1;
nodes = (
"89 613 LINE",
"65 613 LINE",
"65 550 LINE",
"89 550 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
10 5 11 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
8 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 150;
}
);
note = zdotaccent;
unicode = 017C;
},
{
glyphname = iacute.001;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 495 LINE",
"24 0 LINE",
"57 0 LINE",
"57 495 LINE"
);
},
{
closed = 1;
nodes = (
"52 534 LINE",
"107 620 LINE",
"74 620 LINE",
"28 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
4 2 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 79;
}
);
note = iacute.001;
},
{
glyphname = uacute.001;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"105 534 LINE",
"160 620 LINE",
"128 620 LINE",
"82 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
24 7 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
22 11 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = uacute.001;
},
{
glyphname = ucircumflex.001;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 78 LINE SMOOTH",
"20 24.667 OFFCURVE",
"42.333 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE",
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"78 620 LINE",
"23 534 LINE",
"55 534 LINE",
"94 603 LINE",
"134 534 LINE",
"166 534 LINE",
"111 620 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
6 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
18 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
25 15 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
24 1 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
8 11 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
27 11 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = ucircumflex.001;
},
{
glyphname = udieresis.001;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"135 612 LINE",
"110 612 LINE",
"110 549 LINE",
"135 549 LINE"
);
},
{
closed = 1;
nodes = (
"78 612 LINE",
"54 612 LINE",
"54 549 LINE",
"78 549 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
23 6 26 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 6 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = udieresis.001;
},
{
glyphname = ugrave.001;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"93 25 LINE SMOOTH",
"111.667 25 OFFCURVE",
"135 51 OFFCURVE",
"135 87 CURVE SMOOTH",
"135 495 LINE",
"169 495 LINE",
"169 0 LINE",
"135 0 LINE",
"135 33 LINE",
"119 11.667 OFFCURVE",
"98.667 -3 OFFCURVE",
"80 -3 CURVE SMOOTH",
"77 -3 LINE SMOOTH",
"42.333 -3 OFFCURVE",
"20 24.667 OFFCURVE",
"20 78 CURVE SMOOTH",
"20 495 LINE",
"53 495 LINE",
"53 78 LINE SMOOTH",
"53 42 OFFCURVE",
"71.667 25 OFFCURVE",
"89 25 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 534 LINE",
"60 620 LINE",
"28 620 LINE",
"83 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
23 5 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
13 9 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 9 23 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = ugrave.001;
},
{
glyphname = fi;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 0 LINE",
"81 467 LINE",
"131 467 LINE",
"131 0 LINE",
"164 0 LINE",
"164 495 LINE",
"81 495 LINE",
"81 623 LINE SMOOTH",
"81 663 OFFCURVE",
"109.667 683 OFFCURVE",
"143 675 CURVE",
"143 702 LINE",
"82.005 717.249 OFFCURVE",
"47 680.58 OFFCURVE",
"47 625 CURVE SMOOTH",
"47 495 LINE",
"21 495 LINE",
"21 467 LINE",
"47 467 LINE",
"47 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"80 0 LINE",
"80 467 LINE",
"142 467 LINE",
"142 495 LINE",
"80 495 LINE",
"80 623 LINE SMOOTH",
"80 663 OFFCURVE",
"110 683 OFFCURVE",
"142 675 CURVE",
"142 702 LINE",
"82.733 717.461 OFFCURVE",
"47 679.962 OFFCURVE",
"47 625 CURVE SMOOTH",
"47 495 LINE",
"21 495 LINE",
"21 467 LINE",
"47 467 LINE",
"47 0 LINE"
);
},
{
closed = 1;
nodes = (
"169 699 LINE",
"202 699 LINE",
"202 0 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 222;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 392 LINE SMOOTH",
"68.333 392 OFFCURVE",
"80 397.333 OFFCURVE",
"92 408 CURVE",
"92 394 LINE",
"115 394 LINE",
"115 653 LINE SMOOTH",
"115 687.667 OFFCURVE",
"93.667 705 OFFCURVE",
"71 705 CURVE SMOOTH",
"63 705 LINE SMOOTH",
"40.333 705 OFFCURVE",
"21 687.333 OFFCURVE",
"21 654 CURVE SMOOTH",
"21 575 LINE",
"43 575 LINE",
"43 653 LINE SMOOTH",
"43 675.667 OFFCURVE",
"53.333 687 OFFCURVE",
"64 687 CURVE SMOOTH",
"68 687 LINE SMOOTH",
"78.667 687 OFFCURVE",
"92 675.667 OFFCURVE",
"92 653 CURVE SMOOTH",
"92 552 LINE",
"80.667 562 OFFCURVE",
"69.667 567 OFFCURVE",
"59 567 CURVE SMOOTH",
"56 567 LINE SMOOTH",
"32.667 567 OFFCURVE",
"21 550 OFFCURVE",
"21 516 CURVE SMOOTH",
"21 442 LINE SMOOTH",
"21 408.667 OFFCURVE",
"32.333 392 OFFCURVE",
"55 392 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"67 550 LINE SMOOTH",
"77.667 550 OFFCURVE",
"92 544 OFFCURVE",
"92 524 CURVE SMOOTH",
"92 438 LINE",
"89.333 419.333 OFFCURVE",
"76.667 409 OFFCURVE",
"66 409 CURVE SMOOTH",
"55.333 409 OFFCURVE",
"43 420.333 OFFCURVE",
"43 443 CURVE SMOOTH",
"43 515 LINE SMOOTH",
"43 537.667 OFFCURVE",
"53.333 550 OFFCURVE",
"64 550 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
47 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
47 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
36 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
26 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 2 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
48 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
29 0 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 135;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"60 392 LINE SMOOTH",
"76 392 OFFCURVE",
"93 403 OFFCURVE",
"93 431 CURVE SMOOTH",
"93 666 LINE SMOOTH",
"93 692.667 OFFCURVE",
"76 705 OFFCURVE",
"60 705 CURVE SMOOTH",
"54 705 LINE SMOOTH",
"38 705 OFFCURVE",
"21 692.667 OFFCURVE",
"21 666 CURVE SMOOTH",
"21 431 LINE SMOOTH",
"21 403 OFFCURVE",
"38 392 OFFCURVE",
"54 392 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"59 690 LINE SMOOTH",
"69.667 690 OFFCURVE",
"75 681.333 OFFCURVE",
"75 664 CURVE SMOOTH",
"75 433 LINE SMOOTH",
"75 415.667 OFFCURVE",
"69.667 407 OFFCURVE",
"59 407 CURVE SMOOTH",
"55 407 LINE SMOOTH",
"44.333 407 OFFCURVE",
"39 415.667 OFFCURVE",
"39 433 CURVE SMOOTH",
"39 664 LINE SMOOTH",
"39 681.333 OFFCURVE",
"44.333 690 OFFCURVE",
"55 690 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 4 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 114;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = zero;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
16 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
27 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"102 0 LINE",
"102 699 LINE",
"72 699 LINE",
"62.667 676.333 OFFCURVE",
"32.667 653 OFFCURVE",
"10 653 CURVE",
"10 625 LINE",
"26 625 OFFCURVE",
"53.667 636.667 OFFCURVE",
"67 646 CURVE",
"67 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
10 4 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
1 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 140;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"54 417 LINE",
"54 612 LINE SMOOTH",
"54 657.333 OFFCURVE",
"75 675 OFFCURVE",
"95 675 CURVE SMOOTH",
"103 675 LINE SMOOTH",
"124.333 675 OFFCURVE",
"145 657.333 OFFCURVE",
"145 612 CURVE SMOOTH",
"145 508 LINE SMOOTH",
"145 450.214 OFFCURVE",
"112.956 394.221 OFFCURVE",
"83 331.5 CURVE SMOOTH",
"72.333 309.167 OFFCURVE",
"62.333 283.833 OFFCURVE",
"53 255.5 CURVE SMOOTH",
"34.333 198.833 OFFCURVE",
"21 126 OFFCURVE",
"21 30 CURVE SMOOTH",
"21 0 LINE",
"183 0 LINE",
"183 30 LINE",
"57 30 LINE",
"57 75.333 OFFCURVE",
"60 115.667 OFFCURVE",
"66 151 CURVE SMOOTH",
"78 221.667 OFFCURVE",
"97.833 276.833 OFFCURVE",
"118.5 321.5 CURVE SMOOTH",
"147.908 385.059 OFFCURVE",
"180 443.853 OFFCURVE",
"180 502 CURVE SMOOTH",
"180 617 LINE SMOOTH",
"180 674.421 OFFCURVE",
"146.643 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 417 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
41 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
41 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
13 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
20 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
22 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
22 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
20 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"86 372 LINE",
"86 346 LINE",
"103 346 LINE SMOOTH",
"127 346 OFFCURVE",
"148 325.333 OFFCURVE",
"148 280 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 40.333 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 40.667 OFFCURVE",
"57 86 CURVE SMOOTH",
"57 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 24.15 OFFCURVE",
"54.818 -7 OFFCURVE",
"95 -7 CURVE SMOOTH",
"109 -7 LINE SMOOTH",
"145 -7 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 279 LINE SMOOTH",
"183 331 OFFCURVE",
"157.333 352.333 OFFCURVE",
"128 359 CURVE",
"157.333 365.667 OFFCURVE",
"183 390 OFFCURVE",
"183 442 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 416 LINE",
"57 416 LINE",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 438 LINE SMOOTH",
"148 392.667 OFFCURVE",
"127 372 OFFCURVE",
"103 372 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
57 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
57 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
24 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
27 13 24 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
42 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
50 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
34 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
27 34 19 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"173 146 LINE",
"173 699 LINE",
"131 699 LINE",
"10 146 LINE",
"10 116 LINE",
"142 116 LINE",
"142 0 LINE",
"173 0 LINE",
"173 116 LINE",
"204 116 LINE",
"204 146 LINE"
);
},
{
closed = 1;
nodes = (
"142 146 LINE",
"45 146 LINE",
"45 147 LINE",
"140 592 LINE",
"142 592 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 6 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
0 1 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
12 3 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 228;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 354 LINE SMOOTH",
"183 409.608 OFFCURVE",
"155.689 442 OFFCURVE",
"121 442 CURVE SMOOTH",
"112 442 LINE SMOOTH",
"92 442 OFFCURVE",
"69 430 OFFCURVE",
"57 402 CURVE",
"57 669 LINE",
"178 669 LINE",
"181 699 LINE",
"21 699 LINE",
"21 345 LINE",
"48 345 LINE",
"48 344 LINE",
"57 344 LINE",
"57 349 LINE SMOOTH",
"57 394.333 OFFCURVE",
"78 412 OFFCURVE",
"98 412 CURVE SMOOTH",
"106 412 LINE SMOOTH",
"127.333 412 OFFCURVE",
"148 394.333 OFFCURVE",
"148 349 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 285 LINE",
"21 285 LINE",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
46 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 5 42 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
28 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
35 1 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 0 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 354 LINE SMOOTH",
"183 409.608 OFFCURVE",
"155.689 442 OFFCURVE",
"121 442 CURVE SMOOTH",
"112 442 LINE SMOOTH",
"92 442 OFFCURVE",
"69 430 OFFCURVE",
"57 402 CURVE",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"126 675 OFFCURVE",
"147 657.333 OFFCURVE",
"147 612 CURVE SMOOTH",
"147 476 LINE",
"181 476 LINE",
"181 617 LINE SMOOTH",
"181 674.421 OFFCURVE",
"147.643 705 OFFCURVE",
"107 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"57 355 LINE",
"59.667 395 OFFCURVE",
"79.333 412 OFFCURVE",
"98 412 CURVE SMOOTH",
"106 412 LINE SMOOTH",
"127.333 412 OFFCURVE",
"148 394.333 OFFCURVE",
"148 349 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
58 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
58 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
38 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
42 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 5 38 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
31 1 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
23 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
28 0 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
45 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"46 0 LINE",
"151 672 LINE",
"151 699 LINE",
"6 699 LINE",
"6 672 LINE",
"115 672 LINE",
"9 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 175;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 277 LINE SMOOTH",
"183 321 OFFCURVE",
"164 347 OFFCURVE",
"140 359 CURVE",
"164 369.667 OFFCURVE",
"183 395.667 OFFCURVE",
"183 441 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 441 LINE SMOOTH",
"21 395.667 OFFCURVE",
"40 369.667 OFFCURVE",
"64 359 CURVE",
"40 347 OFFCURVE",
"21 321 OFFCURVE",
"21 277 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 24.579 OFFCURVE",
"54.357 -6 OFFCURVE",
"95 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 348 LINE SMOOTH",
"127.333 348 OFFCURVE",
"148 330.333 OFFCURVE",
"148 285 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 41.667 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 285 LINE SMOOTH",
"57 330.333 OFFCURVE",
"78 348 OFFCURVE",
"98 348 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 434 LINE SMOOTH",
"148 388.667 OFFCURVE",
"127.333 371 OFFCURVE",
"106 371 CURVE SMOOTH",
"98 371 LINE SMOOTH",
"78 371 OFFCURVE",
"57 388.667 OFFCURVE",
"57 434 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
66 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
45 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
66 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
38 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
30 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
26 5 30 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
67 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
18 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
18 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
57 2 34 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
9 34 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
26 34 57 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
50 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 404 LINE SMOOTH",
"21 341.333 OFFCURVE",
"53.667 316 OFFCURVE",
"83 316 CURVE SMOOTH",
"93 316 LINE SMOOTH",
"113 316 OFFCURVE",
"136 327.667 OFFCURVE",
"148 357 CURVE",
"148 87 LINE SMOOTH",
"148 40.333 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"99 24 LINE SMOOTH",
"79 24 OFFCURVE",
"58 41.667 OFFCURVE",
"58 87 CURVE SMOOTH",
"58 282 LINE",
"24 282 LINE",
"24 82 LINE SMOOTH",
"24 24.579 OFFCURVE",
"57.357 -6 OFFCURVE",
"98 -6 CURVE SMOOTH",
"109 -6 LINE SMOOTH",
"145 -6 OFFCURVE",
"183 19.333 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 617 LINE SMOOTH",
"183 679.667 OFFCURVE",
"145 705 OFFCURVE",
"109 705 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148 402 LINE",
"145.333 362 OFFCURVE",
"126 346 OFFCURVE",
"106 346 CURVE SMOOTH",
"98 346 LINE SMOOTH",
"78 346 OFFCURVE",
"57 362.333 OFFCURVE",
"57 409 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
46 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
49 1 27 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
19 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
24 7 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
41 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"63 392 LINE",
"63 699 LINE",
"47 699 LINE",
"44.333 688.333 OFFCURVE",
"30.667 678 OFFCURVE",
"20 678 CURVE",
"20 664 LINE",
"26.667 664 OFFCURVE",
"38.333 670 OFFCURVE",
"45 674 CURVE",
"45 392 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
4 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 87;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"37 574 LINE",
"37 664 LINE SMOOTH",
"37 684 OFFCURVE",
"45.667 691 OFFCURVE",
"55 691 CURVE SMOOTH",
"56 691 LINE SMOOTH",
"65.333 691 OFFCURVE",
"75 684 OFFCURVE",
"75 664 CURVE SMOOTH",
"75 614 LINE SMOOTH",
"75 569.882 OFFCURVE",
"21 484.593 OFFCURVE",
"21 406 CURVE SMOOTH",
"21 392 LINE",
"92 392 LINE",
"92 407 LINE",
"39 407 LINE",
"39 486.235 OFFCURVE",
"93 562.552 OFFCURVE",
"93 612 CURVE SMOOTH",
"93 666 LINE SMOOTH",
"93 692.667 OFFCURVE",
"74.667 705 OFFCURVE",
"60 705 CURVE SMOOTH",
"52 705 LINE SMOOTH",
"37.333 705 OFFCURVE",
"21 692.667 OFFCURVE",
"21 666 CURVE SMOOTH",
"21 574 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"49 559 LINE",
"49 546 LINE",
"57 546 LINE SMOOTH",
"67.667 546 OFFCURVE",
"76 538 OFFCURVE",
"76 518 CURVE SMOOTH",
"76 433 LINE SMOOTH",
"76 413 OFFCURVE",
"67.333 407 OFFCURVE",
"58 407 CURVE SMOOTH",
"56 407 LINE SMOOTH",
"46.667 407 OFFCURVE",
"38 413 OFFCURVE",
"38 433 CURVE SMOOTH",
"38 519 LINE",
"21 519 LINE",
"21 431 LINE SMOOTH",
"21 403 OFFCURVE",
"38.333 392 OFFCURVE",
"53 392 CURVE SMOOTH",
"59 392 LINE SMOOTH",
"75 392 OFFCURVE",
"94 403 OFFCURVE",
"94 431 CURVE SMOOTH",
"94 517 LINE SMOOTH",
"94 539.667 OFFCURVE",
"82 550.333 OFFCURVE",
"70 553 CURVE",
"82 555.667 OFFCURVE",
"94 567.333 OFFCURVE",
"94 590 CURVE SMOOTH",
"94 666 LINE SMOOTH",
"94 692.667 OFFCURVE",
"75 705 OFFCURVE",
"59 705 CURVE SMOOTH",
"53 705 LINE SMOOTH",
"38.333 705 OFFCURVE",
"21 692.667 OFFCURVE",
"21 666 CURVE SMOOTH",
"21 578 LINE",
"38 578 LINE",
"38 664 LINE SMOOTH",
"38 684 OFFCURVE",
"45.667 690 OFFCURVE",
"55 690 CURVE SMOOTH",
"57 690 LINE SMOOTH",
"66.333 690 OFFCURVE",
"76 684 OFFCURVE",
"76 664 CURVE SMOOTH",
"76 588 LINE SMOOTH",
"76 568 OFFCURVE",
"67.667 559 OFFCURVE",
"57 559 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
22 13 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
25 13 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
54 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
32 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
25 32 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 114;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = fraction;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"3 0 LINE",
"34 0 LINE",
"190 699 LINE",
"160 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"27 0 LINE",
"45 0 LINE",
"237 699 LINE",
"219 699 LINE"
);
},
{
closed = 1;
nodes = (
"88 392 LINE",
"88 699 LINE",
"73 699 LINE",
"69 688.333 OFFCURVE",
"56.667 678 OFFCURVE",
"46 678 CURVE",
"46 664 LINE",
"52.667 664 OFFCURVE",
"64.667 670 OFFCURVE",
"70 674 CURVE",
"70 392 LINE"
);
},
{
closed = 1;
nodes = (
"177 182 LINE",
"177 272 LINE SMOOTH",
"177 292 OFFCURVE",
"187 299 OFFCURVE",
"195 299 CURVE SMOOTH",
"197 299 LINE SMOOTH",
"206.333 299 OFFCURVE",
"216 292 OFFCURVE",
"216 272 CURVE SMOOTH",
"216 222 LINE SMOOTH",
"216 176.322 OFFCURVE",
"161 94.472 OFFCURVE",
"161 14 CURVE SMOOTH",
"161 0 LINE",
"233 0 LINE",
"233 15 LINE",
"180 15 LINE",
"180 94.235 OFFCURVE",
"234 170.552 OFFCURVE",
"234 220 CURVE SMOOTH",
"234 274 LINE SMOOTH",
"234 300.667 OFFCURVE",
"215.667 313 OFFCURVE",
"201 313 CURVE SMOOTH",
"193 313 LINE SMOOTH",
"178.333 313 OFFCURVE",
"161 300.667 OFFCURVE",
"161 274 CURVE SMOOTH",
"161 182 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
24 15 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
30 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
8 2 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 267;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"196 65 LINE",
"195 306 LINE",
"173 306 LINE",
"121 65 LINE",
"123 49 LINE",
"181 49 LINE",
"181 1 LINE",
"197 1 LINE",
"196 49 LINE",
"208 49 LINE",
"208 65 LINE"
);
},
{
closed = 1;
nodes = (
"27 0 LINE",
"45 0 LINE",
"237 699 LINE",
"219 699 LINE"
);
},
{
closed = 1;
nodes = (
"88 392 LINE",
"88 699 LINE",
"73 699 LINE",
"69 688.333 OFFCURVE",
"56.667 678 OFFCURVE",
"46 678 CURVE",
"46 664 LINE",
"52.667 664 OFFCURVE",
"64.667 670 OFFCURVE",
"70 674 CURVE",
"70 392 LINE"
);
},
{
closed = 1;
nodes = (
"181 65 LINE",
"139 65 LINE",
"179 259 LINE",
"180 259 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
19 13 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
27 13 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 263;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"27 0 LINE",
"45 0 LINE",
"237 699 LINE",
"219 699 LINE"
);
},
{
closed = 1;
nodes = (
"187 162 LINE",
"187 149 LINE",
"195 149 LINE SMOOTH",
"205.667 149 OFFCURVE",
"214 141 OFFCURVE",
"214 121 CURVE SMOOTH",
"214 35 LINE SMOOTH",
"214 15 OFFCURVE",
"205.333 9 OFFCURVE",
"196 9 CURVE SMOOTH",
"194 9 LINE SMOOTH",
"184.667 9 OFFCURVE",
"176 15 OFFCURVE",
"176 35 CURVE SMOOTH",
"176 122 LINE",
"158 122 LINE",
"158 33 LINE SMOOTH",
"158 5 OFFCURVE",
"175 -6 OFFCURVE",
"191 -6 CURVE SMOOTH",
"197 -6 LINE SMOOTH",
"213 -6 OFFCURVE",
"231 5 OFFCURVE",
"231 33 CURVE SMOOTH",
"231 120 LINE SMOOTH",
"231 142.667 OFFCURVE",
"219 153.333 OFFCURVE",
"207 156 CURVE",
"220.333 158.667 OFFCURVE",
"231 170.333 OFFCURVE",
"231 193 CURVE SMOOTH",
"231 270 LINE SMOOTH",
"231 296.667 OFFCURVE",
"213 309 OFFCURVE",
"197 309 CURVE SMOOTH",
"191 309 LINE SMOOTH",
"175 309 OFFCURVE",
"158 296.667 OFFCURVE",
"158 270 CURVE SMOOTH",
"158 181 LINE",
"176 181 LINE",
"176 268 LINE SMOOTH",
"176 288 OFFCURVE",
"183.667 294 OFFCURVE",
"193 294 CURVE SMOOTH",
"195 294 LINE SMOOTH",
"204.333 294 OFFCURVE",
"214 288.333 OFFCURVE",
"214 267 CURVE SMOOTH",
"214 191 LINE SMOOTH",
"214 171 OFFCURVE",
"205.667 162 OFFCURVE",
"195 162 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"88 392 LINE",
"88 699 LINE",
"73 699 LINE",
"69 688.333 OFFCURVE",
"56.667 678 OFFCURVE",
"46 678 CURVE",
"46 664 LINE",
"52.667 664 OFFCURVE",
"64.667 670 OFFCURVE",
"70 674 CURVE",
"70 392 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
26 17 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
29 17 26 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
65 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
65 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
29 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
61 36 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 266;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = period;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 75 LINE",
"34 75 LINE",
"34 0 LINE",
"70 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 75 LINE",
"21 75 LINE",
"21 0 LINE",
"36 0 LINE",
"21 -56 LINE",
"37 -56 LINE",
"57 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 4 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 78;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 415 LINE",
"34 415 LINE",
"34 340 LINE",
"70 340 LINE"
);
},
{
closed = 1;
nodes = (
"70 75 LINE",
"34 75 LINE",
"34 0 LINE",
"70 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 415 LINE",
"44 415 LINE",
"44 340 LINE",
"81 340 LINE"
);
},
{
closed = 1;
nodes = (
"81 75 LINE",
"45 75 LINE",
"45 0 LINE",
"61 0 LINE",
"46 -56 LINE",
"62 -56 LINE",
"81 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
6 8 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 75 LINE",
"34 75 LINE",
"34 0 LINE",
"70 0 LINE"
);
},
{
closed = 1;
nodes = (
"154 75 LINE",
"117 75 LINE",
"117 0 LINE",
"154 0 LINE"
);
},
{
closed = 1;
nodes = (
"237 75 LINE",
"201 75 LINE",
"201 0 LINE",
"237 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
95 5 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
144 5 160 5 176 5 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 3 values pushed */
95 9 1 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 7 values pushed */
144 9 160 9 176 9 3 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 2 values pushed */
8 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
4 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 271;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 431 LINE",
"70 699 LINE",
"34 699 LINE",
"34 431 LINE",
"38 109 LINE",
"65 109 LINE"
);
},
{
closed = 1;
nodes = (
"70 75 LINE",
"34 75 LINE",
"34 0 LINE",
"70 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 2 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 699 LINE",
"34 699 LINE",
"34 624 LINE",
"70 624 LINE"
);
},
{
closed = 1;
nodes = (
"65 590 LINE",
"38 590 LINE",
"34 268 LINE",
"34 0 LINE",
"70 0 LINE",
"70 268 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 5 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"54 417 LINE",
"54 612 LINE SMOOTH",
"54 657.333 OFFCURVE",
"75 675 OFFCURVE",
"95 675 CURVE SMOOTH",
"103 675 LINE SMOOTH",
"124.333 675 OFFCURVE",
"145 657.333 OFFCURVE",
"145 612 CURVE SMOOTH",
"145 508 LINE SMOOTH",
"145 449.554 OFFCURVE",
"119.407 398.714 OFFCURVE",
"96 348 CURVE SMOOTH",
"75.051 302.611 OFFCURVE",
"57.808 191.543 OFFCURVE",
"69 109 CURVE",
"105 109 LINE",
"93.734 186.456 OFFCURVE",
"110.334 292.862 OFFCURVE",
"131 338.5 CURVE SMOOTH",
"154.158 389.642 OFFCURVE",
"180 442.744 OFFCURVE",
"180 502 CURVE SMOOTH",
"180 617 LINE SMOOTH",
"180 674.421 OFFCURVE",
"146.643 705 OFFCURVE",
"106 705 CURVE SMOOTH",
"95 705 LINE SMOOTH",
"54.357 705 OFFCURVE",
"21 674.421 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 417 LINE"
);
},
{
closed = 1;
nodes = (
"105 75 LINE",
"69 75 LINE",
"69 0 LINE",
"105 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
37 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
20 4 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
13 4 28 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
38 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
32 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 202;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"148 117 LINE",
"148 -78 LINE SMOOTH",
"148 -123.333 OFFCURVE",
"127.333 -141 OFFCURVE",
"106 -141 CURVE SMOOTH",
"98 -141 LINE SMOOTH",
"78 -141 OFFCURVE",
"57 -123.333 OFFCURVE",
"57 -78 CURVE SMOOTH",
"57 26 LINE SMOOTH",
"57 84.906 OFFCURVE",
"83.007 134.724 OFFCURVE",
"106 185.5 CURVE SMOOTH",
"126.77 231.368 OFFCURVE",
"142.836 342.095 OFFCURVE",
"133 425 CURVE",
"97 425 LINE",
"106.888 347.306 OFFCURVE",
"90.599 240.989 OFFCURVE",
"70 195.5 CURVE SMOOTH",
"46.842 144.358 OFFCURVE",
"21 91.256 OFFCURVE",
"21 32 CURVE SMOOTH",
"21 -83 LINE SMOOTH",
"21 -145.667 OFFCURVE",
"60 -171 OFFCURVE",
"96 -171 CURVE SMOOTH",
"106 -171 LINE SMOOTH",
"142 -171 OFFCURVE",
"180 -145.667 OFFCURVE",
"180 -83 CURVE SMOOTH",
"180 117 LINE"
);
},
{
closed = 1;
nodes = (
"96 459 LINE",
"133 459 LINE",
"133 534 LINE",
"96 534 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
25 4 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
17 4 37 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 6 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
34 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
29 1 4 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 202;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"70 285 LINE",
"34 285 LINE",
"34 210 LINE",
"70 210 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 104;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"92 201 OFFCURVE",
"116 220 OFFCURVE",
"116 248 CURVE SMOOTH",
"116 272 OFFCURVE",
"96 295 OFFCURVE",
"68 295 CURVE SMOOTH",
"44 295 OFFCURVE",
"21 276 OFFCURVE",
"21 248 CURVE SMOOTH",
"21 222.667 OFFCURVE",
"41.333 201 OFFCURVE",
"68 201 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
218 3 234 3 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 3 25 3 41 3 57 3 73 3 89 3 105 3 121 3 137 3 153 3 169 3 185 3 201 3 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
6 0 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 137;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"101 601 LINE",
"138 539 LINE",
"154 549 LINE",
"115 610 LINE",
"182 629 LINE",
"176 648 LINE",
"110 626 LINE",
"112 699 LINE",
"92 699 LINE",
"93 626 LINE",
"27 648 LINE",
"21 630 LINE",
"88 610 LINE",
"51 549 LINE",
"66 538 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
5 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
8 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
14 0 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 203;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"248 254 LINE",
"206 254 LINE",
"222 443 LINE",
"264 443 LINE",
"268 473 LINE",
"225 473 LINE",
"245 699 LINE",
"213 699 LINE",
"193 473 LINE",
"127 473 LINE",
"147 699 LINE",
"114 699 LINE",
"94 473 LINE",
"47 473 LINE",
"44 443 LINE",
"91 443 LINE",
"75 254 LINE",
"27 254 LINE",
"24 224 LINE",
"72 224 LINE",
"53 0 LINE",
"86 0 LINE",
"105 224 LINE",
"171 224 LINE",
"151 0 LINE",
"184 0 LINE",
"203 224 LINE",
"244 224 LINE"
);
},
{
closed = 1;
nodes = (
"124 443 LINE",
"190 443 LINE",
"173 254 LINE",
"108 254 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
20 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
27 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 1 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 292;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"3 0 LINE",
"34 0 LINE",
"190 699 LINE",
"160 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 699 LINE",
"3 699 LINE",
"160 0 LINE",
"190 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 194;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = parenleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"152 -36 LINE",
"152 -6 LINE",
"113 -6 LINE SMOOTH",
"78.333 -6 OFFCURVE",
"57 21 OFFCURVE",
"57 81 CURVE SMOOTH",
"57 618 LINE SMOOTH",
"57 678 OFFCURVE",
"78.333 705 OFFCURVE",
"113 705 CURVE SMOOTH",
"152 705 LINE",
"152 735 LINE",
"101 735 LINE SMOOTH",
"59.667 735 OFFCURVE",
"21 709.667 OFFCURVE",
"21 635 CURVE SMOOTH",
"21 64 LINE SMOOTH",
"21 -10.667 OFFCURVE",
"59.667 -36 OFFCURVE",
"101 -36 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
14 4 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
17 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
8 1 9 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 199;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"98 -36 LINE SMOOTH",
"139.333 -36 OFFCURVE",
"178 -10.667 OFFCURVE",
"178 64 CURVE SMOOTH",
"178 635 LINE SMOOTH",
"178 709.667 OFFCURVE",
"139.333 735 OFFCURVE",
"98 735 CURVE SMOOTH",
"47 735 LINE",
"47 705 LINE",
"86 705 LINE SMOOTH",
"120.667 705 OFFCURVE",
"142 678 OFFCURVE",
"142 618 CURVE SMOOTH",
"142 81 LINE SMOOTH",
"142 21 OFFCURVE",
"120.667 -6 OFFCURVE",
"86 -6 CURVE SMOOTH",
"47 -6 LINE",
"47 -36 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
16 1 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
1 1 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
12 1 9 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 199;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"10 357 LINE",
"10 342 LINE",
"21 342 LINE SMOOTH",
"50.333 342 OFFCURVE",
"71 318.333 OFFCURVE",
"71 273 CURVE SMOOTH",
"71 42 LINE SMOOTH",
"71 -20.667 OFFCURVE",
"103.667 -51 OFFCURVE",
"145 -51 CURVE SMOOTH",
"165 -51 LINE",
"165 -21 LINE",
"157 -21 LINE SMOOTH",
"122.333 -21 OFFCURVE",
"107 9.333 OFFCURVE",
"107 48 CURVE SMOOTH",
"107 272 LINE SMOOTH",
"107 332 OFFCURVE",
"72.667 354.333 OFFCURVE",
"38 357 CURVE",
"72.667 359.667 OFFCURVE",
"107 382 OFFCURVE",
"107 442 CURVE SMOOTH",
"107 666 LINE SMOOTH",
"107 704.667 OFFCURVE",
"122.333 735 OFFCURVE",
"157 735 CURVE SMOOTH",
"165 735 LINE",
"165 765 LINE",
"145 765 LINE SMOOTH",
"103.667 765 OFFCURVE",
"71 734.667 OFFCURVE",
"71 672 CURVE SMOOTH",
"71 441 LINE SMOOTH",
"71 395.667 OFFCURVE",
"50.333 372 OFFCURVE",
"21 372 CURVE SMOOTH",
"10 372 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
15 4 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
21 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
26 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
18 27 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"184 372 LINE SMOOTH",
"154.667 372 OFFCURVE",
"134 395.667 OFFCURVE",
"134 441 CURVE SMOOTH",
"134 672 LINE SMOOTH",
"134 734.667 OFFCURVE",
"101.333 765 OFFCURVE",
"60 765 CURVE SMOOTH",
"40 765 LINE",
"40 735 LINE",
"48 735 LINE SMOOTH",
"82.667 735 OFFCURVE",
"98 704.667 OFFCURVE",
"98 666 CURVE SMOOTH",
"98 442 LINE SMOOTH",
"98 382 OFFCURVE",
"132.667 359.667 OFFCURVE",
"166 357 CURVE",
"132.667 354.333 OFFCURVE",
"98 332 OFFCURVE",
"98 272 CURVE SMOOTH",
"98 48 LINE SMOOTH",
"98 9.333 OFFCURVE",
"82.667 -21 OFFCURVE",
"48 -21 CURVE SMOOTH",
"40 -21 LINE",
"40 -51 LINE",
"60 -51 LINE SMOOTH",
"101.333 -51 OFFCURVE",
"134 -20.667 OFFCURVE",
"134 42 CURVE SMOOTH",
"134 273 LINE SMOOTH",
"134 318.333 OFFCURVE",
"154.667 342 OFFCURVE",
"184 342 CURVE SMOOTH",
"195 342 LINE",
"195 372 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
6 11 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
15 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
19 9 28 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"111 -56 LINE",
"111 -26 LINE",
"58 -26 LINE",
"58 725 LINE",
"111 725 LINE",
"111 755 LINE",
"21 755 LINE",
"21 -56 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 158;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"137 -56 LINE",
"137 755 LINE",
"47 755 LINE",
"47 725 LINE",
"100 725 LINE",
"100 -26 LINE",
"47 -26 LINE",
"47 -56 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
7 0 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
2 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 158;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 362 LINE",
"24 337 LINE",
"211 337 LINE",
"211 362 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 3 1 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 235;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = endash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"302 362 LINE",
"24 362 LINE",
"24 337 LINE",
"302 337 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 326;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"442 362 LINE",
"24 362 LINE",
"24 337 LINE",
"442 337 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 465;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = underscore;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"284 25 LINE",
"24 25 LINE",
"24 0 LINE",
"284 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
2 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 308;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 75 LINE",
"44 75 LINE",
"44 0 LINE",
"60 0 LINE",
"45 -56 LINE",
"61 -56 LINE",
"81 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 4 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
3 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
3 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 76 LINE",
"44 76 LINE",
"44 1 LINE",
"60 1 LINE",
"45 -56 LINE",
"61 -56 LINE",
"81 1 LINE"
);
},
{
closed = 1;
nodes = (
"164 76 LINE",
"128 76 LINE",
"128 1 LINE",
"143 1 LINE",
"128 -56 LINE",
"145 -56 LINE",
"164 1 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 198;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 554 LINE",
"70 554 LINE",
"70 629 LINE",
"55 629 LINE",
"70 685 LINE",
"53 685 LINE",
"34 629 LINE"
);
},
{
closed = 1;
nodes = (
"117 554 LINE",
"154 554 LINE",
"154 629 LINE",
"138 629 LINE",
"153 685 LINE",
"137 685 LINE",
"117 629 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
4 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
11 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 5 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 198;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 699 LINE",
"44 699 LINE",
"44 624 LINE",
"60 624 LINE",
"45 568 LINE",
"61 568 LINE",
"81 624 LINE"
);
},
{
closed = 1;
nodes = (
"164 699 LINE",
"128 699 LINE",
"128 624 LINE",
"143 624 LINE",
"128 568 LINE",
"145 568 LINE",
"164 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 198;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 554 LINE",
"70 554 LINE",
"70 629 LINE",
"55 629 LINE",
"70 685 LINE",
"53 685 LINE",
"34 629 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 4 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 683 LINE",
"44 683 LINE",
"44 608 LINE",
"60 608 LINE",
"45 552 LINE",
"61 552 LINE",
"81 608 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 4 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 48 LINE",
"57 245 LINE",
"102 447 LINE",
"70 447 LINE",
"24 246 LINE",
"71 48 LINE"
);
},
{
closed = 1;
nodes = (
"167 48 LINE",
"120 245 LINE",
"165 447 LINE",
"133 447 LINE",
"87 246 LINE",
"134 48 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 48 LINE",
"104 246 LINE",
"58 447 LINE",
"26 447 LINE",
"71 245 LINE",
"24 48 LINE"
);
},
{
closed = 1;
nodes = (
"120 48 LINE",
"167 246 LINE",
"121 447 LINE",
"89 447 LINE",
"134 245 LINE",
"87 48 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"104 48 LINE",
"57 245 LINE",
"102 447 LINE",
"70 447 LINE",
"24 246 LINE",
"71 48 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 128;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 48 LINE",
"104 246 LINE",
"58 447 LINE",
"26 447 LINE",
"71 245 LINE",
"24 48 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 128;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 699 LINE",
"44 699 LINE",
"44 624 LINE",
"60 624 LINE",
"45 568 LINE",
"61 568 LINE",
"81 624 LINE"
);
},
{
closed = 1;
nodes = (
"164 699 LINE",
"128 699 LINE",
"128 624 LINE",
"143 624 LINE",
"128 568 LINE",
"145 568 LINE",
"164 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
7 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
12 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
10 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 198;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 699 LINE",
"44 699 LINE",
"44 624 LINE",
"60 624 LINE",
"45 568 LINE",
"61 568 LINE",
"81 624 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 4 4 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
2 4 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 115;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = CR;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 132;
}
);
note = CR;
},
{
glyphname = .notdef;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 132;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = .null;
},
{
glyphname = space;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 132;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = uni00A0;
unicode = 00A0;
},
{
glyphname = at;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"176 -6 LINE SMOOTH",
"230.667 -4.667 OFFCURVE",
"258.333 15.667 OFFCURVE",
"277 37 CURVE",
"252 55 LINE",
"241.333 40.333 OFFCURVE",
"218.667 21 OFFCURVE",
"176 21 CURVE SMOOTH",
"153 21 LINE SMOOTH",
"81.305 21 OFFCURVE",
"54 75.16 OFFCURVE",
"54 130 CURVE SMOOTH",
"54 459 LINE SMOOTH",
"54 513.84 OFFCURVE",
"81.305 568 OFFCURVE",
"153 568 CURVE SMOOTH",
"176 568 LINE SMOOTH",
"247.194 568 OFFCURVE",
"275 512.388 OFFCURVE",
"275 459 CURVE SMOOTH",
"275 142 LINE SMOOTH",
"275 103.286 OFFCURVE",
"237 103.946 OFFCURVE",
"237 142 CURVE SMOOTH",
"237 503 LINE",
"212 503 LINE",
"206 488 LINE",
"206 470 LINE",
"191.333 490 OFFCURVE",
"171.333 504 OFFCURVE",
"154 504 CURVE SMOOTH",
"150 504 LINE SMOOTH",
"115.333 504 OFFCURVE",
"92 476.333 OFFCURVE",
"92 423 CURVE SMOOTH",
"92 164 LINE SMOOTH",
"92 110.667 OFFCURVE",
"114.333 83 OFFCURVE",
"149 83 CURVE SMOOTH",
"153 83 LINE SMOOTH",
"171.667 83 OFFCURVE",
"191.333 96.333 OFFCURVE",
"206 119 CURVE",
"217.054 66.496 OFFCURVE",
"308 72.743 OFFCURVE",
"308 128 CURVE SMOOTH",
"308 461 LINE SMOOTH",
"308 530.957 OFFCURVE",
"262.896 595 OFFCURVE",
"176 595 CURVE SMOOTH",
"153 595 LINE SMOOTH",
"66.104 595 OFFCURVE",
"21 530.957 OFFCURVE",
"21 461 CURVE SMOOTH",
"21 128 LINE SMOOTH",
"21 58.043 OFFCURVE",
"66.104 -6 OFFCURVE",
"153 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"162 111 LINE SMOOTH",
"143.333 111 OFFCURVE",
"126 128 OFFCURVE",
"126 164 CURVE SMOOTH",
"126 423 LINE SMOOTH",
"126 459 OFFCURVE",
"143.333 476 OFFCURVE",
"162 476 CURVE SMOOTH",
"165 476 LINE SMOOTH",
"182.333 476 OFFCURVE",
"203.333 454.333 OFFCURVE",
"206 421 CURVE",
"206 165 LINE",
"203.333 131.667 OFFCURVE",
"182.333 111 OFFCURVE",
"165 111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
60 6 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
86 6 30 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
42 6 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
18 6 47 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
12 3 53 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
65 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 329;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 705 LINE",
"54.333 702.333 OFFCURVE",
"21 675.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 442 LINE SMOOTH",
"21 390 OFFCURVE",
"46.667 365.667 OFFCURVE",
"76 359 CURVE",
"46.667 352.333 OFFCURVE",
"21 331 OFFCURVE",
"21 279 CURVE SMOOTH",
"21 82 LINE SMOOTH",
"21 22 OFFCURVE",
"54.333 -4.333 OFFCURVE",
"89 -7 CURVE",
"89 -57 LINE",
"114 -57 LINE",
"114 -7 LINE",
"148.667 -4.333 OFFCURVE",
"183 22 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 282 LINE",
"148 282 LINE",
"148 86 LINE SMOOTH",
"148 40.667 OFFCURVE",
"127.333 24 OFFCURVE",
"106 24 CURVE SMOOTH",
"98 24 LINE SMOOTH",
"78 24 OFFCURVE",
"57 40.333 OFFCURVE",
"57 87 CURVE SMOOTH",
"57 280 LINE SMOOTH",
"57 325.333 OFFCURVE",
"78.333 346 OFFCURVE",
"101 346 CURVE SMOOTH",
"118 346 LINE",
"118 372 LINE",
"101 372 LINE SMOOTH",
"78.333 372 OFFCURVE",
"57 392.667 OFFCURVE",
"57 438 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 416 LINE",
"183 416 LINE",
"183 617 LINE SMOOTH",
"183 677 OFFCURVE",
"148.667 702.333 OFFCURVE",
"114 705 CURVE",
"114 755 LINE",
"89 755 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
26 4 45 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
1 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
6 4 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
26 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
49 45 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
45 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
49 40 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"229 -164 LINE",
"257 -164 LINE",
"257 699 LINE",
"128 699 LINE SMOOTH",
"59.844 699 OFFCURVE",
"21 623.905 OFFCURVE",
"21 552 CURVE SMOOTH",
"21 480.09 OFFCURVE",
"59.42 405 OFFCURVE",
"128 405 CURVE",
"128 -164 LINE",
"155 -164 LINE",
"155 672 LINE",
"229 672 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
1 9 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
15 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
3 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
2 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
16 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
16 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 281;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"164 478 LINE",
"164 624 LINE SMOOTH",
"164 677.333 OFFCURVE",
"133 705 OFFCURVE",
"97 705 CURVE SMOOTH",
"88 705 LINE SMOOTH",
"53.333 705 OFFCURVE",
"21 676 OFFCURVE",
"21 624 CURVE SMOOTH",
"21 529 LINE SMOOTH",
"21 473.705 OFFCURVE",
"54.787 443.398 OFFCURVE",
"93 402 CURVE",
"88 402 LINE SMOOTH",
"53.333 402 OFFCURVE",
"21 373 OFFCURVE",
"21 321 CURVE SMOOTH",
"21 225 LINE SMOOTH",
"21 130.877 OFFCURVE",
"134 100.414 OFFCURVE",
"134 17 CURVE SMOOTH",
"134 -90 LINE SMOOTH",
"134 -124.667 OFFCURVE",
"116.333 -143 OFFCURVE",
"99 -143 CURVE SMOOTH",
"89 -143 LINE SMOOTH",
"70.333 -143 OFFCURVE",
"51 -124.667 OFFCURVE",
"51 -90 CURVE SMOOTH",
"51 70 LINE",
"21 70 LINE",
"21 -90 LINE SMOOTH",
"21 -143.333 OFFCURVE",
"53.333 -171 OFFCURVE",
"88 -171 CURVE SMOOTH",
"103 -171 LINE SMOOTH",
"135 -171 OFFCURVE",
"167 -143.333 OFFCURVE",
"167 -90 CURVE SMOOTH",
"167 19 LINE SMOOTH",
"167 79.198 OFFCURVE",
"121.443 104.077 OFFCURVE",
"84 154 CURVE",
"88 154 LINE",
"103 154 LINE SMOOTH",
"135 154 OFFCURVE",
"167 182 OFFCURVE",
"167 234 CURVE SMOOTH",
"167 322 LINE SMOOTH",
"167 410.872 OFFCURVE",
"54 444.46 OFFCURVE",
"54 531 CURVE SMOOTH",
"54 623 LINE SMOOTH",
"54 657.667 OFFCURVE",
"72.333 677 OFFCURVE",
"91 677 CURVE SMOOTH",
"97 677 LINE SMOOTH",
"115.667 677 OFFCURVE",
"134 657.667 OFFCURVE",
"134 623 CURVE SMOOTH",
"134 478 LINE"
);
},
{
closed = 1;
nodes = (
"133 325.667 OFFCURVE",
"133.167 324.5 OFFCURVE",
"133.5 323.5 CURVE SMOOTH",
"133.833 322.5 OFFCURVE",
"134 321.333 OFFCURVE",
"134 320 CURVE SMOOTH",
"134 230 LINE",
"131.333 198 OFFCURVE",
"115 182 OFFCURVE",
"99 182 CURVE SMOOTH",
"89 182 LINE SMOOTH",
"74.333 182 OFFCURVE",
"63.333 189.667 OFFCURVE",
"56 205 CURVE",
"54.667 211.667 OFFCURVE",
"54 220 OFFCURVE",
"54 228 CURVE SMOOTH",
"54 320 LINE SMOOTH",
"54 354.667 OFFCURVE",
"72.333 374 OFFCURVE",
"91 374 CURVE SMOOTH",
"97 374 LINE SMOOTH",
"109.667 374 OFFCURVE",
"119.667 366.667 OFFCURVE",
"127 352 CURVE",
"130.333 344 OFFCURVE",
"132.333 335.667 OFFCURVE",
"133 327 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
91 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
91 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
49 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
78 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
68 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
20 49 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
54 49 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
49 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
59 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
69 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
71 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
71 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
78 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
81 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
81 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
87 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
68 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
29 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
63 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
63 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
20 29 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
54 29 63 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"21 252 OFFCURVE",
"29.667 163.833 OFFCURVE",
"63 100.5 CURVE SMOOTH",
"96.333 37.167 OFFCURVE",
"154 -2 OFFCURVE",
"250 -2 CURVE SMOOTH",
"346 -2 OFFCURVE",
"401.333 37.167 OFFCURVE",
"432 100.5 CURVE SMOOTH",
"462.667 163.833 OFFCURVE",
"469 252 OFFCURVE",
"469 348 CURVE SMOOTH",
"469 444 OFFCURVE",
"462.667 532.167 OFFCURVE",
"432 595.5 CURVE SMOOTH",
"401.333 658.833 OFFCURVE",
"346 698 OFFCURVE",
"250 698 CURVE SMOOTH",
"154 698 OFFCURVE",
"96.333 658.833 OFFCURVE",
"63 595.5 CURVE SMOOTH",
"29.667 532.167 OFFCURVE",
"21 444 OFFCURVE",
"21 348 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"44 437.333 OFFCURVE",
"50.833 519.333 OFFCURVE",
"79.5 578 CURVE SMOOTH",
"108.167 636.667 OFFCURVE",
"159.667 674 OFFCURVE",
"249 674 CURVE SMOOTH",
"338.333 674 OFFCURVE",
"387.167 636.667 OFFCURVE",
"414.5 578 CURVE SMOOTH",
"441.833 519.333 OFFCURVE",
"446 437.333 OFFCURVE",
"446 348 CURVE SMOOTH",
"446 258.667 OFFCURVE",
"441.833 176.667 OFFCURVE",
"414.5 118 CURVE SMOOTH",
"387.167 59.333 OFFCURVE",
"338.333 22 OFFCURVE",
"249 22 CURVE SMOOTH",
"159.667 22 OFFCURVE",
"108.167 59.333 OFFCURVE",
"79.5 118 CURVE SMOOTH",
"50.833 176.667 OFFCURVE",
"44 258.667 OFFCURVE",
"44 348 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 394 LINE",
"323 480 LINE SMOOTH",
"323 533.333 OFFCURVE",
"290.667 561 OFFCURVE",
"256 561 CURVE SMOOTH",
"243 561 LINE SMOOTH",
"208.333 561 OFFCURVE",
"176 532 OFFCURVE",
"176 480 CURVE SMOOTH",
"176 221 LINE SMOOTH",
"176 167.667 OFFCURVE",
"208.333 140 OFFCURVE",
"239 140 CURVE SMOOTH",
"256 140 LINE SMOOTH",
"290.667 140 OFFCURVE",
"323 167.667 OFFCURVE",
"323 221 CURVE SMOOTH",
"323 309 LINE",
"289 309 LINE",
"289 221 LINE SMOOTH",
"289 185 OFFCURVE",
"271.667 168 OFFCURVE",
"253 168 CURVE SMOOTH",
"243 168 LINE SMOOTH",
"228.333 168 OFFCURVE",
"209 185 OFFCURVE",
"209 221 CURVE SMOOTH",
"209 480 LINE SMOOTH",
"209 516 OFFCURVE",
"227.333 533 OFFCURVE",
"246 533 CURVE SMOOTH",
"253 533 LINE SMOOTH",
"271.667 533 OFFCURVE",
"289 516 OFFCURVE",
"289 480 CURVE SMOOTH",
"289 394 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
20 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
49 6 66 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
75 6 40 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
10 5 30 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
6 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
149 20 165 20 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
154 30 170 30 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
40 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
56 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
75 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
58 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
77 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
25 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
35 2 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200 35 216 35 232 35 248 35 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200 35 216 35 232 35 248 35 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 33 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200 35 216 35 232 35 248 35 16 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 487;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 425.548 OFFCURVE",
"63.644 347 OFFCURVE",
"161 347 CURVE SMOOTH",
"258.037 347 OFFCURVE",
"294 424.892 OFFCURVE",
"294 526 CURVE SMOOTH",
"294 627.108 OFFCURVE",
"258.037 705 OFFCURVE",
"161 705 CURVE SMOOTH",
"63.644 705 OFFCURVE",
"24 626.452 OFFCURVE",
"24 526 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"42 617.288 OFFCURVE",
"73.592 690 OFFCURVE",
"161 690 CURVE SMOOTH",
"248.897 690 OFFCURVE",
"276 617.796 OFFCURVE",
"276 526 CURVE SMOOTH",
"276 434.204 OFFCURVE",
"248.897 362 OFFCURVE",
"161 362 CURVE SMOOTH",
"73.592 362 OFFCURVE",
"42 434.712 OFFCURVE",
"42 526 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"201 577 LINE SMOOTH",
"201 609 OFFCURVE",
"186.667 625 OFFCURVE",
"168 625 CURVE SMOOTH",
"125 625 LINE",
"125 431 LINE",
"143 431 LINE",
"143 512 LINE",
"165 512 LINE SMOOTH",
"177.667 512 OFFCURVE",
"184 502.333 OFFCURVE",
"184 483 CURVE SMOOTH",
"184 431 LINE",
"201 431 LINE",
"201 488 LINE SMOOTH",
"201 507.333 OFFCURVE",
"195.333 518.667 OFFCURVE",
"184 522 CURVE",
"194.667 528.667 OFFCURVE",
"201 537 OFFCURVE",
"201 557 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 531 LINE",
"143 607 LINE",
"163 607 LINE SMOOTH",
"173.667 607 OFFCURVE",
"184 599.333 OFFCURVE",
"184 574 CURVE SMOOTH",
"184 561 LINE SMOOTH",
"184 541 OFFCURVE",
"178 531 OFFCURVE",
"166 531 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
67 0 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
10 43 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
53 0 67 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
53 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
218 43 234 43 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
47 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
67 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
51 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
43 15 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 318;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"188 699 LINE",
"159 442 LINE",
"132 699 LINE",
"105 699 LINE",
"105 392 LINE",
"122 392 LINE",
"122 641 LINE",
"151 392 LINE",
"166 392 LINE",
"196 641 LINE",
"196 392 LINE",
"213 392 LINE",
"213 699 LINE"
);
},
{
closed = 1;
nodes = (
"89 699 LINE",
"18 699 LINE",
"18 681 LINE",
"43 681 LINE",
"43 392 LINE",
"64 392 LINE",
"64 681 LINE",
"89 681 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
15 5 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
1 8 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 8 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 8 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[11100]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
11 8 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
6 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
11 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 230;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89.333 611 OFFCURVE",
"108 631 OFFCURVE",
"108 655 CURVE SMOOTH",
"108 679 OFFCURVE",
"89.333 699 OFFCURVE",
"64 699 CURVE SMOOTH",
"40 699 OFFCURVE",
"21 679 OFFCURVE",
"21 655 CURVE SMOOTH",
"21 631 OFFCURVE",
"40 611 OFFCURVE",
"64 611 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"82.667 689 OFFCURVE",
"99 673.667 OFFCURVE",
"99 655 CURVE SMOOTH",
"99 636.333 OFFCURVE",
"82.667 621 OFFCURVE",
"64 621 CURVE SMOOTH",
"45.333 621 OFFCURVE",
"30 636.333 OFFCURVE",
"30 655 CURVE SMOOTH",
"30 673.667 OFFCURVE",
"45.333 689 OFFCURVE",
"64 689 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 5 values pushed */
218 3 234 3 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
9 3 25 3 41 3 57 3 73 3 89 3 105 3 121 3 137 3 153 3 169 3 185 3 201 3 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[11100]\011/* MoveDirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
217 0 233 0 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 27 values pushed */
8 0 24 0 40 0 56 0 72 0 88 0 104 0 120 0 136 0 152 0 168 0 184 0 200 0 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 129;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = bar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"27 -30 LINE",
"60 -30 LINE",
"60 729 LINE",
"27 729 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 0 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 87;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"27 -30 LINE",
"60 -30 LINE",
"60 293 LINE",
"27 293 LINE"
);
},
{
closed = 1;
nodes = (
"27 408 LINE",
"60 408 LINE",
"60 729 LINE",
"27 729 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 87;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = dagger;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"74 699 LINE",
"74 435 LINE",
"24 435 LINE",
"24 407 LINE",
"74 407 LINE",
"74 -165 LINE",
"107 -165 LINE",
"107 407 LINE",
"159 407 LINE",
"159 435 LINE",
"107 435 LINE",
"107 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
5 6 6 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 183;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"74 699 LINE",
"74 435 LINE",
"24 435 LINE",
"24 407 LINE",
"74 407 LINE",
"74 127 LINE",
"24 127 LINE",
"24 99 LINE",
"74 99 LINE",
"74 -165 LINE",
"107 -165 LINE",
"107 99 LINE",
"159 99 LINE",
"159 127 LINE",
"107 127 LINE",
"107 407 LINE",
"159 407 LINE",
"159 435 LINE",
"107 435 LINE",
"107 699 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 6 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
6 3 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
6 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 183;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = cent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"168 291 LINE",
"168 417 LINE SMOOTH",
"168 466.333 OFFCURVE",
"140 494.333 OFFCURVE",
"108 497 CURVE",
"108 552 LINE",
"84 552 LINE",
"84 498 LINE",
"49.333 495.333 OFFCURVE",
"21 467.667 OFFCURVE",
"21 417 CURVE SMOOTH",
"21 78 LINE SMOOTH",
"21 24.667 OFFCURVE",
"52.333 -1.667 OFFCURVE",
"83 -3 CURVE",
"83 -57 LINE",
"108 -57 LINE",
"108 -2 LINE",
"140 0.667 OFFCURVE",
"168 27.333 OFFCURVE",
"168 78 CURVE SMOOTH",
"168 206 LINE",
"134 206 LINE",
"134 78 LINE SMOOTH",
"134 42 OFFCURVE",
"116.667 25 OFFCURVE",
"98 25 CURVE SMOOTH",
"88 25 LINE SMOOTH",
"73.333 25 OFFCURVE",
"54 42 OFFCURVE",
"54 78 CURVE SMOOTH",
"54 417 LINE SMOOTH",
"54 453 OFFCURVE",
"72.333 470 OFFCURVE",
"91 470 CURVE SMOOTH",
"98 470 LINE SMOOTH",
"116.667 470 OFFCURVE",
"134 453 OFFCURVE",
"134 417 CURVE SMOOTH",
"134 291 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 6 28 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
35 5 32 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
39 6 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
18 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
35 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
32 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
39 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 186;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = currency;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"300 210 LINE",
"319 229 LINE",
"278 270 LINE",
"298 294 OFFCURVE",
"311 325.333 OFFCURVE",
"311 360 CURVE SMOOTH",
"311 393.333 OFFCURVE",
"298.333 424 OFFCURVE",
"277 448 CURVE",
"319 490 LINE",
"299 509 LINE",
"258 467 LINE",
"234 487 OFFCURVE",
"203.333 500 OFFCURVE",
"170 500 CURVE SMOOTH",
"136.667 500 OFFCURVE",
"106 487 OFFCURVE",
"82 467 CURVE",
"41 507 LINE",
"22 488 LINE",
"62 447 LINE",
"42 423 OFFCURVE",
"30 392 OFFCURVE",
"30 360 CURVE SMOOTH",
"30 326 OFFCURVE",
"40.667 296.333 OFFCURVE",
"62 271 CURVE",
"21 231 LINE",
"40 211 LINE",
"81 252 LINE",
"106.333 230 OFFCURVE",
"136 219 OFFCURVE",
"170 219 CURVE SMOOTH",
"203.333 219 OFFCURVE",
"235 231 OFFCURVE",
"259 251 CURVE"
);
},
{
closed = 1;
nodes = (
"59 420.394 OFFCURVE",
"108.108 471 OFFCURVE",
"170 471 CURVE SMOOTH",
"230.772 471 OFFCURVE",
"282 420.394 OFFCURVE",
"282 360 CURVE SMOOTH",
"282 295.529 OFFCURVE",
"231.974 247 OFFCURVE",
"170 247 CURVE SMOOTH",
"106.885 247 OFFCURVE",
"59 295.529 OFFCURVE",
"59 360 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
54 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
54 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
34 6 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 150 34 166 34 182 34 198 34 214 34 230 34 246 34 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 102 34 118 34 134 34 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
149 34 165 34 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
34 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
NPUSHW[ ]\011/* 5 values pushed */
154 44 170 44 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
28 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
44 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
28 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
33 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
19 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
19 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
39 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 1 
MIRP[10100]\011/* MoveIndirectRelPt */
NPUSHW[ ]\011/* 5 values pushed */
153 49 169 49 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 33 values pushed */
8 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
8 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 152 49 168 49 184 49 200 49 216 49 232 49 248 49 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
8 49 24 49 40 49 56 49 72 49 88 49 104 49 120 49 136 49 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 340;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = dollar;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"89 -57 LINE",
"113 -57 LINE",
"113 -6 LINE",
"147.667 -4.667 OFFCURVE",
"183 20.667 OFFCURVE",
"183 82 CURVE SMOOTH",
"183 197 LINE SMOOTH",
"183 318.776 OFFCURVE",
"57 387.307 OFFCURVE",
"57 508 CURVE SMOOTH",
"57 612 LINE SMOOTH",
"57 657.333 OFFCURVE",
"78 675 OFFCURVE",
"98 675 CURVE SMOOTH",
"106 675 LINE SMOOTH",
"127.333 675 OFFCURVE",
"148 657.333 OFFCURVE",
"148 612 CURVE SMOOTH",
"148 417 LINE",
"180 417 LINE",
"180 617 LINE SMOOTH",
"180 675.667 OFFCURVE",
"146.333 702.333 OFFCURVE",
"113 705 CURVE",
"113 755 LINE",
"89 755 LINE",
"89 705 LINE",
"54.333 702.333 OFFCURVE",
"21 675.667 OFFCURVE",
"21 617 CURVE SMOOTH",
"21 502 LINE SMOOTH",
"21 443.842 OFFCURVE",
"53.317 389.912 OFFCURVE",
"84.5 345.5 CURVE SMOOTH",
"115.46 301.405 OFFCURVE",
"148 247.413 OFFCURVE",
"148 192 CURVE SMOOTH",
"148 87 LINE SMOOTH",
"148 41.667 OFFCURVE",
"126.333 24 OFFCURVE",
"105 24 CURVE SMOOTH",
"97 24 LINE SMOOTH",
"75.667 24 OFFCURVE",
"54 40.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 282 LINE",
"21 282 LINE",
"21 82 LINE SMOOTH",
"21 23.333 OFFCURVE",
"55.667 -3.333 OFFCURVE",
"89 -6 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
42 4 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
51 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
48 4 13 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
3 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
42 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
5 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
51 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
55 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
26 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
52 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = euro;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"147 323 LINE",
"90 323 LINE",
"90 376 LINE",
"147 376 LINE",
"147 393 LINE",
"90 393 LINE",
"90 612 LINE SMOOTH",
"90 657.333 OFFCURVE",
"110.667 675 OFFCURVE",
"132 675 CURVE SMOOTH",
"140 675 LINE SMOOTH",
"160 675 OFFCURVE",
"181 657.333 OFFCURVE",
"181 612 CURVE SMOOTH",
"181 417 LINE",
"217 417 LINE",
"217 617 LINE SMOOTH",
"217 674.421 OFFCURVE",
"183.643 705 OFFCURVE",
"143 705 CURVE SMOOTH",
"129 705 LINE SMOOTH",
"88.357 705 OFFCURVE",
"55 674.421 OFFCURVE",
"55 617 CURVE SMOOTH",
"55 393 LINE",
"24 393 LINE",
"24 376 LINE",
"55 376 LINE",
"55 323 LINE",
"24 323 LINE",
"24 307 LINE",
"55 307 LINE",
"55 82 LINE SMOOTH",
"55 24.579 OFFCURVE",
"88.357 -6 OFFCURVE",
"129 -6 CURVE SMOOTH",
"143 -6 LINE SMOOTH",
"183.643 -6 OFFCURVE",
"217 24.579 OFFCURVE",
"217 82 CURVE SMOOTH",
"217 283 LINE",
"181 283 LINE",
"181 87 LINE SMOOTH",
"181 41.667 OFFCURVE",
"160 24 OFFCURVE",
"140 24 CURVE SMOOTH",
"132 24 LINE SMOOTH",
"110.667 24 OFFCURVE",
"90 41.667 OFFCURVE",
"90 87 CURVE SMOOTH",
"90 307 LINE",
"147 307 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
60 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
60 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
27 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
31 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
43 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
45 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
53 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
57 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
61 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
37 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
37 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
17 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
17 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
55 0 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
55 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
37 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
49 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 238;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"179 467 LINE",
"179 495 LINE",
"119 495 LINE",
"119 623 LINE SMOOTH",
"119 663 OFFCURVE",
"149 683 OFFCURVE",
"181 675 CURVE",
"181 702 LINE",
"121.733 717.461 OFFCURVE",
"86 679.962 OFFCURVE",
"86 625 CURVE SMOOTH",
"86 495 LINE",
"26 495 LINE",
"26 467 LINE",
"86 467 LINE",
"86 -88 LINE SMOOTH",
"86 -128 OFFCURVE",
"56 -148 OFFCURVE",
"24 -140 CURVE",
"24 -167 LINE",
"86.667 -183 OFFCURVE",
"119 -143 OFFCURVE",
"119 -91 CURVE SMOOTH",
"119 467 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
1 6 8 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 2 values pushed */
0 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 205;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"184 669 LINE",
"184 699 LINE",
"53 699 LINE",
"53 194 LINE",
"24 194 LINE",
"24 169 LINE",
"53 169 LINE",
"53 0 LINE",
"89 0 LINE",
"89 169 LINE",
"119 169 LINE",
"119 194 LINE",
"89 194 LINE",
"89 336 LINE",
"162 336 LINE",
"162 363 LINE",
"89 363 LINE",
"89 669 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
9 4 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
14 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
15 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
2 3 3 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
0 1 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 208;
}
);
note = franc;
unicode = 20A3;
},
{
glyphname = naira;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"249 408 LINE",
"249 699 LINE",
"216 699 LINE",
"216 408 LINE",
"160 408 LINE",
"106 699 LINE",
"64 699 LINE",
"64 408 LINE",
"24 408 LINE",
"24 383 LINE",
"64 383 LINE",
"64 320 LINE",
"24 320 LINE",
"24 295 LINE",
"64 295 LINE",
"64 0 LINE",
"94 0 LINE",
"94 295 LINE",
"151 295 LINE",
"207 0 LINE",
"249 0 LINE",
"249 295 LINE",
"284 295 LINE",
"284 320 LINE",
"249 320 LINE",
"249 383 LINE",
"284 383 LINE",
"284 408 LINE"
);
},
{
closed = 1;
nodes = (
"95 595 LINE",
"130 408 LINE",
"94 408 LINE",
"94 595 LINE"
);
},
{
closed = 1;
nodes = (
"181 295 LINE",
"216 295 LINE",
"216 108 LINE"
);
},
{
closed = 1;
nodes = (
"94 383 LINE",
"134 383 LINE",
"146 320 LINE",
"94 320 LINE"
);
},
{
closed = 1;
nodes = (
"165 383 LINE",
"216 383 LINE",
"216 320 LINE",
"176 320 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
43 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
24 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
27 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
2 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
11 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
16 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
28 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
11 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
40 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
27 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
4 3 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 3 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
19 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
32 7 21 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
37 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 308;
}
);
note = uni20A6;
unicode = 20A6;
},
{
glyphname = peseta;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"71 699 LINE",
"71 507 LINE",
"24 507 LINE",
"24 482 LINE",
"71 482 LINE",
"71 0 LINE",
"107 0 LINE",
"107 304 LINE",
"166 304 LINE SMOOTH",
"204.667 304 OFFCURVE",
"233 325.667 OFFCURVE",
"233 379 CURVE SMOOTH",
"233 482 LINE",
"264 482 LINE",
"264 507 LINE",
"233 507 LINE",
"233 611 LINE SMOOTH",
"233 671 OFFCURVE",
"197.667 699 OFFCURVE",
"159 699 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 669 LINE",
"156 669 LINE SMOOTH",
"177.333 669 OFFCURVE",
"198 651.333 OFFCURVE",
"198 606 CURVE SMOOTH",
"198 507 LINE",
"107 507 LINE"
);
},
{
closed = 1;
nodes = (
"198 390 LINE SMOOTH",
"198 351.333 OFFCURVE",
"184.333 333 OFFCURVE",
"163 333 CURVE SMOOTH",
"107 333 LINE",
"107 482 LINE",
"198 482 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
14 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
14 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 288;
}
);
note = peseta;
unicode = 20A7;
},
{
glyphname = rupeeIndian;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 547 LINE",
"173 547 LINE",
"173 423 LINE SMOOTH",
"173 384.333 OFFCURVE",
"151 364 OFFCURVE",
"127 364 CURVE SMOOTH",
"34 364 LINE",
"34 343 LINE",
"160 0 LINE",
"200 0 LINE",
"73 339 LINE",
"140 339 LINE SMOOTH",
"174.515 339 OFFCURVE",
"206 370.778 OFFCURVE",
"206 420 CURVE SMOOTH",
"206 547 LINE",
"258 547 LINE",
"258 575 LINE",
"206 575 LINE",
"206 618 LINE SMOOTH",
"206 640.667 OFFCURVE",
"200.333 656.333 OFFCURVE",
"191 671 CURVE",
"258 671 LINE",
"258 699 LINE",
"24 699 LINE",
"24 671 LINE",
"127 671 LINE SMOOTH",
"151 671 OFFCURVE",
"173 654.667 OFFCURVE",
"173 612 CURVE SMOOTH",
"173 575 LINE",
"24 575 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
14 0 3 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
1 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
10 0 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
14 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
24 0 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
25 0 14 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
7 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
25 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
25 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
15 3 16 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
29 3 23 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
15 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
7 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
5 3 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
16 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
33 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 282;
}
);
note = uni20B9;
unicode = 20B9;
},
{
glyphname = sterling;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"21 260 LINE",
"62 260 LINE",
"62 120 LINE SMOOTH",
"62 73.333 OFFCURVE",
"57 43.667 OFFCURVE",
"47 31 CURVE",
"47 0 LINE",
"224 0 LINE",
"224 31 LINE",
"84 31 LINE",
"90.667 44.333 OFFCURVE",
"97 73.333 OFFCURVE",
"97 120 CURVE SMOOTH",
"97 260 LINE",
"224 260 LINE",
"224 291 LINE",
"97 291 LINE",
"97 612 LINE SMOOTH",
"97 657.333 OFFCURVE",
"117.667 675 OFFCURVE",
"139 675 CURVE SMOOTH",
"147 675 LINE SMOOTH",
"167 675 OFFCURVE",
"188 657.333 OFFCURVE",
"188 612 CURVE SMOOTH",
"188 417 LINE",
"224 417 LINE",
"224 617 LINE SMOOTH",
"224 674.421 OFFCURVE",
"190.643 705 OFFCURVE",
"150 705 CURVE SMOOTH",
"136 705 LINE SMOOTH",
"100 705 OFFCURVE",
"62 678.333 OFFCURVE",
"62 617 CURVE SMOOTH",
"62 291 LINE",
"21 291 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
38 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
38 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
13 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
12 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
22 4 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
22 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
29 1 22 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
30 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
35 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
39 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
31 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
31 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
23 1 24 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
17 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
31 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
29 1 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
24 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 245;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 317 LINE",
"24 292 LINE",
"78 292 LINE",
"100 0 LINE",
"141 0 LINE",
"169 292 LINE",
"226 292 LINE",
"258 0 LINE",
"295 0 LINE",
"316 292 LINE",
"367 292 LINE",
"367 317 LINE",
"318 317 LINE",
"323 386 LINE",
"367 386 LINE",
"367 411 LINE",
"325 411 LINE",
"347 699 LINE",
"315 699 LINE",
"294 411 LINE",
"241 411 LINE",
"211 699 LINE",
"180 699 LINE",
"153 411 LINE",
"102 411 LINE",
"81 699 LINE",
"47 699 LINE",
"69 411 LINE",
"24 411 LINE",
"24 386 LINE",
"71 386 LINE",
"76 317 LINE"
);
},
{
closed = 1;
nodes = (
"178 386 LINE",
"215 386 LINE",
"223 317 LINE",
"172 317 LINE"
);
},
{
closed = 1;
nodes = (
"243 386 LINE",
"292 386 LINE",
"287 317 LINE",
"251 317 LINE"
);
},
{
closed = 1;
nodes = (
"272 116 LINE",
"253 292 LINE",
"285 292 LINE",
"273 116 LINE"
);
},
{
closed = 1;
nodes = (
"104 386 LINE",
"150 386 LINE",
"144 317 LINE",
"109 317 LINE"
);
},
{
closed = 1;
nodes = (
"124 116 LINE",
"111 292 LINE",
"141 292 LINE",
"125 116 LINE"
);
},
{
closed = 1;
nodes = (
"196 566 LINE",
"213 411 LINE",
"181 411 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
13 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
13 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
23 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
27 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
27 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
20 3 21 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 3 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
7 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
11 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
17 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
29 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
32 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
34 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
36 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
38 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
41 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
20 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
44 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
46 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
21 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
49 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
52 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
54 23 5 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 391;
}
);
note = uni20A9;
unicode = 20A9;
},
{
glyphname = yen;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"7 187 LINE",
"7 162 LINE",
"80 162 LINE",
"80 0 LINE",
"115 0 LINE",
"115 162 LINE",
"187 162 LINE",
"187 187 LINE",
"115 187 LINE",
"116 241 LINE",
"187 241 LINE",
"187 266 LINE",
"116 266 LINE",
"116 274 LINE",
"190 699 LINE",
"154 699 LINE",
"98 357 LINE",
"97 357 LINE",
"41 699 LINE",
"5 699 LINE",
"80 274 LINE",
"80 266 LINE",
"7 266 LINE",
"7 241 LINE",
"80 241 LINE",
"80 187 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
17 4 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
4 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
9 0 17 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
17 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
22 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
6 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
10 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
18 3 19 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 3 1 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
18 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 3 values pushed */
9 21 6 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
13 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
19 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
23 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 195;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = plus;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 362 LINE",
"24 337 LINE",
"125 337 LINE",
"125 202 LINE",
"153 202 LINE",
"153 337 LINE",
"254 337 LINE",
"254 362 LINE",
"153 362 LINE",
"153 498 LINE",
"125 498 LINE",
"125 362 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
4 3 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 278;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 362 LINE",
"24 337 LINE",
"211 337 LINE",
"211 362 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
0 3 1 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 235;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"3 255 LINE",
"23 236 LINE",
"117 330 LINE",
"212 236 LINE",
"232 255 LINE",
"137 350 LINE",
"232 445 LINE",
"212 464 LINE",
"117 369 LINE",
"23 464 LINE",
"3 445 LINE",
"98 350 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 236;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = divide;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"318 362 LINE",
"22 362 LINE",
"22 337 LINE",
"318 337 LINE"
);
},
{
closed = 1;
nodes = (
"188 471 LINE",
"152 471 LINE",
"152 396 LINE",
"188 396 LINE"
);
},
{
closed = 1;
nodes = (
"188 302 LINE",
"152 302 LINE",
"152 227 LINE",
"188 227 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
4 4 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
3 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 340;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 408 LINE",
"24 383 LINE",
"264 383 LINE",
"264 408 LINE"
);
},
{
closed = 1;
nodes = (
"24 320 LINE",
"24 295 LINE",
"264 295 LINE",
"264 320 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
4 3 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
0 3 1 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 288;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 8 LINE",
"25 8 LINE",
"217 236 LINE",
"217 256 LINE",
"25 487 LINE",
"24 486 LINE",
"24 448 LINE",
"25 446 LINE",
"186 249 LINE",
"186 245 LINE",
"25 50 LINE",
"24 48 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
7 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 241;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"217 49 LINE",
"216 50 LINE",
"56 246 LINE",
"56 249 LINE",
"216 447 LINE",
"217 448 LINE",
"217 487 LINE",
"216 488 LINE",
"24 257 LINE",
"24 237 LINE",
"216 8 LINE",
"217 9 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
5 1 4 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 241;
}
);
note = less;
unicode = 003C;
},
{
glyphname = plusminus;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"24 431 LINE",
"24 406 LINE",
"125 406 LINE",
"125 271 LINE",
"153 271 LINE",
"153 406 LINE",
"254 406 LINE",
"254 431 LINE",
"153 431 LINE",
"153 567 LINE",
"125 567 LINE",
"125 431 LINE"
);
},
{
closed = 1;
nodes = (
"225 115 LINE",
"51 115 LINE",
"51 90 LINE",
"225 90 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
3 5 0 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
3 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
6 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
8 
MDRP[10000]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
15 3 12 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
4 3 5 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
4 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
0 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 278;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"45 216 LINE",
"59.667 238.667 OFFCURVE",
"73 247 OFFCURVE",
"93 247 CURVE SMOOTH",
"117.353 247 OFFCURVE",
"157.013 209 OFFCURVE",
"188 209 CURVE SMOOTH",
"218.667 209 OFFCURVE",
"234.667 221.333 OFFCURVE",
"252 252 CURVE",
"229 270 LINE",
"215 249.333 OFFCURVE",
"199.333 239 OFFCURVE",
"182 239 CURVE SMOOTH",
"150.596 239 OFFCURVE",
"115.654 278 OFFCURVE",
"86 278 CURVE SMOOTH",
"56.667 278 OFFCURVE",
"41.333 262 OFFCURVE",
"24 234 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
8 1 14 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
3 1 19 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 276;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"266 362 LINE",
"24 362 LINE",
"24 337 LINE",
"239 337 LINE",
"239 237 LINE",
"266 237 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 5 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
5 3 2 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 290;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"219 414 LINE",
"220 415 LINE",
"143 699 LINE",
"101 699 LINE",
"24 415 LINE",
"25 414 LINE",
"57 414 LINE",
"58 415 LINE",
"120 643 LINE",
"124 643 LINE",
"186 415 LINE",
"188 414 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 0 8 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 244;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = micro;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"169 495 LINE",
"135 495 LINE",
"135 87 LINE SMOOTH",
"135 51 OFFCURVE",
"111.667 25 OFFCURVE",
"93 25 CURVE SMOOTH",
"89 25 LINE SMOOTH",
"71.667 25 OFFCURVE",
"53 42 OFFCURVE",
"53 78 CURVE SMOOTH",
"53 495 LINE",
"20 495 LINE",
"20 -165 LINE",
"53 -165 LINE",
"53 2 LINE",
"61 -1.333 OFFCURVE",
"69 -3 OFFCURVE",
"77 -3 CURVE SMOOTH",
"80 -3 LINE SMOOTH",
"98.667 -3 OFFCURVE",
"119 11.667 OFFCURVE",
"135 33 CURVE",
"135 0 LINE",
"169 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
23 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
23 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
10 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
10 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
9 6 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
12 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
20 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
0 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
24 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
21 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
21 11 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
9 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
9 9 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
5 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
2 9 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 189;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = percent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"347 699 LINE",
"86 0 LINE",
"59 0 LINE",
"320 699 LINE"
);
},
{
closed = 1;
nodes = (
"98 305 LINE SMOOTH",
"128.667 305 OFFCURVE",
"159 331 OFFCURVE",
"159 379 CURVE SMOOTH",
"159 631 LINE SMOOTH",
"159 679 OFFCURVE",
"128.667 705 OFFCURVE",
"98 705 CURVE SMOOTH",
"85 705 LINE SMOOTH",
"54.333 705 OFFCURVE",
"25.333 679 OFFCURVE",
"24 631 CURVE SMOOTH",
"24 379 LINE SMOOTH",
"24 331 OFFCURVE",
"54.333 305 OFFCURVE",
"85 305 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"96 682 LINE SMOOTH",
"113.333 682 OFFCURVE",
"132 664.667 OFFCURVE",
"132 630 CURVE SMOOTH",
"132 380 LINE SMOOTH",
"132 345.333 OFFCURVE",
"113.333 328 OFFCURVE",
"96 328 CURVE SMOOTH",
"88 328 LINE SMOOTH",
"69.333 328 OFFCURVE",
"51 345.333 OFFCURVE",
"51 380 CURVE SMOOTH",
"51 630 LINE SMOOTH",
"51 664.667 OFFCURVE",
"69.333 682 OFFCURVE",
"88 682 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"323 -6 LINE SMOOTH",
"355 -6 OFFCURVE",
"384 20 OFFCURVE",
"384 68 CURVE SMOOTH",
"384 324 LINE SMOOTH",
"384 373.333 OFFCURVE",
"355 398 OFFCURVE",
"323 398 CURVE SMOOTH",
"311 398 LINE SMOOTH",
"279 398 OFFCURVE",
"250.333 373.333 OFFCURVE",
"249 324 CURVE SMOOTH",
"249 68 LINE SMOOTH",
"249 20 OFFCURVE",
"279 -6 OFFCURVE",
"311 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"321 375 LINE SMOOTH",
"339.667 375 OFFCURVE",
"357 359 OFFCURVE",
"357 323 CURVE SMOOTH",
"357 69 LINE SMOOTH",
"357 34.333 OFFCURVE",
"339.667 17 OFFCURVE",
"321 17 CURVE SMOOTH",
"313 17 LINE SMOOTH",
"295.667 17 OFFCURVE",
"277 34.333 OFFCURVE",
"277 69 CURVE SMOOTH",
"277 323 LINE SMOOTH",
"277 359 OFFCURVE",
"295.667 375 OFFCURVE",
"313 375 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 5 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 5 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 5 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
48 5 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
1 7 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
3 7 48 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
48 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
69 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 3 values pushed */
3 36 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 408;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"344 699 LINE",
"83 0 LINE",
"57 0 LINE",
"317 699 LINE"
);
},
{
closed = 1;
nodes = (
"95 305 LINE SMOOTH",
"127 305 OFFCURVE",
"156 331 OFFCURVE",
"156 379 CURVE SMOOTH",
"156 631 LINE SMOOTH",
"156 679 OFFCURVE",
"127 705 OFFCURVE",
"95 705 CURVE SMOOTH",
"83 705 LINE SMOOTH",
"51 705 OFFCURVE",
"22.333 679 OFFCURVE",
"21 631 CURVE SMOOTH",
"21 379 LINE SMOOTH",
"21 331 OFFCURVE",
"51 305 OFFCURVE",
"83 305 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"93 682 LINE SMOOTH",
"111.667 682 OFFCURVE",
"129 664.667 OFFCURVE",
"129 630 CURVE SMOOTH",
"129 380 LINE SMOOTH",
"129 345.333 OFFCURVE",
"111.667 328 OFFCURVE",
"93 328 CURVE SMOOTH",
"85 328 LINE SMOOTH",
"66.333 328 OFFCURVE",
"49 345.333 OFFCURVE",
"49 380 CURVE SMOOTH",
"49 630 LINE SMOOTH",
"49 664.667 OFFCURVE",
"66.333 682 OFFCURVE",
"85 682 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"320 -6 LINE SMOOTH",
"352 -6 OFFCURVE",
"381 20 OFFCURVE",
"381 68 CURVE SMOOTH",
"381 324 LINE SMOOTH",
"381 373.333 OFFCURVE",
"352 398 OFFCURVE",
"320 398 CURVE SMOOTH",
"308 398 LINE SMOOTH",
"276 398 OFFCURVE",
"247.333 373.333 OFFCURVE",
"246 324 CURVE SMOOTH",
"246 68 LINE SMOOTH",
"246 20 OFFCURVE",
"276 -6 OFFCURVE",
"308 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"318 375 LINE SMOOTH",
"336.667 375 OFFCURVE",
"354 359 OFFCURVE",
"354 323 CURVE SMOOTH",
"354 69 LINE SMOOTH",
"354 34.333 OFFCURVE",
"336.667 17 OFFCURVE",
"318 17 CURVE SMOOTH",
"311 17 LINE SMOOTH",
"292.333 17 OFFCURVE",
"274 34.333 OFFCURVE",
"274 69 CURVE SMOOTH",
"274 323 LINE SMOOTH",
"274 359 OFFCURVE",
"292.333 375 OFFCURVE",
"311 375 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"481 -6 LINE SMOOTH",
"513 -6 OFFCURVE",
"543 20 OFFCURVE",
"543 68 CURVE SMOOTH",
"543 324 LINE SMOOTH",
"543 373.333 OFFCURVE",
"513 398 OFFCURVE",
"481 398 CURVE SMOOTH",
"469 398 LINE SMOOTH",
"438.333 398 OFFCURVE",
"408 373.333 OFFCURVE",
"408 324 CURVE SMOOTH",
"408 68 LINE SMOOTH",
"408 20 OFFCURVE",
"438.333 -6 OFFCURVE",
"469 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"480 375 LINE SMOOTH",
"497.333 375 OFFCURVE",
"515 359 OFFCURVE",
"515 323 CURVE SMOOTH",
"515 69 LINE SMOOTH",
"515 34.333 OFFCURVE",
"497.333 17 OFFCURVE",
"480 17 CURVE SMOOTH",
"472 17 LINE SMOOTH",
"453.333 17 OFFCURVE",
"435 34.333 OFFCURVE",
"435 69 CURVE SMOOTH",
"435 323 LINE SMOOTH",
"435 359 OFFCURVE",
"453.333 375 OFFCURVE",
"472 375 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
24 5 7 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
16 5 31 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
56 5 39 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
48 5 63 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
88 5 71 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 4 values pushed */
80 5 95 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
1 7 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 3 values pushed */
3 7 80 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
80 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
101 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
1 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
36 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
36 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
68 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
68 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
PUSHW[ ]\011/* 4 values pushed */
43 2 52 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 3 values pushed */
3 36 11 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
PUSHW[ ]\011/* 1 value pushed */
36 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
59 2 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
43 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
75 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
52 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
84 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
59 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
91 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
92 
MDRP[10000]\011/* MoveDirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 564;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = dieresis;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"58 674 LINE",
"34 674 LINE",
"34 611 LINE",
"58 611 LINE"
);
},
{
closed = 1;
nodes = (
"115 674 LINE",
"91 674 LINE",
"91 611 LINE",
"115 611 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
8 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
1 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
0 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
4 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 149;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"58 675 LINE",
"34 675 LINE",
"34 612 LINE",
"58 612 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
0 5 1 4 
CALL[ ]\011/* CallFunction */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 92;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"112 597 LINE",
"66 683 LINE",
"34 683 LINE",
"89 597 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 146;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = acute;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"57 597 LINE",
"112 683 LINE",
"80 683 LINE",
"34 597 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 146;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"111 594 LINE",
"166 680 LINE",
"134 680 LINE",
"88 594 LINE"
);
},
{
closed = 1;
nodes = (
"57 594 LINE",
"112 680 LINE",
"80 680 LINE",
"34 594 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 200;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = circumflex;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"79 683 LINE",
"24 597 LINE",
"56 597 LINE",
"95 666 LINE",
"135 597 LINE",
"167 597 LINE",
"112 683 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 1 0 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 191;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"122 600 LINE",
"177 686 LINE",
"145 686 LINE",
"105 616 LINE",
"66 686 LINE",
"34 686 LINE",
"89 600 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
4 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 0 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 211;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"34 671 LINE",
"34 640.333 OFFCURVE",
"60.667 615 OFFCURVE",
"90 615 CURVE SMOOTH",
"123.333 615 OFFCURVE",
"148 640.333 OFFCURVE",
"148 671 CURVE",
"127 671 LINE",
"127 652.333 OFFCURVE",
"110 636 OFFCURVE",
"90 636 CURVE SMOOTH",
"71.333 636 OFFCURVE",
"55 652.333 OFFCURVE",
"55 671 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
6 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 4 values pushed */
3 2 10 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 182;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = ring;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"120 587 OFFCURVE",
"144 612 OFFCURVE",
"144 640 CURVE SMOOTH",
"144 672 OFFCURVE",
"117.667 696 OFFCURVE",
"87 696 CURVE SMOOTH",
"57.667 696 OFFCURVE",
"34 670.667 OFFCURVE",
"34 640 CURVE SMOOTH",
"34 610.667 OFFCURVE",
"60 587 OFFCURVE",
"88 587 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106.667 677 OFFCURVE",
"124 660 OFFCURVE",
"124 640 CURVE SMOOTH",
"124 622.667 OFFCURVE",
"106.667 605 OFFCURVE",
"88 605 CURVE SMOOTH",
"69.333 605 OFFCURVE",
"53 622.667 OFFCURVE",
"53 640 CURVE SMOOTH",
"53 660 OFFCURVE",
"69.333 677 OFFCURVE",
"88 677 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 3 values pushed */
9 3 3 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 27 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 102 9 118 9 134 9 150 9 166 9 182 9 198 9 13 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 5 values pushed */
213 9 229 9 2 
DELTAP1[ ]\011/* DeltaExceptionP1 */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 2 values pushed */
21 5 
MIRP[10100]\011/* MoveIndirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
9 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
25 
MDRP[11100]\011/* MoveDirectRelPt */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 3 values pushed */
6 0 3 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 178;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = tilde;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"49 629 LINE",
"56.333 638.333 OFFCURVE",
"66 643 OFFCURVE",
"78 643 CURVE SMOOTH",
"97.889 643 OFFCURVE",
"120.276 621 OFFCURVE",
"140 621 CURVE SMOOTH",
"156.667 621 OFFCURVE",
"169.667 629 OFFCURVE",
"179 645 CURVE",
"162 656 LINE",
"154 646.667 OFFCURVE",
"145 642 OFFCURVE",
"135 642 CURVE SMOOTH",
"124.333 642 OFFCURVE",
"113.833 645.667 OFFCURVE",
"103.5 653 CURVE SMOOTH",
"93.167 660.333 OFFCURVE",
"82.667 664 OFFCURVE",
"72 664 CURVE SMOOTH",
"56 664 OFFCURVE",
"43.333 656 OFFCURVE",
"34 640 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
5 2 10 4 
CALL[ ]\011/* CallFunction */
PUSHW[ ]\011/* 1 value pushed */
5 
SRP0[ ]\011/* SetRefPoint0 */
PUSHW[ ]\011/* 1 value pushed */
15 
MDRP[10000]\011/* MoveDirectRelPt */
PUSHW[ ]\011/* 1 value pushed */
15 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 2 values pushed */
2 2 
MIRP[10100]\011/* MoveIndirectRelPt */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 213;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"144 655 LINE",
"30 655 LINE",
"30 630 LINE",
"144 630 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 4 values pushed */
3 3 0 4 
CALL[ ]\011/* CallFunction */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 177;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"65.151 -111.036 OFFCURVE",
"144 -100.013 OFFCURVE",
"144 -49 CURVE SMOOTH",
"144 -23.667 OFFCURVE",
"116.667 -9.333 OFFCURVE",
"94 -20 CURVE",
"102 0 LINE",
"81 0 LINE",
"68 -29 LINE",
"76 -32 LINE",
"92 -21.333 OFFCURVE",
"117.667 -29 OFFCURVE",
"119 -49 CURVE SMOOTH",
"121.416 -82.818 OFFCURVE",
"63.71 -85.996 OFFCURVE",
"38 -66 CURVE",
"34 -83 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
11 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
11 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 178;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = ogonek;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"109 -53 LINE",
"92.066 -81.224 OFFCURVE",
"55 -76.339 OFFCURVE",
"55 -45 CURVE",
"53.667 -29 OFFCURVE",
"68.333 -9.333 OFFCURVE",
"91 0 CURVE",
"62 0 LINE",
"44.667 -13.333 OFFCURVE",
"34 -29 OFFCURVE",
"34 -49 CURVE SMOOTH",
"34 -97.676 OFFCURVE",
"103.082 -104.242 OFFCURVE",
"122 -61 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]\011/* 4 values pushed */
12 5 5 4 
CALL[ ]\011/* CallFunction */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP1[ ]\011/* DeltaExceptionP1 */
NPUSHW[ ]\011/* 33 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 
DELTAP2[ ]\011/* DeltaExceptionP2 */
NPUSHW[ ]\011/* 19 values pushed */
6 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 9 
DELTAP3[ ]\011/* DeltaExceptionP3 */
NPUSHW[ ]\011/* 5 values pushed */
149 12 165 12 2 
DELTAP3[ ]\011/* DeltaExceptionP3 */
SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
8 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
8 7 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 156;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = NULL;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = NULL;
},
{
glyphname = _0007;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = _0007;
},
{
glyphname = _0024;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = _0024;
},
{
glyphname = quoteaccent;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"1 591 LINE",
"27 591 LINE",
"27 649 LINE",
"19 649 LINE",
"31 694 LINE",
"16 694 LINE",
"1 649 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
1 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
5 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 3 values pushed */
3 5 1 
SRP1[ ]\011/* SetRefPoint1 */
SRP2[ ]\011/* SetRefPoint2 */
IP[ ]\011/* InterpolatePts */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = quoteaccent;
},
{
glyphname = "accent margin";
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
paths = (
{
closed = 1;
nodes = (
"81 587 LINE",
"93 587 LINE",
"93 699 LINE",
"81 699 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]\011/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]\011/* 1 value pushed */
2 
MDAP[1]\011/* MoveDirectAbsPt */
PUSHW[ ]\011/* 1 value pushed */
0 
RCVT[ ]\011/* ReadCVT */
IF[ ]\011/* If */
PUSHW[ ]\011/* 1 value pushed */
0 
MDAP[1]\011/* MoveDirectAbsPt */
ELSE[ ]\011/* Else */
PUSHW[ ]\011/* 2 values pushed */
0 13 
MIAP[0]\011/* MoveIndirectAbsPt */
EIF[ ]\011/* EndIf */
IUP[0]\011/* InterpolateUntPts */
IUP[1]\011/* InterpolateUntPts */";
};
width = 0;
}
);
note = "accent margin";
},
{
glyphname = _0158;
layers = (
{
layerId = "14B2064F-49AA-4860-BD4E-8ABAFB41335C";
width = 0;
}
);
note = _0158;
}
);
instances = (
{
name = Light;
weightClass = Light;
}
);
kerning = {
"14B2064F-49AA-4860-BD4E-8ABAFB41335C" = {
A = {
T = -40;
V = -25;
W = -25;
Y = -36;
quotedbl = -59;
quotesingle = -49;
t = -6;
v = -15;
w = -15;
y = -20;
};
B = {
Y = -3;
};
D = {
Y = -5;
};
E = {
v = -25;
};
F = {
A = -27;
a = -26;
comma = -72;
e = -26;
f = -29;
i = -18;
o = -26;
period = -74;
r = -23;
t = -18;
u = -26;
y = -22;
};
K = {
O = -3;
e = -3;
o = -3;
u = -3;
v = -6;
w = -6;
y = -6;
};
L = {
T = -30;
V = -27;
W = -23;
Y = -35;
quotedbl = -81;
quotesingle = -76;
y = -35;
};
O = {
V = -2;
X = -8;
Y = -7;
};
P = {
A = -20;
comma = -115;
period = -130;
};
R = {
V = -5;
W = -5;
Y = -5;
};
T = {
A = -23;
a = -43;
c = -39;
colon = -9;
comma = -39;
e = -39;
hyphen = -41;
i = -18;
o = -43;
period = -39;
r = -43;
s = -43;
semicolon = -35;
u = -43;
w = -44;
y = -44;
};
V = {
A = -28;
a = -14;
comma = -35;
e = -13;
hyphen = -6;
o = -13;
period = -40;
r = -10;
u = -10;
y = -3;
};
W = {
A = -28;
a = -14;
comma = -35;
d = -13;
e = -13;
hyphen = -6;
m = -10;
o = -13;
period = -33;
r = -12;
t = -3;
u = -10;
y = -3;
};
X = {
a = -3;
e = -5;
o = -5;
u = -3;
y = -9;
};
Y = {
A = -33;
colon = -6;
comma = -39;
d = -30;
e = -31;
hyphen = -28;
i = -6;
o = -11;
p = -18;
period = -55;
semicolon = -30;
u = -21;
v = -8;
};
a = {
f = -14;
j = -44;
};
b = {
y = -3;
};
e = {
comma = -2;
period = -7;
w = -3;
y = -5;
};
f = {
comma = -41;
f = -26;
period = -36;
};
h = {
v = -2;
w = -2;
y = -2;
};
i = {
j = -41;
};
k = {
a = -5;
c = -5;
d = -5;
e = -5;
g = -5;
j = -27;
o = -6;
};
m = {
v = -2;
y = -3;
};
n = {
j = -35;
v = -2;
w = -2;
y = -3;
};
o = {
f = -17;
j = -42;
x = -5;
y = -5;
};
oe = {
j = -44;
};
quotesingle = {
S = -18;
};
r = {
comma = -93;
period = -82;
t = -4;
};
s = {
j = -44;
t = -5;
};
t = {
a = -7;
d = -7;
e = -7;
o = -7;
};
v = {
a = -2;
comma = -21;
g = -2;
o = -2;
period = -22;
};
w = {
comma = -21;
period = -23;
};
x = {
a = -3;
e = -6;
o = -6;
};
y = {
a = -2;
c = -2;
comma = -23;
d = -2;
e = -2;
l = 3;
o = -2;
period = -35;
};
};
};
manufacturer = "Rajesh Rajput";
manufacturerURL = "https://behance.net/rajputrajesh";
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
